/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 15:19:58 GMT 2024
 */

package org.apache.commons.graph.shortestpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.UnknownFormatConversionException;
import org.apache.commons.graph.shortestpath.NegativeWeightedCycleException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NegativeWeightedCycleException_ESTest extends NegativeWeightedCycleException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      Object[] objectArray0 = new Object[3];
      NegativeWeightedCycleException negativeWeightedCycleException0 = null;
      try {
        negativeWeightedCycleException0 = new NegativeWeightedCycleException("a%mGB+4,$>", mockThrowable0, objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'm'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      NegativeWeightedCycleException negativeWeightedCycleException0 = new NegativeWeightedCycleException((String) null, (Throwable) null, objectArray0);
      MockThrowable mockThrowable0 = new MockThrowable("qlp$", negativeWeightedCycleException0);
      NegativeWeightedCycleException negativeWeightedCycleException1 = null;
      try {
        negativeWeightedCycleException1 = new NegativeWeightedCycleException((String) null, mockThrowable0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
