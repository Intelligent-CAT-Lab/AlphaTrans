/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 14:36:29 GMT 2024
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.NoSuchElementException;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.binary.Base16InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base16InputStream_ESTest extends Base16InputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;
      Base16InputStream base16InputStream0 = new Base16InputStream((InputStream) null, true, false, codecPolicy0);
      assertFalse(base16InputStream0.markSupported());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Base16InputStream.Base16InputStream3(pipedInputStream0);
      // Undeclared exception!
      try { 
        Base16InputStream.Base16InputStream3(pipedInputStream0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Base16InputStream base16InputStream0 = Base16InputStream.Base16InputStream1(pipedInputStream0, false, false);
      // Undeclared exception!
      try { 
        Base16InputStream.Base16InputStream2(base16InputStream0, true);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Base16InputStream base16InputStream0 = Base16InputStream.Base16InputStream2((InputStream) null, true);
      assertFalse(base16InputStream0.markSupported());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Base16InputStream.Base16InputStream3(pipedInputStream0);
      // Undeclared exception!
      try { 
        Base16InputStream.Base16InputStream1(pipedInputStream0, false, false);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
