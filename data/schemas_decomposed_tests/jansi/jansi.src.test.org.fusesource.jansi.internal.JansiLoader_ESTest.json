{
    "path": "java_projects/cleaned_final_projects_evosuite/jansi/src/test/java/org/fusesource/jansi/internal/JansiLoader_ESTest.java",
    "imports": {
        "18-18:import Future": {
            "start": 18,
            "end": 18,
            "body": [
                "import java.util.concurrent.Future;\n"
            ]
        },
        "19-19:import TimeUnit": {
            "start": 19,
            "end": 19,
            "body": [
                "import java.util.concurrent.TimeUnit;\n"
            ]
        },
        "23-23:import Random": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.evosuite.runtime.Random;\n"
            ]
        },
        "21-21:import EvoRunner": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "22-22:import EvoRunnerParameters": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "24-24:import EvoSuiteFile": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.evosuite.runtime.testdata.EvoSuiteFile;\n"
            ]
        },
        "25-25:import FileSystemHandling": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.evosuite.runtime.testdata.FileSystemHandling;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "27-27:import RunWith": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "29-29:import static Assert.*": {
            "start": 29,
            "end": 29,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "JansiLoader_ESTest": {
            "start": 38,
            "end": 38,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }",
                "new Runnable(...) { ... }"
            ],
            "implements": [],
            "extends": [
                "JansiLoader_ESTest_scaffolding"
            ],
            "methods": {
                "350-377:test8": {
                    "start": 350,
                    "end": 377,
                    "body": [
                        "    public void test8() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getMajorVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getMinorVersion();\n",
                        "                JansiLoader.cleanup();\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test8()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "344-347:test7": {
                    "start": 344,
                    "end": 347,
                    "body": [
                        "    public void test7() throws Throwable {\n",
                        "        int int0 = JansiLoader.getMinorVersion();\n",
                        "        assertEquals(4, int0);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test7()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "370-373:getMinorVersion"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "325-341:test6": {
                    "start": 325,
                    "end": 341,
                    "body": [
                        "    public void test6() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                JansiLoader.getMajorVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getVersion();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test6()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "319-322:test5": {
                    "start": 319,
                    "end": 322,
                    "body": [
                        "    public void test5() throws Throwable {\n",
                        "        int int0 = JansiLoader.getMajorVersion();\n",
                        "        assertEquals(2, int0);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test5()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "306-316:test4": {
                    "start": 306,
                    "end": 316,
                    "body": [
                        "    public void test4() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "290-303:test3": {
                    "start": 290,
                    "end": 303,
                    "body": [
                        "    public void test3() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                boolean boolean0 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "167-287:test2": {
                    "start": 167,
                    "end": 287,
                    "body": [
                        "    public void test2() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                String string0 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string1);\n",
                        "                assertNotNull(string1);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                int int2 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int2 == int1);\n",
                        "                assertEquals(4, int2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int3 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int3 == int0);\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertEquals(2, int3);\n",
                        "\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int3);\n",
                        "                assertEquals(4, int4);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string3 = JansiLoader.getVersion();\n",
                        "                assertTrue(string3.equals((Object) string1));\n",
                        "                assertEquals(\"2.4.2\", string3);\n",
                        "                assertNotNull(string3);\n",
                        "\n",
                        "                int int5 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int5 == int3);\n",
                        "                assertFalse(int5 == int1);\n",
                        "                assertEquals(4, int5);\n",
                        "\n",
                        "                String string4 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string4);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string5 = JansiLoader.getVersion();\n",
                        "                assertTrue(string5.equals((Object) string3));\n",
                        "                assertTrue(string5.equals((Object) string1));\n",
                        "                assertEquals(\"2.4.2\", string5);\n",
                        "                assertNotNull(string5);\n",
                        "\n",
                        "                String string6 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string6);\n",
                        "\n",
                        "                String string7 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string7);\n",
                        "\n",
                        "                String string8 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string8);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int6 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int6 == int3);\n",
                        "                assertFalse(int6 == int1);\n",
                        "                assertEquals(4, int6);\n",
                        "\n",
                        "                int int7 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int7 == int0);\n",
                        "                assertFalse(int7 == int2);\n",
                        "                assertFalse(int7 == int6);\n",
                        "                assertFalse(int7 == int4);\n",
                        "                assertFalse(int7 == int5);\n",
                        "                assertEquals(2, int7);\n",
                        "\n",
                        "                int int8 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int8 == int0);\n",
                        "                assertFalse(int8 == int6);\n",
                        "                assertFalse(int8 == int2);\n",
                        "                assertFalse(int8 == int4);\n",
                        "                assertFalse(int8 == int5);\n",
                        "                assertEquals(2, int8);\n",
                        "\n",
                        "                String string9 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string9);\n",
                        "\n",
                        "                String string10 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string10);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                boolean boolean2 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean2 == boolean0);\n",
                        "                assertFalse(boolean2);\n",
                        "\n",
                        "                String string11 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string11);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "113-164:test1": {
                    "start": 113,
                    "end": 164,
                    "body": [
                        "    public void test1() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                String string0 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string1);\n",
                        "                assertNotNull(string1);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int2 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int2 == int0);\n",
                        "                assertEquals(2, int2);\n",
                        "\n",
                        "                int int3 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertFalse(int3 == int1);\n",
                        "                assertEquals(4, int3);\n",
                        "\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int2);\n",
                        "                assertEquals(4, int4);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                },
                "41-110:test0": {
                    "start": 41,
                    "end": 110,
                    "body": [
                        "    public void test0() throws Throwable {\n",
                        "        Future<?> future = executor.submit(new Runnable() {\n",
                        "            @Override\n",
                        "            public void run() {\n",
                        "                EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/jansi-2.4.2-1-libjansi.so.lck\");\n",
                        "                boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string1);\n",
                        "\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "\n",
                        "                int int2 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int2 == int0);\n",
                        "                assertEquals(2, int2);\n",
                        "\n",
                        "                int int3 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int3 == int1);\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertEquals(4, int3);\n",
                        "\n",
                        "                boolean boolean2 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean2 == boolean0);\n",
                        "                assertFalse(boolean2);\n",
                        "\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int2);\n",
                        "                assertEquals(4, int4);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                String string3 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string3);\n",
                        "                assertNotNull(string3);\n",
                        "\n",
                        "                String string4 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string4);\n",
                        "\n",
                        "                String string5 = JansiLoader.getVersion();\n",
                        "                assertTrue(string5.equals((Object) string3));\n",
                        "                assertEquals(\"2.4.2\", string5);\n",
                        "                assertNotNull(string5);\n",
                        "\n",
                        "                Random.setNextRandom(4);\n",
                        "            }\n",
                        "        });\n",
                        "        future.get(4000, TimeUnit.MILLISECONDS);\n",
                        "    }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/concurrent/ExecutorService",
                            "submit"
                        ],
                        [
                            "library",
                            "java.base/java/util/concurrent/Future",
                            "get"
                        ]
                    ]
                }
            },
            "fields": {}
        },
        "new Runnable(...) { ... }": {
            "start": 42,
            "end": 42,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": "JansiLoader_ESTest",
            "nests": [],
            "implements": [],
            "extends": [],
            "methods": {
                "44-107:run": {
                    "start": 44,
                    "end": 107,
                    "body": [
                        "            public void run() {\n",
                        "                EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"/tmp/jansi-2.4.2-1-libjansi.so.lck\");\n",
                        "                boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string1);\n",
                        "\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "\n",
                        "                int int2 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int2 == int0);\n",
                        "                assertEquals(2, int2);\n",
                        "\n",
                        "                int int3 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int3 == int1);\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertEquals(4, int3);\n",
                        "\n",
                        "                boolean boolean2 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean2 == boolean0);\n",
                        "                assertFalse(boolean2);\n",
                        "\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int2);\n",
                        "                assertEquals(4, int4);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                String string3 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string3);\n",
                        "                assertNotNull(string3);\n",
                        "\n",
                        "                String string4 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string4);\n",
                        "\n",
                        "                String string5 = JansiLoader.getVersion();\n",
                        "                assertTrue(string5.equals((Object) string3));\n",
                        "                assertEquals(\"2.4.2\", string5);\n",
                        "                assertNotNull(string5);\n",
                        "\n",
                        "                Random.setNextRandom(4);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/EvoSuiteFile",
                            "EvoSuiteFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/FileSystemHandling",
                            "createFolder"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "370-373:getMinorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "JansiLoader"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "378-394:getVersion"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "97-99:getNativeLibrarySourceUrl"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "equals"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/Random",
                            "setNextRandom"
                        ]
                    ]
                },
                "116-161:run": {
                    "start": 116,
                    "end": 161,
                    "body": [
                        "            public void run() {\n",
                        "                String string0 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string1);\n",
                        "                assertNotNull(string1);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int2 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int2 == int0);\n",
                        "                assertEquals(2, int2);\n",
                        "\n",
                        "                int int3 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertFalse(int3 == int1);\n",
                        "                assertEquals(4, int3);\n",
                        "\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int2);\n",
                        "                assertEquals(4, int4);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "97-99:getNativeLibrarySourceUrl"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "378-394:getVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "JansiLoader"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "370-373:getMinorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/FileSystemHandling",
                            "shouldAllThrowIOExceptions"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "170-284:run": {
                    "start": 170,
                    "end": 284,
                    "body": [
                        "            public void run() {\n",
                        "                String string0 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string0);\n",
                        "\n",
                        "                String string1 = JansiLoader.getVersion();\n",
                        "                assertEquals(\"2.4.2\", string1);\n",
                        "                assertNotNull(string1);\n",
                        "\n",
                        "                String string2 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                assertNotNull(jansiLoader0);\n",
                        "                assertNull(jansiLoader0.getNativeLibrarySourceUrl());\n",
                        "                assertNull(jansiLoader0.getNativeLibraryPath());\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int0 = JansiLoader.getMinorVersion();\n",
                        "                assertEquals(4, int0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int1 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int1 == int0);\n",
                        "                assertEquals(2, int1);\n",
                        "\n",
                        "                boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();\n",
                        "                assertTrue(boolean0);\n",
                        "\n",
                        "                int int2 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int2 == int1);\n",
                        "                assertEquals(4, int2);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int3 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int3 == int0);\n",
                        "                assertFalse(int3 == int2);\n",
                        "                assertEquals(2, int3);\n",
                        "\n",
                        "                boolean boolean1 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean1 == boolean0);\n",
                        "                assertFalse(boolean1);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int4 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int4 == int1);\n",
                        "                assertFalse(int4 == int3);\n",
                        "                assertEquals(4, int4);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string3 = JansiLoader.getVersion();\n",
                        "                assertTrue(string3.equals((Object) string1));\n",
                        "                assertEquals(\"2.4.2\", string3);\n",
                        "                assertNotNull(string3);\n",
                        "\n",
                        "                int int5 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int5 == int3);\n",
                        "                assertFalse(int5 == int1);\n",
                        "                assertEquals(4, int5);\n",
                        "\n",
                        "                String string4 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string4);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string5 = JansiLoader.getVersion();\n",
                        "                assertTrue(string5.equals((Object) string3));\n",
                        "                assertTrue(string5.equals((Object) string1));\n",
                        "                assertEquals(\"2.4.2\", string5);\n",
                        "                assertNotNull(string5);\n",
                        "\n",
                        "                String string6 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string6);\n",
                        "\n",
                        "                String string7 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string7);\n",
                        "\n",
                        "                String string8 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string8);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                int int6 = JansiLoader.getMinorVersion();\n",
                        "                assertFalse(int6 == int3);\n",
                        "                assertFalse(int6 == int1);\n",
                        "                assertEquals(4, int6);\n",
                        "\n",
                        "                int int7 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int7 == int0);\n",
                        "                assertFalse(int7 == int2);\n",
                        "                assertFalse(int7 == int6);\n",
                        "                assertFalse(int7 == int4);\n",
                        "                assertFalse(int7 == int5);\n",
                        "                assertEquals(2, int7);\n",
                        "\n",
                        "                int int8 = JansiLoader.getMajorVersion();\n",
                        "                assertFalse(int8 == int0);\n",
                        "                assertFalse(int8 == int6);\n",
                        "                assertFalse(int8 == int2);\n",
                        "                assertFalse(int8 == int4);\n",
                        "                assertFalse(int8 == int5);\n",
                        "                assertEquals(2, int8);\n",
                        "\n",
                        "                String string9 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string9);\n",
                        "\n",
                        "                String string10 = JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                assertNull(string10);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                boolean boolean2 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean2 == boolean0);\n",
                        "                assertFalse(boolean2);\n",
                        "\n",
                        "                String string11 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string11);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "97-99:getNativeLibrarySourceUrl"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "378-394:getVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "JansiLoader"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "370-373:getMinorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/FileSystemHandling",
                            "shouldAllThrowIOExceptions"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/String",
                            "equals"
                        ]
                    ]
                },
                "293-300:run": {
                    "start": 293,
                    "end": 300,
                    "body": [
                        "            public void run() {\n",
                        "                boolean boolean0 = JansiLoader.initialize();\n",
                        "                assertFalse(boolean0);\n",
                        "\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "309-313:run": {
                    "start": 309,
                    "end": 313,
                    "body": [
                        "            public void run() {\n",
                        "                JansiLoader.cleanup();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "328-338:run": {
                    "start": 328,
                    "end": 338,
                    "body": [
                        "            public void run() {\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                JansiLoader.getMajorVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getVersion();\n",
                        "                String string0 = JansiLoader.getNativeLibraryPath();\n",
                        "                assertNull(string0);\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "JansiLoader"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "378-394:getVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "353-374:run": {
                    "start": 353,
                    "end": 374,
                    "body": [
                        "            public void run() {\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader jansiLoader0 = new JansiLoader();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.initialize();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getMajorVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.getNativeLibrarySourceUrl();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.getVersion();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getNativeLibraryPath();\n",
                        "                JansiLoader.cleanup();\n",
                        "                JansiLoader.getMinorVersion();\n",
                        "                JansiLoader.cleanup();\n",
                        "            }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Override"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "run()",
                    "parameters": [],
                    "calls": [
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "JansiLoader"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "93-95:getNativeLibraryPath"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "109-132:cleanup"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "378-394:getVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "73-91:initialize"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "362-365:getMajorVersion"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "97-99:getNativeLibrarySourceUrl"
                        ],
                        [
                            "jansi.src.main.org.fusesource.jansi.internal.JansiLoader",
                            "JansiLoader",
                            "370-373:getMinorVersion"
                        ]
                    ]
                },
                "42-42:": {
                    "start": 42,
                    "end": 42,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "114-114:": {
                    "start": 114,
                    "end": 114,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "168-168:": {
                    "start": 168,
                    "end": 168,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "291-291:": {
                    "start": 291,
                    "end": 291,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "307-307:": {
                    "start": 307,
                    "end": 307,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "326-326:": {
                    "start": 326,
                    "end": 326,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                },
                "351-351:": {
                    "start": 351,
                    "end": 351,
                    "body": [
                        "        Future<?> future = executor.submit(new Runnable() {\n"
                    ],
                    "is_constructor": false,
                    "annotations": [],
                    "modifiers": [],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "()",
                    "parameters": [],
                    "calls": []
                }
            },
            "fields": {}
        }
    }
}