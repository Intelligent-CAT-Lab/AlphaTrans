{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-pool/src/test/java/org/apache/commons/pool2/impl/EvictionConfig_ESTest.java",
    "imports": {
        "27-27:import Duration": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.time.Duration;\n"
            ]
        },
        "28-28:import ChronoUnit": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.time.temporal.ChronoUnit;\n"
            ]
        },
        "31-31:import EvoRunnerParameters": {
            "start": 31,
            "end": 31,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "32-32:import RunWith": {
            "start": 32,
            "end": 32,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "30-30:import EvoRunner": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "24-24:import Test": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "29-29:import EvictionConfig": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.apache.commons.pool2.impl.EvictionConfig;\n"
            ]
        },
        "26-26:import static EvoAssertions.*": {
            "start": 26,
            "end": 26,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "25-25:import static Assert.*": {
            "start": 25,
            "end": 25,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "EvictionConfig_ESTest": {
            "start": 35,
            "end": 35,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "EvictionConfig_ESTest_scaffolding"
            ],
            "methods": {
                "171-175:test13": {
                    "start": 171,
                    "end": 175,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = EvictionConfig.EvictionConfig0(14, 14, 14);\n",
                        "      int int0 = evictionConfig0.getMinIdle();\n",
                        "      assertEquals(14, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "73-79:EvictionConfig0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "153-168:test12": {
                    "start": 153,
                    "end": 168,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.ERAS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        evictionConfig0.getIdleSoftEvictTime();\n",
                        "        fail(\"Expecting exception: ArithmeticException\");\n",
                        "      \n",
                        "      } catch(ArithmeticException e) {\n",
                        "         //\n",
                        "         // long overflow\n",
                        "         //\n",
                        "         verifyException(\"java.lang.Math\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "146-148:getIdleSoftEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "144-150:test11": {
                    "start": 144,
                    "end": 150,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      String string0 = evictionConfig0.toString();\n",
                        "      assertEquals(\"EvictionConfig [idleEvictDuration=PT0.000001S, idleSoftEvictDuration=PT0.000001S, minIdle=0]\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "180-190:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "134-141:test10": {
                    "start": 134,
                    "end": 141,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      Duration duration1 = evictionConfig0.getIdleEvictDuration();\n",
                        "      assertSame(duration1, duration0);\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "90-92:getIdleEvictDuration"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "126-131:test09": {
                    "start": 126,
                    "end": 131,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig((Duration) null, (Duration) null, (-2632));\n",
                        "      Duration duration0 = evictionConfig0.getIdleEvictTimeDuration();\n",
                        "      assertNotNull(duration0);\n",
                        "      assertEquals((-2632), evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "119-121:getIdleEvictTimeDuration"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "116-123:test08": {
                    "start": 116,
                    "end": 123,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      Duration duration1 = evictionConfig0.getIdleSoftEvictTimeDuration();\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "      assertSame(duration1, duration0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "160-162:getIdleSoftEvictTimeDuration"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "106-113:test07": {
                    "start": 106,
                    "end": 113,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      long long0 = evictionConfig0.getIdleEvictTime();\n",
                        "      assertEquals(0L, long0);\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "104-106:getIdleEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "96-103:test06": {
                    "start": 96,
                    "end": 103,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      Duration duration1 = evictionConfig0.getIdleSoftEvictDuration();\n",
                        "      assertSame(duration1, duration0);\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "132-134:getIdleSoftEvictDuration"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "78-93:test05": {
                    "start": 78,
                    "end": 93,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.ERAS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, (-14));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        evictionConfig0.getIdleEvictTime();\n",
                        "        fail(\"Expecting exception: ArithmeticException\");\n",
                        "      \n",
                        "      } catch(ArithmeticException e) {\n",
                        "         //\n",
                        "         // long overflow\n",
                        "         //\n",
                        "         verifyException(\"java.lang.Math\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "104-106:getIdleEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "70-75:test04": {
                    "start": 70,
                    "end": 75,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = EvictionConfig.EvictionConfig0((-3075L), 0, 0);\n",
                        "      long long0 = evictionConfig0.getIdleEvictTime();\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "      assertEquals(9223372036854775807L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "73-79:EvictionConfig0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "104-106:getIdleEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "62-67:test03": {
                    "start": 62,
                    "end": 67,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = EvictionConfig.EvictionConfig0((-3075L), 0, 0);\n",
                        "      long long0 = evictionConfig0.getIdleSoftEvictTime();\n",
                        "      assertEquals(9223372036854775807L, long0);\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "73-79:EvictionConfig0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "146-148:getIdleSoftEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "52-59:test02": {
                    "start": 52,
                    "end": 59,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      ChronoUnit chronoUnit0 = ChronoUnit.MICROS;\n",
                        "      Duration duration0 = chronoUnit0.getDuration();\n",
                        "      EvictionConfig evictionConfig0 = new EvictionConfig(duration0, duration0, 0);\n",
                        "      long long0 = evictionConfig0.getIdleSoftEvictTime();\n",
                        "      assertEquals(0L, long0);\n",
                        "      assertEquals(0, evictionConfig0.getMinIdle());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/time/temporal/ChronoUnit",
                            "getDuration"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "48-59:EvictionConfig"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "146-148:getIdleSoftEvictTime"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ]
                    ]
                },
                "45-49:test01": {
                    "start": 45,
                    "end": 49,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = EvictionConfig.EvictionConfig0(5, 1371L, (-1));\n",
                        "      int int0 = evictionConfig0.getMinIdle();\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "73-79:EvictionConfig0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "38-42:test00": {
                    "start": 38,
                    "end": 42,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      EvictionConfig evictionConfig0 = EvictionConfig.EvictionConfig0(0L, (-2632), 0);\n",
                        "      int int0 = evictionConfig0.getMinIdle();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "73-79:EvictionConfig0"
                        ],
                        [
                            "commons-pool.src.main.org.apache.commons.pool2.impl.EvictionConfig",
                            "EvictionConfig",
                            "172-174:getMinIdle"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}