{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/OptPFD_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import OptPFD": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.OptPFD;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "OptPFD_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "OptPFD_ESTest_scaffolding"
            ],
            "methods": {
                "287-291:test18": {
                    "start": 287,
                    "end": 291,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      String string0 = optPFD0.toString();\n",
                        "      assertEquals(\"OptPFD\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "196-198:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "278-284:test17": {
                    "start": 278,
                    "end": 284,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2948);\n",
                        "      optPFD0.headlessCompress(intArray0, intWrapper0, 24, intArray0, intWrapper0);\n",
                        "      assertEquals(2948.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "47-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "259-275:test16": {
                    "start": 259,
                    "end": 275,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[141];\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(32);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.compress0(intArray0, intWrapper0, 1023, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 141 out of bounds for length 141\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "249-256:test15": {
                    "start": 249,
                    "end": 256,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(4);\n",
                        "      optPFD0.compress0((int[]) null, intWrapper0, (-1398), intArray0, intWrapper0);\n",
                        "      assertEquals((byte)5, intWrapper0.byteValue());\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, (-1280), 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "240-246:test14": {
                    "start": 240,
                    "end": 246,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      optPFD0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 0);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "222-237:test13": {
                    "start": 222,
                    "end": 237,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[141];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessUncompress(intArray0, intWrapper0, 5268, intArray0, intWrapper0, 5268);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Array index out of range: 160\n",
                        "         //\n",
                        "         verifyException(\"java.util.Arrays\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "213-219:test12": {
                    "start": 213,
                    "end": 219,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2948);\n",
                        "      optPFD0.compress0(intArray0, intWrapper0, 11, intArray0, intWrapper0);\n",
                        "      assertEquals(4, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "204-210:test11": {
                    "start": 204,
                    "end": 210,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(128);\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      optPFD0.uncompress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(128, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "187-201:test10": {
                    "start": 187,
                    "end": 201,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.compress0((int[]) null, intWrapper0, 1117, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "169-184:test09": {
                    "start": 169,
                    "end": 184,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1414);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessCompress(intArray0, (IntWrapper) null, 1414, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "47-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "150-166:test08": {
                    "start": 150,
                    "end": 166,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2147483635);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessUncompress(intArray0, intWrapper0, 2147483635, intArray0, intWrapper1, 2147483635);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // fromIndex(2147483635) > toIndex(-2147483629)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Arrays\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "133-147:test07": {
                    "start": 133,
                    "end": 147,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessUncompress((int[]) null, intWrapper0, 67111079, (int[]) null, intWrapper0, 67111079);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "116-130:test06": {
                    "start": 116,
                    "end": 130,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.uncompress0(intArray0, (IntWrapper) null, 3079, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "97-113:test05": {
                    "start": 97,
                    "end": 113,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(Integer.MAX_VALUE);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.compress0(intArray0, intWrapper1, (-1099), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -2147483521 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "79-94:test04": {
                    "start": 79,
                    "end": 94,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(12);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessCompress(intArray0, intWrapper0, 210, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 12 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "47-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "69-76:test03": {
                    "start": 69,
                    "end": 76,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFD0.uncompress0(intArray0, intWrapper0, (-578), intArray0, intWrapper0);\n",
                        "      assertEquals((byte)1, intWrapper0.byteValue());\n",
                        "      assertEquals(1L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "60-66:test02": {
                    "start": 60,
                    "end": 66,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-2037));\n",
                        "      optPFD0.headlessUncompress(intArray0, intWrapper0, 3941, intArray0, intWrapper0, (-2037));\n",
                        "      assertEquals((-2037.0F), intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "41-57:test01": {
                    "start": 41,
                    "end": 57,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[0] = 131053;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.headlessUncompress(intArray0, intWrapper0, 131053, intArray0, intWrapper0, 379);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 237 out of bounds for length 17\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "21-38:test00": {
                    "start": 21,
                    "end": 38,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      OptPFD optPFD0 = new OptPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[0] = 1507;\n",
                        "      intArray0[1] = (-578);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFD0.uncompress0(intArray0, intWrapper0, (-578), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "43-44:OptPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFD",
                            "OptPFD",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}