{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/DeltaZigzagEncoding_ESTest.java",
    "imports": {
        "13-13:import EvoRunnerParameters": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "14-14:import RunWith": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "12-12:import EvoRunner": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import DeltaZigzagEncoding": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.DeltaZigzagEncoding;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DeltaZigzagEncoding_ESTest": {
            "start": 17,
            "end": 17,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DeltaZigzagEncoding_ESTest_scaffolding"
            ],
            "methods": {
                "138-143:test13": {
                    "start": 138,
                    "end": 143,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(1);\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Encoder0.encodeArray3(intArray0);\n",
                        "      assertArrayEquals(new int[] {1, 0, 0, 0, 0, 0, 0, 0, 0}, intArray1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "59-62:encodeArray3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "121-135:test12": {
                    "start": 121,
                    "end": 135,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(23);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        deltaZigzagEncoding_Encoder0.encodeArray2(intArray0, 2095, 1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 2095 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.DeltaZigzagEncoding$Encoder\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "54-57:encodeArray2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "110-118:test11": {
                    "start": 110,
                    "end": 118,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(772);\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Decoder0.decodeArray2(intArray0);\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(772);\n",
                        "      int[] intArray2 = deltaZigzagEncoding_Encoder0.encodeArray1(intArray1, (-1), (-1), intArray0);\n",
                        "      assertArrayEquals(new int[] {772, 772, 772, 772, 772, 772, 772, 772}, intArray1);\n",
                        "      assertSame(intArray2, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "90-92:decodeArray2"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "49-52:encodeArray1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "103-107:test10": {
                    "start": 103,
                    "end": 107,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Context deltaZigzagEncoding_Context0 = new DeltaZigzagEncoding.Context((-1));\n",
                        "      int int0 = deltaZigzagEncoding_Context0.getContextValue();\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Context",
                            "17-19:Context"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Context",
                            "25-27:getContextValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "98-100:test09": {
                    "start": 98,
                    "end": 100,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding deltaZigzagEncoding0 = new DeltaZigzagEncoding();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "DeltaZigzagEncoding",
                            "DeltaZigzagEncoding"
                        ]
                    ]
                },
                "90-95:test08": {
                    "start": 90,
                    "end": 95,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(1);\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Decoder0.decodeArray0(intArray0, 1498, (-1608), intArray0, 875);\n",
                        "      assertSame(intArray0, intArray1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "77-83:decodeArray0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "82-87:test07": {
                    "start": 82,
                    "end": 87,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(772);\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Decoder0.decodeArray1(intArray0, (-980), 0);\n",
                        "      assertEquals(0, intArray1.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "85-88:decodeArray1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "74-79:test06": {
                    "start": 74,
                    "end": 79,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(772);\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Encoder0.encodeArray0(intArray0, (-833), (-628), intArray0, 0);\n",
                        "      assertSame(intArray0, intArray1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "41-47:encodeArray0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "67-71:test05": {
                    "start": 67,
                    "end": 71,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(772);\n",
                        "      int int0 = deltaZigzagEncoding_Encoder0.encodeInt(533);\n",
                        "      assertEquals(477, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "35-39:encodeInt"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "61-64:test04": {
                    "start": 61,
                    "end": 64,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(772);\n",
                        "      deltaZigzagEncoding_Decoder0.setContextValue((-2523));\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Context",
                            "21-23:setContextValue"
                        ]
                    ]
                },
                "53-58:test03": {
                    "start": 53,
                    "end": 58,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Encoder deltaZigzagEncoding_Encoder0 = new DeltaZigzagEncoding.Encoder(822);\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Encoder0.encodeArray1(intArray0, (-1), (-488), intArray0);\n",
                        "      assertSame(intArray1, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "31-33:Encoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Encoder",
                            "49-52:encodeArray1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "46-50:test02": {
                    "start": 46,
                    "end": 50,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder((-606));\n",
                        "      int int0 = deltaZigzagEncoding_Decoder0.decodeInt((-606));\n",
                        "      assertEquals(2147482739, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "70-75:decodeInt"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "36-43:test01": {
                    "start": 36,
                    "end": 43,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(772);\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[7] = 3363;\n",
                        "      int[] intArray1 = deltaZigzagEncoding_Decoder0.decodeArray2(intArray0);\n",
                        "      assertArrayEquals(new int[] {772, 772, 772, 772, 772, 772, 772, (-910)}, intArray1);\n",
                        "      assertEquals(8, intArray1.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "90-92:decodeArray2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "20-33:test00": {
                    "start": 20,
                    "end": 33,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      DeltaZigzagEncoding.Decoder deltaZigzagEncoding_Decoder0 = new DeltaZigzagEncoding.Decoder(500);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        deltaZigzagEncoding_Decoder0.decodeArray1((int[]) null, 500, 500);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.DeltaZigzagEncoding$Decoder\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "66-68:Decoder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagEncoding",
                            "Decoder",
                            "85-88:decodeArray1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}