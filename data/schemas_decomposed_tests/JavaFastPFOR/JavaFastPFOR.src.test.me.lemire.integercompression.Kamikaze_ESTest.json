{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/Kamikaze_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import Kamikaze": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.Kamikaze;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Kamikaze_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Kamikaze_ESTest_scaffolding"
            ],
            "methods": {
                "278-282:test18": {
                    "start": 278,
                    "end": 282,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      String string0 = kamikaze0.toString();\n",
                        "      assertEquals(\"Kamikaze's PForDelta\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "42-44:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "269-275:test17": {
                    "start": 269,
                    "end": 275,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2600);\n",
                        "      kamikaze0.headlessCompress(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertArrayEquals(new int[] {0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "19-28:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "252-266:test16": {
                    "start": 252,
                    "end": 266,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1870);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessCompress((int[]) null, intWrapper0, 1870, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "19-28:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "234-249:test15": {
                    "start": 234,
                    "end": 249,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1241));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.compress0((int[]) null, intWrapper0, (-3722), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -1241 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Kamikaze\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "47-55:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "226-231:test14": {
                    "start": 226,
                    "end": 231,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      kamikaze0.compress0((int[]) null, intWrapper0, 14, (int[]) null, intWrapper0);\n",
                        "      assertEquals(0, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "47-55:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "208-223:test13": {
                    "start": 208,
                    "end": 223,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1241));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.uncompress0(intArray0, intWrapper0, 1594, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -1241 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Kamikaze\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "58-66:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "200-205:test12": {
                    "start": 200,
                    "end": 205,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      kamikaze0.uncompress0((int[]) null, intWrapper0, 0, (int[]) null, intWrapper0);\n",
                        "      assertEquals(0L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "58-66:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "183-197:test11": {
                    "start": 183,
                    "end": 197,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.compress0((int[]) null, intWrapper0, 2602, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Kamikaze\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "47-55:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "165-180:test10": {
                    "start": 165,
                    "end": 180,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      intArray0[0] = 2147483528;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessCompress(intArray0, (IntWrapper) null, 2147483528, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -256\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "19-28:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "147-162:test09": {
                    "start": 147,
                    "end": 162,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2147483520);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessUncompress(intArray0, intWrapper0, 2147483520, intArray0, intWrapper0, 2147483520);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -256\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "31-39:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "130-144:test08": {
                    "start": 130,
                    "end": 144,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1870);\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessUncompress((int[]) null, intWrapper0, 1870, (int[]) null, intWrapper0, 1870);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "31-39:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "113-127:test07": {
                    "start": 113,
                    "end": 127,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.uncompress0((int[]) null, intWrapper0, (-1), (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Kamikaze\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "58-66:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "102-110:test06": {
                    "start": 102,
                    "end": 110,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1241));\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      kamikaze0.compress0((int[]) null, intWrapper0, (-3722), intArray0, intWrapper1);\n",
                        "      assertEquals(1.0F, intWrapper1.floatValue(), 0.01F);\n",
                        "      assertArrayEquals(new int[] {(-3712), 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "47-55:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "83-99:test05": {
                    "start": 83,
                    "end": 99,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(31);\n",
                        "      int[] intArray1 = new int[6];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessCompress(intArray0, intWrapper0, 1925, intArray1, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "19-28:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "73-80:test04": {
                    "start": 73,
                    "end": 80,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1241));\n",
                        "      kamikaze0.headlessUncompress(intArray0, intWrapper0, (-1241), intArray0, intWrapper0, (-1241));\n",
                        "      assertEquals((-1241L), intWrapper0.longValue());\n",
                        "      assertEquals((-1241), intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "31-39:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "54-70:test03": {
                    "start": 54,
                    "end": 70,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(711);\n",
                        "      int[] intArray1 = new int[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kamikaze0.headlessUncompress(intArray0, intWrapper0, 711, intArray1, intWrapper0, 2432);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 0 out of bounds for length 0\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDelta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "31-39:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "43-51:test02": {
                    "start": 43,
                    "end": 51,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2600);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(24);\n",
                        "      kamikaze0.headlessUncompress(intArray0, intWrapper0, (-627), intArray0, intWrapper1, 896);\n",
                        "      assertEquals((byte) (-104), intWrapper1.byteValue());\n",
                        "      assertEquals(2602, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "31-39:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "32-40:test01": {
                    "start": 32,
                    "end": 40,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      int[] intArray1 = new int[4];\n",
                        "      kamikaze0.uncompress0(intArray0, intWrapper0, (-1), intArray1, intWrapper0);\n",
                        "      assertEquals((short)1, intWrapper0.shortValue());\n",
                        "      assertEquals(1, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "58-66:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "21-29:test00": {
                    "start": 21,
                    "end": 29,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      Kamikaze kamikaze0 = new Kamikaze();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1241));\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      kamikaze0.uncompress0(intArray0, intWrapper1, 1594, intArray0, intWrapper0);\n",
                        "      assertEquals(1.0F, intWrapper1.floatValue(), 0.01F);\n",
                        "      assertEquals(1, intWrapper1.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "Kamikaze"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Kamikaze",
                            "Kamikaze",
                            "58-66:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}