{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/longcompression/SkippableLongComposition_ESTest.java",
    "imports": {
        "17-17:import EvoRunnerParameters": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "18-18:import RunWith": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "16-16:import EvoRunner": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import LongJustCopy": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.longcompression.LongJustCopy;\n"
            ]
        },
        "14-14:import SkippableLongCODEC": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.longcompression.SkippableLongCODEC;\n"
            ]
        },
        "13-13:import LongVariableByte": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.longcompression.LongVariableByte;\n"
            ]
        },
        "15-15:import SkippableLongComposition": {
            "start": 15,
            "end": 15,
            "body": [
                "import me.lemire.longcompression.SkippableLongComposition;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "SkippableLongComposition_ESTest": {
            "start": 21,
            "end": 21,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "SkippableLongComposition_ESTest_scaffolding"
            ],
            "methods": {
                "246-256:test13": {
                    "start": 246,
                    "end": 256,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      long[] longArray0 = new long[15];\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      SkippableLongComposition skippableLongComposition1 = new SkippableLongComposition(skippableLongComposition0, skippableLongComposition0);\n",
                        "      skippableLongComposition1.headlessCompress(longArray0, intWrapper0, 0, longArray0, intWrapper1);\n",
                        "      assertEquals(4.0, intWrapper1.doubleValue(), 0.01);\n",
                        "      assertEquals(4.0F, intWrapper1.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "234-243:test12": {
                    "start": 234,
                    "end": 243,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[1];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      SkippableLongComposition skippableLongComposition1 = new SkippableLongComposition(skippableLongComposition0, skippableLongComposition0);\n",
                        "      skippableLongComposition1.headlessUncompress(longArray0, intWrapper0, 0, longArray0, intWrapper0, 0);\n",
                        "      assertEquals((byte)2, intWrapper0.byteValue());\n",
                        "      assertEquals(2L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "214-231:test11": {
                    "start": 214,
                    "end": 231,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      long[] longArray0 = new long[15];\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      skippableLongComposition0.headlessUncompress(longArray0, intWrapper0, 0, longArray0, intWrapper0, (-3026));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress(longArray0, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-16 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "195-211:test10": {
                    "start": 195,
                    "end": 211,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(49);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress((long[]) null, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 49 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.SkippableLongComposition\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "175-192:test09": {
                    "start": 175,
                    "end": 192,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-1263));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress(longArray0, intWrapper0, 3, longArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "156-172:test08": {
                    "start": 156,
                    "end": 172,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      long[] longArray0 = new long[1];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-50));\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress(longArray0, intWrapper0, 0, (long[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.SkippableLongComposition\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "141-153:test07": {
                    "start": 141,
                    "end": 153,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-2611));\n",
                        "      LongJustCopy longJustCopy0 = new LongJustCopy();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longJustCopy0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessUncompress((long[]) null, intWrapper0, 2, (long[]) null, intWrapper0, (-2611));\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongJustCopy",
                            "LongJustCopy",
                            "LongJustCopy"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "125-138:test06": {
                    "start": 125,
                    "end": 138,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition((SkippableLongCODEC) null, (SkippableLongCODEC) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.toString();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.evosuite.runtime.System\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "66-68:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "105-122:test05": {
                    "start": 105,
                    "end": 122,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      LongJustCopy longJustCopy0 = new LongJustCopy();\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longJustCopy0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-16 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongJustCopy",
                            "LongJustCopy",
                            "LongJustCopy"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "85-102:test04": {
                    "start": 85,
                    "end": 102,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      long[] longArray0 = new long[15];\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      long[] longArray1 = new long[6];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessCompress(longArray0, intWrapper0, 0, longArray1, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-16 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "39-50:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "65-82:test03": {
                    "start": 65,
                    "end": 82,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[5];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-899));\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-1435));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessUncompress(longArray0, intWrapper0, (-899), longArray0, intWrapper1, (-899));\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -898 out of bounds for length 5\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "45-62:test02": {
                    "start": 45,
                    "end": 62,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      long[] longArray0 = new long[15];\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      long[] longArray1 = new long[6];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        skippableLongComposition0.headlessUncompress(longArray0, intWrapper0, 2, longArray1, intWrapper0, 42);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 15 out of bounds for length 15\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "33-42:test01": {
                    "start": 33,
                    "end": 42,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longVariableByte0);\n",
                        "      long[] longArray0 = new long[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(49);\n",
                        "      long[] longArray1 = new long[1];\n",
                        "      skippableLongComposition0.headlessUncompress(longArray1, intWrapper0, (-1), longArray0, intWrapper0, (-1));\n",
                        "      assertEquals((short)50, intWrapper0.shortValue());\n",
                        "      assertEquals(50L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "53-63:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "24-30:test00": {
                    "start": 24,
                    "end": 30,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongJustCopy longJustCopy0 = new LongJustCopy();\n",
                        "      SkippableLongComposition skippableLongComposition0 = new SkippableLongComposition(longVariableByte0, longJustCopy0);\n",
                        "      String string0 = skippableLongComposition0.toString();\n",
                        "      assertNotNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongJustCopy",
                            "LongJustCopy",
                            "LongJustCopy"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "32-36:SkippableLongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.SkippableLongComposition",
                            "SkippableLongComposition",
                            "66-68:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}