{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/longcompression/LongAs2IntsCodec_ESTest.java",
    "imports": {
        "15-15:import EvoRunnerParameters": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "16-16:import RunWith": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "14-14:import EvoRunner": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import OptPFDS16": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.OptPFDS16;\n"
            ]
        },
        "13-13:import LongAs2IntsCodec": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.longcompression.LongAs2IntsCodec;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "LongAs2IntsCodec_ESTest": {
            "start": 19,
            "end": 19,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "LongAs2IntsCodec_ESTest_scaffolding"
            ],
            "methods": {
                "209-216:test13": {
                    "start": 209,
                    "end": 216,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      longAs2IntsCodec0.compress0(longArray0, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L, 0L}, longArray0);\n",
                        "      assertEquals(\"0\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "198-206:test12": {
                    "start": 198,
                    "end": 206,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[4];\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      longAs2IntsCodec0.compress0(longArray0, intWrapper0, 2, longArray0, intWrapper0);\n",
                        "      assertEquals((short)3, intWrapper0.shortValue());\n",
                        "      assertArrayEquals(new long[] {0L, 0L, 0L, 0L}, longArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "189-195:test11": {
                    "start": 189,
                    "end": 195,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[5];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      longAs2IntsCodec0.uncompress1(longArray0, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "      assertArrayEquals(new long[] {0L, 0L, 0L, 0L, 0L}, longArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "172-186:test09": {
                    "start": 172,
                    "end": 186,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.compress0(longArray0, (IntWrapper) null, Integer.MIN_VALUE, longArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -2147483648\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "155-169:test08": {
                    "start": 155,
                    "end": 169,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.compress0((long[]) null, intWrapper0, 2, (long[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "134-152:test07": {
                    "start": 134,
                    "end": 152,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[10];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      longAs2IntsCodec0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper2 = new IntWrapper(64);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.uncompress1(longArray0, intWrapper1, 67, longArray0, intWrapper2);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 64 out of bounds for length 10\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "118-131:test06": {
                    "start": 118,
                    "end": 131,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.uncompress1((long[]) null, (IntWrapper) null, 639, (long[]) null, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "99-115:test05": {
                    "start": 99,
                    "end": 115,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-869));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.compress0(longArray0, intWrapper0, 2, longArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -869 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "88-96:test04": {
                    "start": 88,
                    "end": 96,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[14];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      long[] longArray1 = new long[7];\n",
                        "      longAs2IntsCodec0.compress0(longArray1, intWrapper0, 5, longArray0, intWrapper0);\n",
                        "      assertEquals(\"5\", intWrapper0.toString());\n",
                        "      assertEquals(5L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "76-85:test03": {
                    "start": 76,
                    "end": 85,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[14];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      long[] longArray1 = new long[7];\n",
                        "      longArray1[1] = (-1560L);\n",
                        "      longAs2IntsCodec0.compress0(longArray1, intWrapper0, 5, longArray0, intWrapper0);\n",
                        "      assertEquals((byte)6, intWrapper0.byteValue());\n",
                        "      assertEquals(6.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "66-73:test02": {
                    "start": 66,
                    "end": 73,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[10];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      long[] longArray1 = new long[9];\n",
                        "      longAs2IntsCodec0.uncompress1(longArray0, intWrapper0, 67, longArray1, intWrapper0);\n",
                        "      assertEquals(1, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "44-63:test01": {
                    "start": 44,
                    "end": 63,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[14];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      longAs2IntsCodec0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      intWrapper1.increment();\n",
                        "      long[] longArray1 = new long[2];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.uncompress1(longArray0, intWrapper1, (-3890), longArray1, intWrapper1);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -62240\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "69-71:increment"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "22-41:test00": {
                    "start": 22,
                    "end": 41,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      long[] longArray0 = new long[14];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      longAs2IntsCodec0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      intWrapper1.increment();\n",
                        "      intWrapper1.increment();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longAs2IntsCodec0.uncompress1(longArray0, intWrapper1, (-3890), longArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 14 out of bounds for length 14\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "43-114:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "69-71:increment"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "120-194:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}