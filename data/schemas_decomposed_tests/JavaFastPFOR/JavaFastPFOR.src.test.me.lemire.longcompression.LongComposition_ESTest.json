{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/longcompression/LongComposition_ESTest.java",
    "imports": {
        "19-19:import EvoRunnerParameters": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "20-20:import RunWith": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "18-18:import EvoRunner": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "12-12:import IntWrapper": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "11-11:import FastPFOR": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.FastPFOR;\n"
            ]
        },
        "13-13:import OptPFDS16": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.integercompression.OptPFDS16;\n"
            ]
        },
        "15-15:import LongCODEC": {
            "start": 15,
            "end": 15,
            "body": [
                "import me.lemire.longcompression.LongCODEC;\n"
            ]
        },
        "14-14:import LongAs2IntsCodec": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.longcompression.LongAs2IntsCodec;\n"
            ]
        },
        "16-16:import LongComposition": {
            "start": 16,
            "end": 16,
            "body": [
                "import me.lemire.longcompression.LongComposition;\n"
            ]
        },
        "17-17:import LongVariableByte": {
            "start": 17,
            "end": 17,
            "body": [
                "import me.lemire.longcompression.LongVariableByte;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "LongComposition_ESTest": {
            "start": 23,
            "end": 23,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "LongComposition_ESTest_scaffolding"
            ],
            "methods": {
                "305-312:test18": {
                    "start": 305,
                    "end": 312,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      longComposition0.compress0(longArray0, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "      assertEquals(\"1\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "286-302:test17": {
                    "start": 286,
                    "end": 302,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[23];\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.uncompress1(longArray0, intWrapper0, 447, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 23 out of bounds for length 23\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "276-283:test16": {
                    "start": 276,
                    "end": 283,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      longComposition0.uncompress1(longArray0, intWrapper0, 0, longArray0, intWrapper0);\n",
                        "      assertEquals(1.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "255-273:test15": {
                    "start": 255,
                    "end": 273,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-2));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.compress0(longArray0, intWrapper1, 1, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -2 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "236-252:test14": {
                    "start": 236,
                    "end": 252,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[2];\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-16 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "215-233:test13": {
                    "start": 215,
                    "end": 233,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[23];\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      longComposition0.compress0(longArray0, intWrapper1, Integer.MIN_VALUE, longArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.compress0(longArray0, intWrapper0, Integer.MIN_VALUE, longArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "196-212:test12": {
                    "start": 196,
                    "end": 212,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -2\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "178-193:test11": {
                    "start": 178,
                    "end": 193,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(35);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.compress0((long[]) null, intWrapper0, 35, (long[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "162-175:test10": {
                    "start": 162,
                    "end": 175,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      LongComposition longComposition0 = new LongComposition((LongCODEC) null, (LongCODEC) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.toString();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.evosuite.runtime.System\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "67-69:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "142-159:test09": {
                    "start": 142,
                    "end": 159,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[3];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      FastPFOR fastPFOR0 = new FastPFOR(1);\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(fastPFOR0, fastPFOR0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.uncompress1(longArray0, intWrapper0, (-76), longArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -1216\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "81-89:FastPFOR"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "124-139:test08": {
                    "start": 124,
                    "end": 139,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = LongAs2IntsCodec.LongAs2IntsCodec1();\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(68);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        longComposition0.uncompress1((long[]) null, intWrapper0, 68, (long[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.longcompression.LongAs2IntsCodec\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "35-37:LongAs2IntsCodec1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "111-121:test07": {
                    "start": 111,
                    "end": 121,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      LongComposition longComposition1 = new LongComposition(longComposition0, longAs2IntsCodec0);\n",
                        "      longComposition1.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      assertEquals(2.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(2L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "99-108:test06": {
                    "start": 99,
                    "end": 108,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[23];\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      long[] longArray1 = new long[3];\n",
                        "      longComposition0.compress0(longArray1, intWrapper0, Integer.MIN_VALUE, longArray0, intWrapper0);\n",
                        "      assertEquals((-2.14748365E9F), intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)0, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "86-96:test05": {
                    "start": 86,
                    "end": 96,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[23];\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      long[] longArray1 = new long[3];\n",
                        "      longComposition0.compress0(longArray1, intWrapper0, Integer.MIN_VALUE, longArray0, intWrapper1);\n",
                        "      assertEquals((-2.14748365E9F), intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(Integer.MIN_VALUE, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "73-83:test04": {
                    "start": 73,
                    "end": 83,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper1 = IntWrapper.IntWrapper1();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      longComposition0.uncompress1(longArray0, intWrapper0, 1, longArray0, intWrapper1);\n",
                        "      assertEquals((byte)2, intWrapper0.byteValue());\n",
                        "      assertEquals(2.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "61-70:test03": {
                    "start": 61,
                    "end": 70,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      LongComposition longComposition1 = new LongComposition(longComposition0, longAs2IntsCodec0);\n",
                        "      longComposition1.uncompress1(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      assertEquals(1.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "49-58:test02": {
                    "start": 49,
                    "end": 58,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      long[] longArray1 = new long[7];\n",
                        "      longComposition0.uncompress1(longArray0, intWrapper0, 1, longArray1, intWrapper0);\n",
                        "      assertEquals(1L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "36-46:test01": {
                    "start": 36,
                    "end": 46,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      long[] longArray0 = new long[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      LongAs2IntsCodec longAs2IntsCodec0 = new LongAs2IntsCodec(optPFDS16_0, optPFDS16_0);\n",
                        "      LongComposition longComposition0 = new LongComposition(longAs2IntsCodec0, longAs2IntsCodec0);\n",
                        "      longComposition0.compress0(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      longComposition0.uncompress1(longArray0, intWrapper0, 1, longArray0, intWrapper0);\n",
                        "      assertEquals(\"2\", intWrapper0.toString());\n",
                        "      assertEquals(2L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongAs2IntsCodec",
                            "LongAs2IntsCodec",
                            "31-34:LongAs2IntsCodec"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "39-53:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "56-64:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "26-33:test00": {
                    "start": 26,
                    "end": 33,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      LongVariableByte longVariableByte0 = new LongVariableByte();\n",
                        "      LongComposition longComposition0 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      LongComposition longComposition1 = new LongComposition(longVariableByte0, longVariableByte0);\n",
                        "      longComposition1.F2 = (LongCODEC) longComposition0;\n",
                        "      String string0 = longComposition1.toString();\n",
                        "      assertNotNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongVariableByte",
                            "LongVariableByte",
                            "LongVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "33-36:LongComposition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.longcompression.LongComposition",
                            "LongComposition",
                            "67-69:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}