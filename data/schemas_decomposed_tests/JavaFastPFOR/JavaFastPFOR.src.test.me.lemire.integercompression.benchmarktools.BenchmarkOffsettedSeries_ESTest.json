{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/benchmarktools/BenchmarkOffsettedSeries_ESTest.java",
    "imports": {
        "16-16:import EvoRunnerParameters": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "22-22:import RunWith": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "15-15:import EvoRunner": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "13-13:import PrintWriter": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.io.PrintWriter;\n"
            ]
        },
        "12-12:import OutputStream": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "11-11:import FileNotFoundException": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.FileNotFoundException;\n"
            ]
        },
        "14-14:import BenchmarkOffsettedSeries": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries;\n"
            ]
        },
        "17-17:import MockFile": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFile;\n"
            ]
        },
        "18-18:import MockFileOutputStream": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileOutputStream;\n"
            ]
        },
        "19-19:import MockPrintWriter": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintWriter;\n"
            ]
        },
        "20-20:import EvoSuiteFile": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.testdata.EvoSuiteFile;\n"
            ]
        },
        "21-21:import FileSystemHandling": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.testdata.FileSystemHandling;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "BenchmarkOffsettedSeries_ESTest": {
            "start": 25,
            "end": 25,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "BenchmarkOffsettedSeries_ESTest_scaffolding"
            ],
            "methods": {
                "128-132:test8": {
                    "start": 128,
                    "end": 132,
                    "body": [
                        "  public void test8()  throws Throwable  {\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"^P^:oz&(dNxaGI\u007f$3LV\", true);\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);\n",
                        "      BenchmarkOffsettedSeries.run(mockPrintWriter0, 0, 20);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test8()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ]
                    ]
                },
                "112-125:test7": {
                    "start": 112,
                    "end": 125,
                    "body": [
                        "  public void test7()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"me.lemire.integercompression.DeltaZigzagBinaryPacking\");\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BenchmarkOffsettedSeries.run(mockPrintWriter0, 5, 0);\n",
                        "        fail(\"Expecting exception: ArithmeticException\");\n",
                        "      \n",
                        "      } catch(ArithmeticException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test7()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "107-109:test6": {
                    "start": 107,
                    "end": 109,
                    "body": [
                        "  public void test6()  throws Throwable  {\n",
                        "      BenchmarkOffsettedSeries benchmarkOffsettedSeries0 = new BenchmarkOffsettedSeries();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test6()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries"
                        ]
                    ]
                },
                "90-104:test5": {
                    "start": 90,
                    "end": 104,
                    "body": [
                        "  public void test5()  throws Throwable  {\n",
                        "      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(\"benchmark-offsetted-20140214T202121.csv\");\n",
                        "      FileSystemHandling.createFolder(evoSuiteFile0);\n",
                        "      String[] stringArray0 = new String[5];\n",
                        "      try { \n",
                        "        BenchmarkOffsettedSeries.main(stringArray0);\n",
                        "        fail(\"Expecting exception: FileNotFoundException\");\n",
                        "      \n",
                        "      } catch(FileNotFoundException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.evosuite.runtime.mock.java.io.MockFileOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test5()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/EvoSuiteFile",
                            "EvoSuiteFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/testdata/FileSystemHandling",
                            "createFolder"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "272-294:main"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "84-87:test4": {
                    "start": 84,
                    "end": 87,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[0];\n",
                        "      BenchmarkOffsettedSeries.main(stringArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "272-294:main"
                        ]
                    ]
                },
                "67-81:test3": {
                    "start": 67,
                    "end": 81,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      OutputStream outputStream0 = OutputStream.nullOutputStream();\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BenchmarkOffsettedSeries.run(mockPrintWriter0, (-2), (-2));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -2\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/OutputStream",
                            "nullOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "52-64:test2": {
                    "start": 52,
                    "end": 64,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BenchmarkOffsettedSeries.run((PrintWriter) null, 1024, 1024);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "45-49:test1": {
                    "start": 45,
                    "end": 49,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(\"Random \");\n",
                        "      // Undeclared exception!\n",
                        "      BenchmarkOffsettedSeries.run(mockPrintWriter0, 27, 27);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ]
                    ]
                },
                "28-42:test0": {
                    "start": 28,
                    "end": 42,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile((String) null, \"r?b?7]6:7GpR\");\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BenchmarkOffsettedSeries.run(mockPrintWriter0, 4, 32);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Length mismatch: expected=32 actual=0 codec=me.lemire.integercompression.DeltaZigzagBinaryPacking@0000000003\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.BenchmarkOffsettedSeries",
                            "BenchmarkOffsettedSeries",
                            "44-85:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}