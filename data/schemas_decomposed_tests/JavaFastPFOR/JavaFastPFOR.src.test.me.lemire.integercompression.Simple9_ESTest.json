{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/Simple9_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import Simple9": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.Simple9;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Simple9_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Simple9_ESTest_scaffolding"
            ],
            "methods": {
                "969-973:test53": {
                    "start": 969,
                    "end": 973,
                    "body": [
                        "  public void test53()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      String string0 = simple9_0.toString();\n",
                        "      assertEquals(\"Simple9\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test53()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "295-297:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "948-966:test52": {
                    "start": 948,
                    "end": 966,
                    "body": [
                        "  public void test52()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[13];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test52()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "928-945:test51": {
                    "start": 928,
                    "end": 945,
                    "body": [
                        "  public void test51()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = (-1383);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-786), intArray0, intWrapper0, 6144);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen: limited to 28-bit integers\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test51()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "905-925:test50": {
                    "start": 905,
                    "end": 925,
                    "body": [
                        "  public void test50()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[14];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      intArray0[1] = 6;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      IntWrapper intWrapper2 = new IntWrapper(0);\n",
                        "      simple9_0.compress0(intArray0, intWrapper0, (-1), intArray0, intWrapper2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper2, 3, intArray0, intWrapper1, 637534208);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 14 out of bounds for length 14\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test50()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "882-902:test49": {
                    "start": 882,
                    "end": 902,
                    "body": [
                        "  public void test49()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1396);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-2367), intArray0, intWrapper1, 870);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 12 out of bounds for length 12\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test49()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "860-879:test48": {
                    "start": 860,
                    "end": 879,
                    "body": [
                        "  public void test48()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 70;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 70);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 10 out of bounds for length 10\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test48()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "837-857:test47": {
                    "start": 837,
                    "end": 857,
                    "body": [
                        "  public void test47()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      intArray0[2] = (-1399);\n",
                        "      intArray0[3] = (-1399);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      intWrapper1.increment();\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 256, intArray0, intWrapper1, 1811939328);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test47()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "69-71:increment"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "814-834:test46": {
                    "start": 814,
                    "end": 834,
                    "body": [
                        "  public void test46()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1383);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-786), intArray0, intWrapper0, 6144);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 9 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test46()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "794-811:test45": {
                    "start": 794,
                    "end": 811,
                    "body": [
                        "  public void test45()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper0, (-2147467251), intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 2, intArray0, intWrapper0, 1528);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test45()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "780-791:test44": {
                    "start": 780,
                    "end": 791,
                    "body": [
                        "  public void test44()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 641728512, intArray0, intWrapper1, 2);\n",
                        "      assertEquals(4.0, intWrapper0.doubleValue(), 0.01);\n",
                        "      assertEquals(4.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test44()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "766-777:test43": {
                    "start": 766,
                    "end": 777,
                    "body": [
                        "  public void test43()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 6;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 641728512, intArray0, intWrapper1, 2);\n",
                        "      assertEquals(4.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)6, intWrapper1.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test43()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "743-763:test42": {
                    "start": 743,
                    "end": 763,
                    "body": [
                        "  public void test42()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1395);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 723, intArray0, intWrapper0, 25);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 10 out of bounds for length 10\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test42()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "729-740:test41": {
                    "start": 729,
                    "end": 740,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 30;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 2, intArray0, intWrapper1, 2);\n",
                        "      assertEquals((short)6, intWrapper1.shortValue());\n",
                        "      assertArrayEquals(new int[] {0, 0, 2, 1105199104, 30, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "707-726:test40": {
                    "start": 707,
                    "end": 726,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 54;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 4, intArray0, intWrapper1, 4);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "686-704:test39": {
                    "start": 686,
                    "end": 704,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      intArray0[3] = (-1383);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 9);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "671-683:test38": {
                    "start": 671,
                    "end": 683,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1379);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 1979711488, intArray0, intWrapper1, 2);\n",
                        "      assertEquals((byte)4, intWrapper0.byteValue());\n",
                        "      assertEquals((short)6, intWrapper1.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "659-668:test37": {
                    "start": 659,
                    "end": 668,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, (-2147467251), intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 2, intArray0, intWrapper0, 2);\n",
                        "      assertEquals((short)4, intWrapper0.shortValue());\n",
                        "      assertEquals(4.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "639-656:test36": {
                    "start": 639,
                    "end": 656,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      IntWrapper intWrapper1 = IntWrapper.IntWrapper1();\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      simple9_0.compress0(intArray0, intWrapper0, (-26), intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-26), intArray0, intWrapper1, 9);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "626-636:test35": {
                    "start": 626,
                    "end": 636,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[23];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper0);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper1, 2, intArray0, intWrapper1, 14);\n",
                        "      assertEquals((byte)5, intWrapper1.byteValue());\n",
                        "      assertEquals(5.0F, intWrapper1.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "604-623:test34": {
                    "start": 604,
                    "end": 623,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 6;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 245, intArray0, intWrapper1, 22);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 11 out of bounds for length 11\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "589-601:test33": {
                    "start": 589,
                    "end": 601,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1399);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 905969664, intArray0, intWrapper1, 2);\n",
                        "      assertEquals(4L, intWrapper0.longValue());\n",
                        "      assertArrayEquals(new int[] {0, 0, 2, 905969664, 6, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "575-586:test32": {
                    "start": 575,
                    "end": 586,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 48;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 1, intArray0, intWrapper0, 1);\n",
                        "      assertArrayEquals(new int[] {0, 2, 0, 48, 0, 0, 0}, intArray0);\n",
                        "      assertEquals(3L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "561-572:test31": {
                    "start": 561,
                    "end": 572,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      intArray0[3] = (-1383);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      intWrapper1.increment();\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 2);\n",
                        "      assertEquals(3.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertArrayEquals(new int[] {0, 2, 256, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "69-71:increment"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "546-558:test30": {
                    "start": 546,
                    "end": 558,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[4] = 2;\n",
                        "      intArray0[3] = (-1379);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, (-1379), intArray0, intWrapper0, 1);\n",
                        "      assertArrayEquals(new int[] {0, 0, 2, 6144, 2, 0, 0, 0}, intArray0);\n",
                        "      assertEquals(4, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "536-543:test29": {
                    "start": 536,
                    "end": 543,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[39];\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      simple9_0.compress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(0.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(0L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "526-533:test28": {
                    "start": 526,
                    "end": 533,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(\"2\", intWrapper0.toString());\n",
                        "      assertEquals((short)2, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "517-523:test27": {
                    "start": 517,
                    "end": 523,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.headlessCompress(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      assertEquals(3L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "496-514:test26": {
                    "start": 496,
                    "end": 514,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[1] = 2;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      simple9_0.compress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress(intArray0, intWrapper1, 30, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "477-493:test25": {
                    "start": 477,
                    "end": 493,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      intArray0[3] = 1381;\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress(intArray0, intWrapper0, 20, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "456-474:test24": {
                    "start": 456,
                    "end": 474,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      intArray0[1] = 2;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress(intArray0, intWrapper0, 2, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "434-453:test23": {
                    "start": 434,
                    "end": 453,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 30;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-1), intArray0, intWrapper1, 9);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "417-431:test22": {
                    "start": 417,
                    "end": 431,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(137);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.compress0((int[]) null, intWrapper0, 137, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "401-414:test21": {
                    "start": 401,
                    "end": 414,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress((int[]) null, (IntWrapper) null, 3, (int[]) null, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "384-398:test20": {
                    "start": 384,
                    "end": 398,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, (IntWrapper) null, 128, intArray0, (IntWrapper) null, 128);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "368-381:test19": {
                    "start": 368,
                    "end": 381,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.uncompress0((int[]) null, (IntWrapper) null, 54, (int[]) null, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "348-365:test18": {
                    "start": 348,
                    "end": 365,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      intArray0[0] = 9;\n",
                        "      intArray0[1] = (-1);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.uncompress0(intArray0, intWrapper0, (-1), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "330-345:test17": {
                    "start": 330,
                    "end": 345,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[39];\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-1), intArray0, intWrapper0, 1317);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 39 out of bounds for length 39\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "308-327:test16": {
                    "start": 308,
                    "end": 327,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[18];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 2;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 2, intArray0, intWrapper1, Integer.MIN_VALUE);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 18 out of bounds for length 18\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "285-305:test15": {
                    "start": 285,
                    "end": 305,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 2, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 30;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      IntWrapper intWrapper2 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-1379), intArray0, intWrapper2, 1381);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "267-282:test14": {
                    "start": 267,
                    "end": 282,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.compress0(intArray0, intWrapper0, 28, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 5 out of bounds for length 5\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "248-264:test13": {
                    "start": 248,
                    "end": 264,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[3] = 3671;\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.compress0(intArray0, intWrapper0, 3671, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "228-245:test12": {
                    "start": 228,
                    "end": 245,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      intArray0[0] = (-1495);\n",
                        "      intArray0[3] = 3657;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress(intArray0, intWrapper0, 3657, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "208-225:test11": {
                    "start": 208,
                    "end": 225,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      int[] intArray1 = new int[6];\n",
                        "      intArray1[0] = 3657;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessCompress(intArray1, intWrapper0, 2663, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "24-80:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "190-205:test10": {
                    "start": 190,
                    "end": 205,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 6, intArray0, intWrapper0, 28);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 11 out of bounds for length 11\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "171-187:test09": {
                    "start": 171,
                    "end": 187,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      int[] intArray1 = new int[6];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-1079), intArray1, intWrapper0, 2157);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "151-168:test08": {
                    "start": 151,
                    "end": 168,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(2);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 1, intArray0, intWrapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper1, (-1079), intArray0, intWrapper1, 2157);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "129-148:test07": {
                    "start": 129,
                    "end": 148,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "      intArray0[3] = 1;\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      simple9_0.compress0(intArray0, intWrapper1, 2, intArray0, intWrapper1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, 1042, intArray0, intWrapper0, 1082);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "109-126:test06": {
                    "start": 109,
                    "end": 126,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      intArray0[0] = 1638;\n",
                        "      intArray0[1] = 268431544;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.uncompress0(intArray0, intWrapper0, 720, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "100-106:test05": {
                    "start": 100,
                    "end": 106,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      simple9_0.headlessUncompress(intArray0, intWrapper0, (-630), intArray0, intWrapper0, 0);\n",
                        "      assertEquals(0.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "81-97:test04": {
                    "start": 81,
                    "end": 97,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[16];\n",
                        "      intArray0[0] = 3369;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.headlessUncompress(intArray0, intWrapper0, (-3897), intArray0, intWrapper0, 3342);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 16 out of bounds for length 16\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "83-269:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "62-78:test03": {
                    "start": 62,
                    "end": 78,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray1 = new int[6];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.compress0(intArray0, intWrapper0, 937, intArray1, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 12 out of bounds for length 12\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "272-278:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "43-59:test02": {
                    "start": 43,
                    "end": 59,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(27);\n",
                        "      int[] intArray1 = new int[8];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        simple9_0.uncompress0(intArray1, intWrapper0, 30, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 27 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Simple9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "32-40:test01": {
                    "start": 32,
                    "end": 40,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-1642));\n",
                        "      simple9_0.uncompress0(intArray0, intWrapper0, (-1), intArray0, intWrapper1);\n",
                        "      assertEquals(\"3\", intWrapper0.toString());\n",
                        "      assertEquals((-1642L), intWrapper1.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "21-29:test00": {
                    "start": 21,
                    "end": 29,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      Simple9 simple9_0 = new Simple9();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray1 = new int[6];\n",
                        "      simple9_0.uncompress0(intArray1, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "      assertEquals(\"1\", intWrapper0.toString());\n",
                        "      assertEquals(1L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "Simple9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Simple9",
                            "Simple9",
                            "281-288:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}