{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/NewPFD_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import NewPFD": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.NewPFD;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "NewPFD_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "NewPFD_ESTest_scaffolding"
            ],
            "methods": {
                "324-328:test21": {
                    "start": 324,
                    "end": 328,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      String string0 = newPFD0.toString();\n",
                        "      assertEquals(\"NewPFD\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "181-183:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "315-321:test20": {
                    "start": 315,
                    "end": 321,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      newPFD0.headlessCompress(intArray0, intWrapper0, 19, intArray0, intWrapper0);\n",
                        "      assertEquals(0.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "49-55:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "305-312:test19": {
                    "start": 305,
                    "end": 312,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      newPFD0.compress0(intArray0, intWrapper0, (-3313), intArray0, intWrapper0);\n",
                        "      assertEquals((byte)1, intWrapper0.byteValue());\n",
                        "      assertArrayEquals(new int[] {(-3200), 0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "161-169:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "286-302:test18": {
                    "start": 286,
                    "end": 302,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2147483607);\n",
                        "      int[] intArray0 = new int[20];\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper1 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessCompress(intArray0, intWrapper0, 2152, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -2147483561 out of bounds for length 20\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "49-55:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "268-283:test17": {
                    "start": 268,
                    "end": 283,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[32];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessUncompress(intArray0, intWrapper0, 2793, intArray0, intWrapper0, 2793);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Array index out of range: 64\n",
                        "         //\n",
                        "         verifyException(\"java.util.Arrays\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "259-265:test16": {
                    "start": 259,
                    "end": 265,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      newPFD0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 0);\n",
                        "      assertEquals(0L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "250-256:test15": {
                    "start": 250,
                    "end": 256,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      newPFD0.headlessUncompress(intArray0, intWrapper0, (-1571), intArray0, intWrapper0, (-1571));\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "240-247:test14": {
                    "start": 240,
                    "end": 247,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      newPFD0.compress0(intArray0, intWrapper0, (-5), intArray0, intWrapper0);\n",
                        "      assertEquals((byte)0, intWrapper0.byteValue());\n",
                        "      assertEquals(0, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "161-169:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "231-237:test13": {
                    "start": 231,
                    "end": 237,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(Integer.MAX_VALUE);\n",
                        "      newPFD0.uncompress0(intArray0, (IntWrapper) null, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(2.14748365E9F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "172-179:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "213-228:test12": {
                    "start": 213,
                    "end": 228,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.compress0(intArray0, intWrapper0, 3053, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "161-169:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "196-210:test11": {
                    "start": 196,
                    "end": 210,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.compress0(intArray0, (IntWrapper) null, 1836, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "161-169:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "179-193:test10": {
                    "start": 179,
                    "end": 193,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        NewPFD.getBestBFromData(intArray0, (-2074), intWrapper0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -2074 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "63-85:getBestBFromData"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "164-176:test09": {
                    "start": 164,
                    "end": 176,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        NewPFD.getBestBFromData((int[]) null, Integer.MIN_VALUE, (IntWrapper) null, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "63-85:getBestBFromData"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "147-161:test08": {
                    "start": 147,
                    "end": 161,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessCompress(intArray0, (IntWrapper) null, 2705, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "49-55:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "128-144:test07": {
                    "start": 128,
                    "end": 144,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(Integer.MAX_VALUE);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessUncompress(intArray0, intWrapper0, Integer.MAX_VALUE, intArray0, intWrapper1, Integer.MAX_VALUE);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // fromIndex(2147483647) > toIndex(-2147483617)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Arrays\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "111-125:test06": {
                    "start": 111,
                    "end": 125,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessUncompress((int[]) null, intWrapper0, 1126, (int[]) null, intWrapper0, 1126);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "94-108:test05": {
                    "start": 94,
                    "end": 108,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1792);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.uncompress0((int[]) null, intWrapper0, 1792, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "172-179:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "84-91:test04": {
                    "start": 84,
                    "end": 91,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      newPFD0.uncompress0(intArray0, intWrapper0, 31, intArray0, intWrapper0);\n",
                        "      assertEquals(2, intWrapper0.get());\n",
                        "      assertEquals(2L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "172-179:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "77-81:test03": {
                    "start": 77,
                    "end": 81,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2147483607);\n",
                        "      NewPFD.getBestBFromData(intArray0, 2147483607, intWrapper0, intWrapper0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "63-85:getBestBFromData"
                        ]
                    ]
                },
                "59-74:test02": {
                    "start": 59,
                    "end": 74,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.compress0(intArray0, intWrapper0, 128, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "161-169:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "40-56:test01": {
                    "start": 40,
                    "end": 56,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[0] = 512;\n",
                        "      intArray0[1] = (-3968);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.uncompress0(intArray0, intWrapper0, (-2366), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "172-179:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "21-37:test00": {
                    "start": 21,
                    "end": 37,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[0] = 262016;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        newPFD0.headlessUncompress(intArray0, intWrapper0, 2727, intArray0, intWrapper0, 262016);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 128 out of bounds for length 17\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFD\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "127-133:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}