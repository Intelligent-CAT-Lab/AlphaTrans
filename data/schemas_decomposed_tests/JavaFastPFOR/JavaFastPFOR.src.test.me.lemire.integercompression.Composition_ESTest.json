{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/Composition_ESTest.java",
    "imports": {
        "20-20:import EvoRunnerParameters": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "21-21:import RunWith": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "19-19:import EvoRunner": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "15-15:import IntegerCODEC": {
            "start": 15,
            "end": 15,
            "body": [
                "import me.lemire.integercompression.IntegerCODEC;\n"
            ]
        },
        "14-14:import IntWrapper": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "11-11:import Composition": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.Composition;\n"
            ]
        },
        "12-12:import DeltaZigzagVariableByte": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.DeltaZigzagVariableByte;\n"
            ]
        },
        "13-13:import FastPFOR": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.integercompression.FastPFOR;\n"
            ]
        },
        "16-16:import NewPFD": {
            "start": 16,
            "end": 16,
            "body": [
                "import me.lemire.integercompression.NewPFD;\n"
            ]
        },
        "17-17:import NewPFDS9": {
            "start": 17,
            "end": 17,
            "body": [
                "import me.lemire.integercompression.NewPFDS9;\n"
            ]
        },
        "18-18:import VariableByte": {
            "start": 18,
            "end": 18,
            "body": [
                "import me.lemire.integercompression.VariableByte;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Composition_ESTest": {
            "start": 24,
            "end": 24,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Composition_ESTest_scaffolding"
            ],
            "methods": {
                "269-276:test16": {
                    "start": 269,
                    "end": 276,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      FastPFOR fastPFOR0 = FastPFOR.FastPFOR1();\n",
                        "      Composition composition0 = new Composition(fastPFOR0, fastPFOR0);\n",
                        "      int[] intArray0 = new int[33];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(256);\n",
                        "      composition0.compress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(33, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "259-266:test15": {
                    "start": 259,
                    "end": 266,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      FastPFOR fastPFOR0 = FastPFOR.FastPFOR1();\n",
                        "      Composition composition0 = new Composition(fastPFOR0, fastPFOR0);\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(256);\n",
                        "      composition0.uncompress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "240-256:test14": {
                    "start": 240,
                    "end": 256,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      FastPFOR fastPFOR0 = FastPFOR.FastPFOR1();\n",
                        "      Composition composition0 = new Composition(fastPFOR0, fastPFOR0);\n",
                        "      int[] intArray0 = new int[24];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(256);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.compress0(intArray0, intWrapper0, 44, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 256 out of bounds for length 24\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Composition\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "222-237:test13": {
                    "start": 222,
                    "end": 237,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      VariableByte variableByte0 = new VariableByte();\n",
                        "      Composition composition0 = new Composition(variableByte0, variableByte0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-3032));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.compress0((int[]) null, intWrapper0, (-3032), (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-24256 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.VariableByte",
                            "VariableByte",
                            "VariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "202-219:test12": {
                    "start": 202,
                    "end": 219,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      NewPFD newPFD0 = new NewPFD();\n",
                        "      DeltaZigzagVariableByte deltaZigzagVariableByte0 = new DeltaZigzagVariableByte();\n",
                        "      Composition composition0 = new Composition(deltaZigzagVariableByte0, newPFD0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(4336);\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.compress0(intArray0, intWrapper0, Integer.MAX_VALUE, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFD",
                            "NewPFD",
                            "45-46:NewPFD"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte",
                            "DeltaZigzagVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "184-199:test11": {
                    "start": 184,
                    "end": 199,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      FastPFOR fastPFOR0 = FastPFOR.FastPFOR1();\n",
                        "      Composition composition0 = new Composition(fastPFOR0, fastPFOR0);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(256);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.compress0((int[]) null, intWrapper0, 256, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.FastPFOR\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "168-181:test10": {
                    "start": 168,
                    "end": 181,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      Composition composition0 = new Composition((IntegerCODEC) null, (IntegerCODEC) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.toString();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.evosuite.runtime.System\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "65-67:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "148-165:test09": {
                    "start": 148,
                    "end": 165,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper((-1764));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.uncompress0(intArray0, intWrapper1, 55, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -1764 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.NewPFDS9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "130-145:test08": {
                    "start": 130,
                    "end": 145,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      FastPFOR fastPFOR0 = FastPFOR.FastPFOR1();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(65536);\n",
                        "      Composition composition0 = new Composition(fastPFOR0, fastPFOR0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.uncompress0((int[]) null, intWrapper0, 65536, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.FastPFOR\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.FastPFOR",
                            "FastPFOR",
                            "90-92:FastPFOR1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "108-127:test07": {
                    "start": 108,
                    "end": 127,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[1] = 524287;\n",
                        "      intArray0[2] = 554;\n",
                        "      intArray0[3] = (-6);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        composition0.uncompress0(intArray0, intWrapper0, (-484), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "96-105:test06": {
                    "start": 96,
                    "end": 105,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      composition0.compress0(intArray0, intWrapper0, 55, intArray0, intWrapper1);\n",
                        "      assertEquals(1.0F, intWrapper1.floatValue(), 0.01F);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "84-93:test05": {
                    "start": 84,
                    "end": 93,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray1 = new int[8];\n",
                        "      composition0.compress0(intArray0, intWrapper0, 55, intArray1, intWrapper0);\n",
                        "      assertEquals(2.0, intWrapper0.doubleValue(), 0.01);\n",
                        "      assertEquals(2, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "72-81:test04": {
                    "start": 72,
                    "end": 81,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      Composition composition1 = new Composition(composition0, newPFDS9_0);\n",
                        "      composition1.compress0(intArray0, intWrapper0, 78, intArray0, intWrapper0);\n",
                        "      assertEquals((byte)1, intWrapper0.byteValue());\n",
                        "      assertEquals(1, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "37-51:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "60-69:test03": {
                    "start": 60,
                    "end": 69,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      Composition composition1 = new Composition(composition0, newPFDS9_0);\n",
                        "      composition1.uncompress0(intArray0, intWrapper0, 55, intArray0, intWrapper0);\n",
                        "      assertEquals((byte)4, intWrapper0.byteValue());\n",
                        "      assertEquals(4.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "48-57:test02": {
                    "start": 48,
                    "end": 57,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray1 = new int[8];\n",
                        "      composition0.uncompress0(intArray0, intWrapper0, 55, intArray1, intWrapper0);\n",
                        "      assertEquals((short)3, intWrapper0.shortValue());\n",
                        "      assertEquals(3, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "36-45:test01": {
                    "start": 36,
                    "end": 45,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(0);\n",
                        "      composition0.uncompress0(intArray0, intWrapper1, (-484), intArray0, intWrapper0);\n",
                        "      assertEquals(2.0, intWrapper1.doubleValue(), 0.01);\n",
                        "      assertEquals(2, intWrapper1.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "54-62:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "27-33:test00": {
                    "start": 27,
                    "end": 33,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      NewPFDS9 newPFDS9_0 = new NewPFDS9();\n",
                        "      Composition composition0 = new Composition(newPFDS9_0, newPFDS9_0);\n",
                        "      Composition composition1 = new Composition(composition0, newPFDS9_0);\n",
                        "      String string0 = composition1.toString();\n",
                        "      assertNotNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.NewPFDS9",
                            "NewPFDS9",
                            "43-44:NewPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "31-34:Composition"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.Composition",
                            "Composition",
                            "65-67:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}