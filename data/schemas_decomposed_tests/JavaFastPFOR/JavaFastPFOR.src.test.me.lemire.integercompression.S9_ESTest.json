{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/S9_ESTest.java",
    "imports": {
        "13-13:import EvoRunnerParameters": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "14-14:import RunWith": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "12-12:import EvoRunner": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import S9": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.S9;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "S9_ESTest": {
            "start": 17,
            "end": 17,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "S9_ESTest_scaffolding"
            ],
            "methods": {
                "471-473:test34": {
                    "start": 471,
                    "end": 473,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      S9 s9_0 = new S9();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "S9"
                        ]
                    ]
                },
                "463-468:test33": {
                    "start": 463,
                    "end": 468,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[15];\n",
                        "      intArray0[6] = (-1926);\n",
                        "      int int0 = S9.estimatecompress(intArray0, 4, 4);\n",
                        "      assertEquals(3, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "445-460:test32": {
                    "start": 445,
                    "end": 460,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[13];\n",
                        "      intArray0[4] = 2;\n",
                        "      S9.compress(intArray0, 2, 11, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.estimatecompress(intArray0, 2, 11);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "436-442:test31": {
                    "start": 436,
                    "end": 442,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[3] = (-4155);\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, (-4155), intArray0, 3, 3);\n",
                        "      assertEquals(12, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "427-433:test30": {
                    "start": 427,
                    "end": 433,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[16];\n",
                        "      intArray0[4] = 53;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 53, intArray0, 2, 2);\n",
                        "      assertEquals(16, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "409-424:test29": {
                    "start": 409,
                    "end": 424,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[4] = 2;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "391-406:test28": {
                    "start": 391,
                    "end": 406,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[5] = 2;\n",
                        "      S9.compress(intArray0, 2, 4, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 0, intArray0, 1, 14);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "373-388:test27": {
                    "start": 373,
                    "end": 388,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[4] = 5;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 2, intArray0, 1772, 25);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 1772 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "364-370:test26": {
                    "start": 364,
                    "end": 370,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[4] = 10;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 10, intArray0, 1, 1);\n",
                        "      assertEquals(12, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "355-361:test25": {
                    "start": 355,
                    "end": 361,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[14];\n",
                        "      intArray0[4] = 20;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 20, intArray0, 2, 2);\n",
                        "      assertEquals(14, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "344-352:test24": {
                    "start": 344,
                    "end": 352,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[5] = (-1039);\n",
                        "      S9.compress(intArray0, 2, 4, intArray0, 2);\n",
                        "      assertArrayEquals(new int[] {0, 0, 1610612736, (-1039), 0, (-1039), 0, 0}, intArray0);\n",
                        "      \n",
                        "      S9.uncompress(intArray0, 2, (-1039), intArray0, 2, 2);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, (-1039), 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ]
                    ]
                },
                "335-341:test23": {
                    "start": 335,
                    "end": 341,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[4] = 4442;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 2, intArray0, 2, 1);\n",
                        "      assertEquals(12, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "318-332:test22": {
                    "start": 318,
                    "end": 332,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      intArray0[0] = (-6276);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 0, (-6276), intArray0, (-6276), 23);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "309-315:test21": {
                    "start": 309,
                    "end": 315,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[4] = 2;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 2, intArray0, 2, 7);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 2, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "300-306:test20": {
                    "start": 300,
                    "end": 306,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[4] = 5;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, 5, intArray0, 1, 1);\n",
                        "      assertEquals(12, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "282-297:test19": {
                    "start": 282,
                    "end": 297,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      intArray0[4] = 10;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 1269, intArray0, 28, 2587);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 28 out of bounds for length 12\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "264-279:test18": {
                    "start": 264,
                    "end": 279,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[14];\n",
                        "      intArray0[4] = 31;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 31, intArray0, (-1155), 14);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -1155 out of bounds for length 14\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "246-261:test17": {
                    "start": 246,
                    "end": 261,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[16];\n",
                        "      intArray0[4] = 53;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 7, intArray0, 6, 28);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 16 out of bounds for length 16\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "228-243:test16": {
                    "start": 228,
                    "end": 243,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[5] = (-1039);\n",
                        "      S9.compress(intArray0, 2, 4, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, (-1039), intArray0, (-3456), 8);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -3456 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "219-225:test15": {
                    "start": 219,
                    "end": 225,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[4] = (-1002);\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      S9.uncompress(intArray0, 2, (-1002), intArray0, 3, 3);\n",
                        "      assertArrayEquals(new int[] {0, 0, 1879048192, 0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "203-216:test14": {
                    "start": 203,
                    "end": 216,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.compress(intArray0, 7, 9, intArray0, 1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 9 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "187-200:test13": {
                    "start": 187,
                    "end": 200,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.compress((int[]) null, 1, 7, intArray0, 1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "171-184:test12": {
                    "start": 171,
                    "end": 184,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.estimatecompress(intArray0, 7, 7);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 12 out of bounds for length 12\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "156-168:test11": {
                    "start": 156,
                    "end": 168,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.estimatecompress((int[]) null, 9, 9);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "141-153:test10": {
                    "start": 141,
                    "end": 153,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress((int[]) null, 815, 815, (int[]) null, 815, 815);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "134-138:test09": {
                    "start": 134,
                    "end": 138,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      int int0 = S9.estimatecompress(intArray0, 0, 0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "127-131:test08": {
                    "start": 127,
                    "end": 131,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      int int0 = S9.estimatecompress(intArray0, (-1071), (-2465));\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "110-124:test07": {
                    "start": 110,
                    "end": 124,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[4] = 268435456;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.estimatecompress(intArray0, 3, 3);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // Too big a number\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "31-58:estimatecompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "103-107:test06": {
                    "start": 103,
                    "end": 107,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      int int0 = S9.compress(intArray0, 3, (-1038), intArray0, 4442);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "96-100:test05": {
                    "start": 96,
                    "end": 100,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      S9.uncompress(intArray0, (-3155), 968, intArray0, 4442, (-3140));\n",
                        "      assertEquals(12, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "80-93:test04": {
                    "start": 80,
                    "end": 93,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[23];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 0, (-1364), intArray0, (-3636), 28);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -3636 out of bounds for length 23\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "64-77:test03": {
                    "start": 64,
                    "end": 77,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[12];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 6, 6, intArray0, Integer.MIN_VALUE, (-3481));\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 12 out of bounds for length 12\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "47-61:test02": {
                    "start": 47,
                    "end": 61,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      intArray0[0] = 395;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 0, 1385, intArray0, 0, 395);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 3 out of bounds for length 3\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "38-44:test01": {
                    "start": 38,
                    "end": 44,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      intArray0[4] = 1;\n",
                        "      S9.compress(intArray0, 1, 7, intArray0, 1);\n",
                        "      S9.uncompress(intArray0, 1, 1, intArray0, 1, 7);\n",
                        "      assertEquals(11, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "20-35:test00": {
                    "start": 20,
                    "end": 35,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[11];\n",
                        "      intArray0[4] = 2;\n",
                        "      S9.compress(intArray0, 2, 7, intArray0, 2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        S9.uncompress(intArray0, 2, 2, intArray0, 7, 1954);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 11 out of bounds for length 11\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "76-106:compress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.S9",
                            "S9",
                            "124-197:uncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}