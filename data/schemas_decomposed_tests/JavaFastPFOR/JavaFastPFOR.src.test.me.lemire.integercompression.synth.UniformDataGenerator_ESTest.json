{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/synth/UniformDataGenerator_ESTest.java",
    "imports": {
        "13-13:import EvoRunnerParameters": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "12-12:import EvoRunner": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import UniformDataGenerator": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.synth.UniformDataGenerator;\n"
            ]
        },
        "14-14:import MockRandom": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.mock.java.util.MockRandom;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "UniformDataGenerator_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "UniformDataGenerator_ESTest_scaffolding"
            ],
            "methods": {
                "304-308:test24": {
                    "start": 304,
                    "end": 308,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniformHash(1, 1);\n",
                        "      assertEquals(1, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "288-301:test23": {
                    "start": 288,
                    "end": 301,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(0, 0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformHash(2615, 0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // not possible\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "281-285:test22": {
                    "start": 281,
                    "end": 285,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniform(1644, 1645);\n",
                        "      assertEquals(1644, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "274-278:test21": {
                    "start": 274,
                    "end": 278,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniform(1, 1);\n",
                        "      assertArrayEquals(new int[] {0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "258-271:test20": {
                    "start": 258,
                    "end": 271,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformBitmap(1644, 481);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // not possible\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "251-255:test19": {
                    "start": 251,
                    "end": 255,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(167, 167);\n",
                        "      // Undeclared exception!\n",
                        "      uniformDataGenerator0.generateUniform(167, 1813);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ]
                    ]
                },
                "242-248:test18": {
                    "start": 242,
                    "end": 248,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(0, 0);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniform(0, 0);\n",
                        "      int[] intArray1 = UniformDataGenerator.negate(intArray0, 0);\n",
                        "      assertEquals(0, intArray1.length);\n",
                        "      assertNotSame(intArray1, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotSame"
                        ]
                    ]
                },
                "226-239:test17": {
                    "start": 226,
                    "end": 239,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator((-1773), (-1773));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniform((-1773), (-1773));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -1773\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "210-223:test16": {
                    "start": 210,
                    "end": 223,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator((-1410), (-1410));\n",
                        "      uniformDataGenerator0.rand = null;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniform(980, 6571);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "194-207:test15": {
                    "start": 194,
                    "end": 207,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator((-4), (-4));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniform((-4), (-9));\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // not possible\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "178-191:test14": {
                    "start": 178,
                    "end": 191,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator((-1967), (-1967));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformBitmap((-1967), (-1967));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -1967\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "162-175:test13": {
                    "start": 162,
                    "end": 175,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      uniformDataGenerator0.rand = null;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformBitmap(1, 1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "155-159:test12": {
                    "start": 155,
                    "end": 159,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(0, 0);\n",
                        "      // Undeclared exception!\n",
                        "      uniformDataGenerator0.generateUniformBitmap(158, 1456);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ]
                    ]
                },
                "139-152:test11": {
                    "start": 139,
                    "end": 152,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator((-8), (-8));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformHash((-8), (-8));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "123-136:test10": {
                    "start": 123,
                    "end": 136,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      uniformDataGenerator0.rand = null;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        uniformDataGenerator0.generateUniformHash(1, 1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "106-120:test09": {
                    "start": 106,
                    "end": 120,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      intArray0[0] = 344;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        UniformDataGenerator.negate(intArray0, 344);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 343 out of bounds for length 343\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "90-103:test08": {
                    "start": 90,
                    "end": 103,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        UniformDataGenerator.negate(intArray0, 0);\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "75-87:test07": {
                    "start": 75,
                    "end": 87,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        UniformDataGenerator.negate((int[]) null, 0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "67-72:test06": {
                    "start": 67,
                    "end": 72,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      UniformDataGenerator.negate(intArray0, 5329);\n",
                        "      // Undeclared exception!\n",
                        "      UniformDataGenerator.negate(intArray0, 5329);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ]
                    ]
                },
                "60-64:test05": {
                    "start": 60,
                    "end": 64,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(0, 0);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniformBitmap(0, 0);\n",
                        "      assertEquals(0, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "53-57:test04": {
                    "start": 53,
                    "end": 57,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniformBitmap(1, 1);\n",
                        "      assertArrayEquals(new int[] {0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "102-120:generateUniformBitmap"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "46-50:test03": {
                    "start": 46,
                    "end": 50,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(0, 2);\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniformHash(0, 0);\n",
                        "      assertEquals(0, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "39-43:test02": {
                    "start": 39,
                    "end": 43,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(234, 234);\n",
                        "      // Undeclared exception!\n",
                        "      uniformDataGenerator0.generateUniformHash(2, 1850);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "49-61:generateUniformHash"
                        ]
                    ]
                },
                "31-36:test01": {
                    "start": 31,
                    "end": 36,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[1] = 1394;\n",
                        "      int[] intArray1 = UniformDataGenerator.negate(intArray0, 2142);\n",
                        "      assertEquals(2133, intArray1.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "66-79:negate"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "21-28:test00": {
                    "start": 21,
                    "end": 28,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      UniformDataGenerator uniformDataGenerator0 = new UniformDataGenerator(1, 1);\n",
                        "      MockRandom mockRandom0 = new MockRandom(1);\n",
                        "      mockRandom0.nextLong();\n",
                        "      int[] intArray0 = uniformDataGenerator0.generateUniform(1, 135);\n",
                        "      assertArrayEquals(new int[] {1}, intArray0);\n",
                        "      assertEquals(1, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "24-33:UniformDataGenerator"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/util/MockRandom",
                            "MockRandom"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.UniformDataGenerator",
                            "UniformDataGenerator",
                            "90-97:generateUniform"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/util/MockRandom",
                            "nextLong"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}