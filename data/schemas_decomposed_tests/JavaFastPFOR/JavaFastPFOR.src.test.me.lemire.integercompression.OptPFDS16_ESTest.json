{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/OptPFDS16_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import OptPFDS16": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.OptPFDS16;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "OptPFDS16_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "OptPFDS16_ESTest_scaffolding"
            ],
            "methods": {
                "249-253:test16": {
                    "start": 249,
                    "end": 253,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      String string0 = optPFDS16_0.toString();\n",
                        "      assertEquals(\"OptPFDS16\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "196-198:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "240-246:test15": {
                    "start": 240,
                    "end": 246,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      optPFDS16_0.headlessCompress(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(\"0\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "46-54:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "220-237:test14": {
                    "start": 220,
                    "end": 237,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[133];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      optPFDS16_0.compress0(intArray0, intWrapper0, (-5625), intArray0, intWrapper0);\n",
                        "      IntWrapper intWrapper1 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.compress0(intArray0, intWrapper1, 33554431, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 133 out of bounds for length 133\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "211-217:test13": {
                    "start": 211,
                    "end": 217,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      optPFDS16_0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 0);\n",
                        "      assertEquals(0.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "193-208:test12": {
                    "start": 193,
                    "end": 208,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[128];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.headlessUncompress(intArray0, intWrapper0, 1319, intArray0, intWrapper0, 1319);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Array index out of range: 160\n",
                        "         //\n",
                        "         verifyException(\"java.util.Arrays\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "183-190:test11": {
                    "start": 183,
                    "end": 190,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      optPFDS16_0.compress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals((short)0, intWrapper0.shortValue());\n",
                        "      assertEquals(\"0\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "166-180:test10": {
                    "start": 166,
                    "end": 180,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(457);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.uncompress0((int[]) null, intWrapper0, 457, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "156-163:test09": {
                    "start": 156,
                    "end": 163,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      optPFDS16_0.uncompress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(0.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)0, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "139-153:test08": {
                    "start": 139,
                    "end": 153,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.headlessCompress((int[]) null, intWrapper0, 384, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "46-54:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "122-136:test07": {
                    "start": 122,
                    "end": 136,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.compress0((int[]) null, intWrapper0, 1512, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "104-119:test06": {
                    "start": 104,
                    "end": 119,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.headlessCompress(intArray0, intWrapper0, 701, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 1 out of bounds for length 1\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "46-54:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "87-101:test05": {
                    "start": 87,
                    "end": 101,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.headlessUncompress((int[]) null, intWrapper0, 2618, (int[]) null, intWrapper0, 2618);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "69-84:test04": {
                    "start": 69,
                    "end": 84,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.uncompress0(intArray0, intWrapper0, 14, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 0 out of bounds for length 0\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "59-66:test03": {
                    "start": 59,
                    "end": 66,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFDS16_0.uncompress0(intArray0, intWrapper0, (-473), intArray0, intWrapper0);\n",
                        "      assertEquals(\"1\", intWrapper0.toString());\n",
                        "      assertEquals(1L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "187-194:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "49-56:test02": {
                    "start": 49,
                    "end": 56,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[130];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      optPFDS16_0.compress0(intArray0, intWrapper0, 128, intArray0, intWrapper0);\n",
                        "      assertEquals((byte)2, intWrapper0.byteValue());\n",
                        "      assertEquals(\"2\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "176-184:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "40-46:test01": {
                    "start": 40,
                    "end": 46,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-917));\n",
                        "      optPFDS16_0.headlessUncompress(intArray0, intWrapper0, 30, intArray0, intWrapper0, (-917));\n",
                        "      assertEquals((-917), intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "21-37:test00": {
                    "start": 21,
                    "end": 37,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      OptPFDS16 optPFDS16_0 = new OptPFDS16();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[0] = (-15);\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS16_0.headlessUncompress(intArray0, intWrapper0, 447, intArray0, intWrapper0, 922);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "42-43:OptPFDS16"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS16",
                            "OptPFDS16",
                            "142-148:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}