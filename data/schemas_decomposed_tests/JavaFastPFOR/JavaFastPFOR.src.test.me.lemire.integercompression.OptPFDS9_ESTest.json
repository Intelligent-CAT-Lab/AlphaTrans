{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/OptPFDS9_ESTest.java",
    "imports": {
        "14-14:import EvoRunnerParameters": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "13-13:import EvoRunner": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import IntWrapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "12-12:import OptPFDS9": {
            "start": 12,
            "end": 12,
            "body": [
                "import me.lemire.integercompression.OptPFDS9;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "OptPFDS9_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "OptPFDS9_ESTest_scaffolding"
            ],
            "methods": {
                "348-352:test22": {
                    "start": 348,
                    "end": 352,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      String string0 = optPFDS9_0.toString();\n",
                        "      assertEquals(\"OptPFDS9\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "196-198:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "330-345:test21": {
                    "start": 330,
                    "end": 345,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.compress0(intArray0, intWrapper0, 2617, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 129 out of bounds for length 129\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "175-183:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "321-327:test20": {
                    "start": 321,
                    "end": 327,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(906);\n",
                        "      optPFDS9_0.headlessCompress(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals((byte) (-118), intWrapper0.byteValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "46-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ]
                    ]
                },
                "302-318:test19": {
                    "start": 302,
                    "end": 318,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(98);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.compress0(intArray0, intWrapper0, 2617, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 129 out of bounds for length 129\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "175-183:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "293-299:test18": {
                    "start": 293,
                    "end": 299,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[46];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      optPFDS9_0.headlessCompress(intArray0, intWrapper0, (-1357), intArray0, intWrapper0);\n",
                        "      assertEquals(46, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "46-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "283-290:test17": {
                    "start": 283,
                    "end": 290,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      optPFDS9_0.headlessUncompress(intArray0, intWrapper0, 245, intArray0, intWrapper0, 245);\n",
                        "      assertEquals((short)1, intWrapper0.shortValue());\n",
                        "      assertEquals(1L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "274-280:test16": {
                    "start": 274,
                    "end": 280,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFDS9_0.headlessUncompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, 0);\n",
                        "      assertEquals((byte)0, intWrapper0.byteValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ]
                    ]
                },
                "264-271:test15": {
                    "start": 264,
                    "end": 271,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      optPFDS9_0.compress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(0.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(\"0\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "175-183:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "254-261:test14": {
                    "start": 254,
                    "end": 261,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFDS9_0.uncompress0(intArray0, intWrapper0, (-2427), intArray0, intWrapper0);\n",
                        "      assertEquals(1.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(1.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "244-251:test13": {
                    "start": 244,
                    "end": 251,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFDS9_0.uncompress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertEquals(0.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)0, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "227-241:test12": {
                    "start": 227,
                    "end": 241,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.compress0((int[]) null, intWrapper0, (-2026), (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "175-183:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "209-224:test11": {
                    "start": 209,
                    "end": 224,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[18];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessCompress(intArray0, intWrapper0, 3792, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 18 out of bounds for length 18\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "46-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "193-206:test10": {
                    "start": 193,
                    "end": 206,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessCompress((int[]) null, (IntWrapper) null, 1603, (int[]) null, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "46-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "176-190:test09": {
                    "start": 176,
                    "end": 190,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessUncompress((int[]) null, intWrapper0, 4194303, (int[]) null, intWrapper0, 4194303);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "156-173:test08": {
                    "start": 156,
                    "end": 173,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      intArray0[0] = 2952;\n",
                        "      intArray0[1] = (-2837);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessUncompress(intArray0, intWrapper0, (-2837), intArray0, intWrapper0, 2952);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "139-153:test07": {
                    "start": 139,
                    "end": 153,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.uncompress0(intArray0, (IntWrapper) null, 67108863, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.OptPFDS9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "118-136:test06": {
                    "start": 118,
                    "end": 136,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      intArray0[0] = 1632;\n",
                        "      intArray0[1] = 1632;\n",
                        "      intArray0[2] = (-236);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.uncompress0(intArray0, intWrapper0, (-236), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // shouldn't happen\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "108-115:test05": {
                    "start": 108,
                    "end": 115,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      optPFDS9_0.compress0(intArray0, intWrapper0, (-1584), intArray0, intWrapper0);\n",
                        "      assertEquals(1, intWrapper0.get());\n",
                        "      assertArrayEquals(new int[] {(-1536), 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "175-183:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "90-105:test04": {
                    "start": 90,
                    "end": 105,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessCompress(intArray0, intWrapper0, 212, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 0 out of bounds for length 0\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.Util\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "46-53:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "81-87:test03": {
                    "start": 81,
                    "end": 87,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      optPFDS9_0.headlessUncompress(intArray0, intWrapper0, 31, intArray0, intWrapper0, (-674));\n",
                        "      assertEquals(0.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "61-78:test02": {
                    "start": 61,
                    "end": 78,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[0] = 898;\n",
                        "      intArray0[1] = (-2837);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.uncompress0(intArray0, intWrapper0, (-43), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.S9\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "41-58:test01": {
                    "start": 41,
                    "end": 58,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      intArray0[0] = 524296;\n",
                        "      intArray0[1] = 524296;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.uncompress0(intArray0, intWrapper0, 524296, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 10 out of bounds for length 5\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.BitPacking\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "186-193:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "21-38:test00": {
                    "start": 21,
                    "end": 38,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[46];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      OptPFDS9 optPFDS9_0 = new OptPFDS9();\n",
                        "      int[] intArray1 = new int[7];\n",
                        "      intArray1[0] = 2;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        optPFDS9_0.headlessUncompress(intArray1, intWrapper0, Integer.MIN_VALUE, intArray0, intWrapper0, 1191);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 46 out of bounds for length 46\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.BitPacking\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "42-43:OptPFDS9"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.OptPFDS9",
                            "OptPFDS9",
                            "141-147:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}