{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/differential/Delta_ESTest.java",
    "imports": {
        "13-13:import EvoRunnerParameters": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "14-14:import RunWith": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "12-12:import EvoRunner": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import Delta": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.differential.Delta;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Delta_ESTest": {
            "start": 17,
            "end": 17,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Delta_ESTest_scaffolding"
            ],
            "methods": {
                "348-350:test29": {
                    "start": 348,
                    "end": 350,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      Delta delta0 = new Delta();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "Delta"
                        ]
                    ]
                },
                "333-345:test28": {
                    "start": 333,
                    "end": 345,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta1(intArray0, 0, (-811), (-1125));\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "324-330:test27": {
                    "start": 324,
                    "end": 330,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      Delta.delta2(intArray0, 0, 4, 815, intArray0);\n",
                        "      int int0 = Delta.delta2(intArray0, 0, 4, (-2138), intArray0);\n",
                        "      assertArrayEquals(new int[] {1323, 815, 0, 0}, intArray0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "308-321:test26": {
                    "start": 308,
                    "end": 321,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta0(intArray0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 1 out of bounds for length 0\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "97-113:fastinverseDelta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "301-305:test25": {
                    "start": 301,
                    "end": 305,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      Delta.fastinverseDelta0(intArray0);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "97-113:fastinverseDelta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "294-298:test24": {
                    "start": 294,
                    "end": 298,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      int int0 = Delta.fastinverseDelta1(intArray0, 3, 3, 0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "287-291:test23": {
                    "start": 287,
                    "end": 291,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      int int0 = Delta.fastinverseDelta1(intArray0, 0, 4, (-751));\n",
                        "      assertEquals((-751), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "272-284:test22": {
                    "start": 272,
                    "end": 284,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta0((int[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "24-28:delta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "258-269:test21": {
                    "start": 258,
                    "end": 269,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta1((int[]) null, 1, 1, 1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "243-255:test20": {
                    "start": 243,
                    "end": 255,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta2((int[]) null, 139, 139, 139, (int[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "228-240:test19": {
                    "start": 228,
                    "end": 240,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta0((int[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "97-113:fastinverseDelta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "213-225:test18": {
                    "start": 213,
                    "end": 225,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta1((int[]) null, 139, 139, 139);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "198-210:test17": {
                    "start": 198,
                    "end": 210,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.inverseDelta((int[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "84-88:inverseDelta"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "189-195:test16": {
                    "start": 189,
                    "end": 195,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[5] = (-35);\n",
                        "      int int0 = Delta.delta1(intArray0, 3, 3, 1178);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, (-1178), 0, (-35), 0}, intArray0);\n",
                        "      assertEquals((-35), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "180-186:test15": {
                    "start": 180,
                    "end": 186,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      intArray0[0] = 1;\n",
                        "      int int0 = Delta.delta1(intArray0, 0, 1, 0);\n",
                        "      assertArrayEquals(new int[] {1, 0, 0}, intArray0);\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "173-177:test14": {
                    "start": 173,
                    "end": 177,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      int int0 = Delta.delta2(intArray0, 1, 0, 3883, intArray0);\n",
                        "      assertEquals((-3883), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "166-170:test13": {
                    "start": 166,
                    "end": 170,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      int int0 = Delta.delta2(intArray0, 0, 1, (-1215), intArray0);\n",
                        "      assertEquals(1215, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "158-163:test12": {
                    "start": 158,
                    "end": 163,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      int int0 = Delta.fastinverseDelta1(intArray0, 0, 1, 2);\n",
                        "      assertArrayEquals(new int[] {2, 0, 0, 0}, intArray0);\n",
                        "      assertEquals(2, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "151-155:test11": {
                    "start": 151,
                    "end": 155,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      Delta.delta0(intArray0);\n",
                        "      assertArrayEquals(new int[] {}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "24-28:delta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "143-148:test10": {
                    "start": 143,
                    "end": 148,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[0] = (-2653);\n",
                        "      Delta.delta0(intArray0);\n",
                        "      assertArrayEquals(new int[] {(-2653), 2653, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "24-28:delta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "135-140:test09": {
                    "start": 135,
                    "end": 140,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      int int0 = Delta.delta1(intArray0, 3, 0, 1349);\n",
                        "      assertEquals(0, int0);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, (-1349), 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "126-132:test08": {
                    "start": 126,
                    "end": 132,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[3] = 1197;\n",
                        "      int int0 = Delta.delta1(intArray0, 3, 3, 1178);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 19, (-1197), 0, 0}, intArray0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "43-50:delta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "109-123:test07": {
                    "start": 109,
                    "end": 123,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      int[] intArray1 = new int[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta2(intArray0, 814, 3, 0, intArray1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 816 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "92-106:test06": {
                    "start": 92,
                    "end": 106,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      int[] intArray1 = new int[5];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.delta2(intArray0, 0, 0, 1113, intArray1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -1 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "68-75:delta2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "85-89:test05": {
                    "start": 85,
                    "end": 89,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      Delta.inverseDelta(intArray0);\n",
                        "      assertArrayEquals(new int[] {}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "84-88:inverseDelta"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "77-82:test04": {
                    "start": 77,
                    "end": 82,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[0] = (-2653);\n",
                        "      Delta.inverseDelta(intArray0);\n",
                        "      assertArrayEquals(new int[] {(-2653), (-2653), (-2653), (-2653), (-2653), (-2653), (-2653)}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "84-88:inverseDelta"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "69-74:test03": {
                    "start": 69,
                    "end": 74,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[0] = 1911;\n",
                        "      Delta.fastinverseDelta0(intArray0);\n",
                        "      assertArrayEquals(new int[] {1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "97-113:fastinverseDelta0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "53-66:test02": {
                    "start": 53,
                    "end": 66,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta1(intArray0, 0, 1757, 1687);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "36-50:test01": {
                    "start": 36,
                    "end": 50,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[0] = (-2653);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta1(intArray0, 0, 565, 0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 7 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "20-33:test00": {
                    "start": 20,
                    "end": 33,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Delta.fastinverseDelta1(intArray0, 0, 0, 2411);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.Delta\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.Delta",
                            "Delta",
                            "129-148:fastinverseDelta1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}