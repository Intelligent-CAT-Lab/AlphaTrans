{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/benchmarktools/PerformanceLogger_ESTest.java",
    "imports": {
        "12-12:import EvoRunnerParameters": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "13-13:import RunWith": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "11-11:import EvoRunner": {
            "start": 11,
            "end": 11,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "10-10:import PerformanceLogger": {
            "start": 10,
            "end": 10,
            "body": [
                "import me.lemire.integercompression.benchmarktools.PerformanceLogger;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "PerformanceLogger_ESTest": {
            "start": 16,
            "end": 16,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "PerformanceLogger_ESTest_scaffolding"
            ],
            "methods": {
                "181-185:test18": {
                    "start": 181,
                    "end": 185,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addCompressedSize(0L);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "46-48:addCompressedSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "174-178:test17": {
                    "start": 174,
                    "end": 178,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addOriginalSize(0L);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "167-171:test16": {
                    "start": 167,
                    "end": 171,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.getOriginalSize();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "50-52:getOriginalSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "160-164:test15": {
                    "start": 160,
                    "end": 164,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.getCompressedSize();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "54-56:getCompressedSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "153-157:test14": {
                    "start": 153,
                    "end": 157,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      PerformanceLogger.Timer performanceLogger_Timer0 = new PerformanceLogger.Timer();\n",
                        "      long long0 = performanceLogger_Timer0.getDuration();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "17-18:Timer"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "29-31:getDuration"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "145-150:test13": {
                    "start": 145,
                    "end": 150,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addCompressedSize((-1543L));\n",
                        "      long long0 = performanceLogger0.getCompressedSize();\n",
                        "      assertEquals((-1543L), long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "54-56:getCompressedSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "46-48:addCompressedSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "136-142:test12": {
                    "start": 136,
                    "end": 142,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addOriginalSize((-1543L));\n",
                        "      performanceLogger0.addCompressedSize((-1543L));\n",
                        "      double double0 = performanceLogger0.getBitPerInt();\n",
                        "      assertEquals(32.0, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "58-60:getBitPerInt"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "46-48:addCompressedSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "126-133:test11": {
                    "start": 126,
                    "end": 133,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addOriginalSize(1392409281320000L);\n",
                        "      assertEquals(1392409281320000L, long0);\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getCompressSpeed();\n",
                        "      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "66-69:getCompressSpeed"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "116-123:test10": {
                    "start": 116,
                    "end": 123,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addCompressedSize((-1529L));\n",
                        "      assertEquals((-1529L), long0);\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getBitPerInt();\n",
                        "      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "46-48:addCompressedSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "58-60:getBitPerInt"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "106-113:test09": {
                    "start": 106,
                    "end": 113,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addOriginalSize(5002L);\n",
                        "      assertEquals(5002L, long0);\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getBitPerInt();\n",
                        "      assertEquals(0.0, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "58-60:getBitPerInt"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "95-103:test08": {
                    "start": 95,
                    "end": 103,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      PerformanceLogger.Timer performanceLogger_Timer0 = performanceLogger0.compressionTimer;\n",
                        "      performanceLogger_Timer0.end();\n",
                        "      assertEquals(1392409281320000L, performanceLogger_Timer0.getDuration());\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getCompressSpeed();\n",
                        "      assertEquals(0.0, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "66-69:getCompressSpeed"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "24-27:end"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "29-31:getDuration"
                        ]
                    ]
                },
                "87-92:test07": {
                    "start": 87,
                    "end": 92,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addCompressedSize(1L);\n",
                        "      long long0 = performanceLogger0.getCompressedSize();\n",
                        "      assertEquals(1L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "54-56:getCompressedSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "46-48:addCompressedSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "77-84:test06": {
                    "start": 77,
                    "end": 84,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addOriginalSize((-1543L));\n",
                        "      assertEquals((-1543L), long0);\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getDecompressSpeed();\n",
                        "      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "71-74:getDecompressSpeed"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "67-74:test05": {
                    "start": 67,
                    "end": 74,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      long long0 = performanceLogger0.addOriginalSize(1392409281320000L);\n",
                        "      assertEquals(1392409281320000L, long0);\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getDecompressSpeed();\n",
                        "      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "71-74:getDecompressSpeed"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "56-64:test04": {
                    "start": 56,
                    "end": 64,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      PerformanceLogger.Timer performanceLogger_Timer0 = performanceLogger0.decompressionTimer;\n",
                        "      performanceLogger_Timer0.end();\n",
                        "      assertEquals(1392409281320000L, performanceLogger_Timer0.getDuration());\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getDecompressSpeed();\n",
                        "      assertEquals(0.0, double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "71-74:getDecompressSpeed"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "24-27:end"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "29-31:getDuration"
                        ]
                    ]
                },
                "48-53:test03": {
                    "start": 48,
                    "end": 53,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addOriginalSize((-1543L));\n",
                        "      long long0 = performanceLogger0.getOriginalSize();\n",
                        "      assertEquals((-1543L), long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "50-52:getOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "40-45:test02": {
                    "start": 40,
                    "end": 45,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addOriginalSize(2234L);\n",
                        "      long long0 = performanceLogger0.getOriginalSize();\n",
                        "      assertEquals(2234L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "50-52:getOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "31-37:test01": {
                    "start": 31,
                    "end": 37,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      PerformanceLogger.Timer performanceLogger_Timer0 = performanceLogger0.compressionTimer;\n",
                        "      performanceLogger_Timer0.start();\n",
                        "      long long0 = performanceLogger_Timer0.end();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "24-27:end"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "20-22:start"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "19-28:test00": {
                    "start": 19,
                    "end": 28,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      PerformanceLogger performanceLogger0 = new PerformanceLogger();\n",
                        "      performanceLogger0.addOriginalSize((-1543L));\n",
                        "      PerformanceLogger.Timer performanceLogger_Timer0 = performanceLogger0.compressionTimer;\n",
                        "      performanceLogger_Timer0.end();\n",
                        "      assertEquals(1392409281320000L, performanceLogger_Timer0.getDuration());\n",
                        "      \n",
                        "      double double0 = performanceLogger0.getCompressSpeed();\n",
                        "      assertEquals((-1.1081511885192552E-9), double0, 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "PerformanceLogger"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "66-69:getCompressSpeed"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "PerformanceLogger",
                            "42-44:addOriginalSize"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "24-27:end"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.benchmarktools.PerformanceLogger",
                            "Timer",
                            "29-31:getDuration"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}