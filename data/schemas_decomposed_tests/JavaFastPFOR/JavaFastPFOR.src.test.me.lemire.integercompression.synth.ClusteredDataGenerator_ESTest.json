{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/synth/ClusteredDataGenerator_ESTest.java",
    "imports": {
        "13-13:import EvoRunnerParameters": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "15-15:import RunWith": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "12-12:import EvoRunner": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "14-14:import Random": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.Random;\n"
            ]
        },
        "11-11:import ClusteredDataGenerator": {
            "start": 11,
            "end": 11,
            "body": [
                "import me.lemire.integercompression.synth.ClusteredDataGenerator;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "ClusteredDataGenerator_ESTest": {
            "start": 18,
            "end": 18,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "ClusteredDataGenerator_ESTest_scaffolding"
            ],
            "methods": {
                "229-233:test16": {
                    "start": 229,
                    "end": 233,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      clusteredDataGenerator0.generateClustered(1165, 1169);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ]
                    ]
                },
                "212-226:test15": {
                    "start": 212,
                    "end": 226,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      Random.setNextRandom(636);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.generateClustered(636, (-2209));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -2845\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/Random",
                            "setNextRandom"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "196-209:test14": {
                    "start": 196,
                    "end": 209,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = clusteredDataGenerator0.generateClustered(474, 474);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillClustered(intArray0, 474, 474, 474, 474);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "179-193:test13": {
                    "start": 179,
                    "end": 193,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillClustered(intArray0, (-1832), (-1832), (-1832), (-1832));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -1832\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "164-176:test12": {
                    "start": 164,
                    "end": 176,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillClustered((int[]) null, 834, 834, 834, 834);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "148-161:test11": {
                    "start": 148,
                    "end": 161,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillClustered((int[]) null, (-3968), (-1081), (-1081), (-3968));\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // not possible\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "140-145:test10": {
                    "start": 140,
                    "end": 145,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      clusteredDataGenerator0.fillClustered(intArray0, 2, 2, 20, 207);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ]
                    ]
                },
                "124-137:test09": {
                    "start": 124,
                    "end": 137,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillUniform(intArray0, 1, 1, 1, 1539);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "108-121:test08": {
                    "start": 108,
                    "end": 121,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillUniform((int[]) null, (-476), (-476), (-476), (-476));\n",
                        "        fail(\"Expecting exception: NegativeArraySizeException\");\n",
                        "      \n",
                        "      } catch(NegativeArraySizeException e) {\n",
                        "         //\n",
                        "         // -476\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "91-105:test07": {
                    "start": 91,
                    "end": 105,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      clusteredDataGenerator0.unidg = null;\n",
                        "      int[] intArray0 = new int[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillUniform(intArray0, 1, 1, (-4240), 1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "75-88:test06": {
                    "start": 75,
                    "end": 88,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.fillUniform((int[]) null, (-1619), (-1619), 1699, (-1619));\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // not possible\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.synth.UniformDataGenerator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "68-72:test05": {
                    "start": 68,
                    "end": 72,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      // Undeclared exception!\n",
                        "      clusteredDataGenerator0.fillUniform((int[]) null, 10, 10, (-158), 10);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ]
                    ]
                },
                "52-65:test04": {
                    "start": 52,
                    "end": 65,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      clusteredDataGenerator0.unidg = null;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        clusteredDataGenerator0.generateClustered(2818, 2818);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "45-49:test03": {
                    "start": 45,
                    "end": 49,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = clusteredDataGenerator0.generateClustered(0, 335);\n",
                        "      assertEquals(0, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "69-73:generateClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "37-42:test02": {
                    "start": 37,
                    "end": 42,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      clusteredDataGenerator0.fillClustered(intArray0, 1421, 0, 0, 0);\n",
                        "      assertEquals(2, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "34-58:fillClustered"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "29-34:test01": {
                    "start": 29,
                    "end": 34,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      ClusteredDataGenerator clusteredDataGenerator0 = new ClusteredDataGenerator();\n",
                        "      int[] intArray0 = new int[3];\n",
                        "      clusteredDataGenerator0.fillUniform(intArray0, 0, 0, 0, 2493);\n",
                        "      assertEquals(3, intArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "25-26:ClusteredDataGenerator"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "28-32:fillUniform"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "21-26:test00": {
                    "start": 21,
                    "end": 26,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      Random.setNextRandom(275);\n",
                        "      String[] stringArray0 = new String[9];\n",
                        "      // Undeclared exception!\n",
                        "      ClusteredDataGenerator.main(stringArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/Random",
                            "setNextRandom"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.synth.ClusteredDataGenerator",
                            "ClusteredDataGenerator",
                            "81-86:main"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}