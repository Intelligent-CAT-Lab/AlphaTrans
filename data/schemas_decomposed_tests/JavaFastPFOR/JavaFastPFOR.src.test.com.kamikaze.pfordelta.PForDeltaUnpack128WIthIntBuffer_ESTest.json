{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/com/kamikaze/pfordelta/PForDeltaUnpack128WIthIntBuffer_ESTest.java",
    "imports": {
        "13-13:import IntBuffer": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.nio.IntBuffer;\n"
            ]
        },
        "15-15:import EvoRunnerParameters": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "16-16:import RunWith": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "14-14:import EvoRunner": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import PForDeltaUnpack128WIthIntBuffer": {
            "start": 11,
            "end": 11,
            "body": [
                "import com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer;\n"
            ]
        },
        "12-12:import BufferUnderflowException": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.nio.BufferUnderflowException;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "PForDeltaUnpack128WIthIntBuffer_ESTest": {
            "start": 19,
            "end": 19,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "PForDeltaUnpack128WIthIntBuffer_ESTest_scaffolding"
            ],
            "methods": {
                "520-526:test43": {
                    "start": 520,
                    "end": 526,
                    "body": [
                        "  public void test43()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[130];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 0);\n",
                        "      assertEquals(130, intBuffer0.remaining());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=0 lim=130 cap=130]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test43()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "515-517:test42": {
                    "start": 515,
                    "end": 517,
                    "body": [
                        "  public void test42()  throws Throwable  {\n",
                        "      PForDeltaUnpack128WIthIntBuffer pForDeltaUnpack128WIthIntBuffer0 = new PForDeltaUnpack128WIthIntBuffer();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test42()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer"
                        ]
                    ]
                },
                "506-512:test41": {
                    "start": 506,
                    "end": 512,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[144];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 7);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=28 lim=144 cap=144]\", intBuffer0.toString());\n",
                        "      assertEquals(116, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "497-503:test40": {
                    "start": 497,
                    "end": 503,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 1);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=4 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "      assertEquals(4, intBuffer0.position());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ]
                    ]
                },
                "488-494:test39": {
                    "start": 488,
                    "end": 494,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 2);\n",
                        "      assertEquals(8, intBuffer0.position());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=8 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "479-485:test38": {
                    "start": 479,
                    "end": 485,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[131];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 3);\n",
                        "      assertEquals(119, intBuffer0.remaining());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=12 lim=131 cap=131]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "470-476:test37": {
                    "start": 470,
                    "end": 476,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 4);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=16 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "      assertEquals(113, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "461-467:test36": {
                    "start": 461,
                    "end": 467,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 5);\n",
                        "      assertEquals(20, intBuffer0.position());\n",
                        "      assertEquals(109, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "452-458:test35": {
                    "start": 452,
                    "end": 458,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 6);\n",
                        "      assertEquals(24, intBuffer0.position());\n",
                        "      assertEquals(105, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "443-449:test34": {
                    "start": 443,
                    "end": 449,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 9);\n",
                        "      assertEquals(93, intBuffer0.remaining());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=36 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "434-440:test33": {
                    "start": 434,
                    "end": 440,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 10);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=40 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "      assertEquals(89, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "425-431:test32": {
                    "start": 425,
                    "end": 431,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 11);\n",
                        "      assertEquals(44, intBuffer0.position());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=44 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "416-422:test31": {
                    "start": 416,
                    "end": 422,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 13);\n",
                        "      assertEquals(77, intBuffer0.remaining());\n",
                        "      assertEquals(52, intBuffer0.position());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ]
                    ]
                },
                "408-413:test30": {
                    "start": 408,
                    "end": 413,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[38];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 14);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=0 lim=38 cap=38]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "400-405:test29": {
                    "start": 400,
                    "end": 405,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[20];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 15);\n",
                        "      assertEquals(0, intBuffer0.position());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ]
                    ]
                },
                "392-397:test28": {
                    "start": 392,
                    "end": 397,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[38];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 17);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=0 lim=38 cap=38]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "384-389:test27": {
                    "start": 384,
                    "end": 389,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 18);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=0 lim=4 cap=4]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "376-381:test26": {
                    "start": 376,
                    "end": 381,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[15];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 19);\n",
                        "      assertTrue(intBuffer0.hasRemaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "hasRemaining"
                        ]
                    ]
                },
                "367-373:test25": {
                    "start": 367,
                    "end": 373,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 20);\n",
                        "      assertEquals(80, intBuffer0.position());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=80 lim=129 cap=129]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "360-364:test24": {
                    "start": 360,
                    "end": 364,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, (IntBuffer) null, 21);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "352-357:test23": {
                    "start": 352,
                    "end": 357,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[20];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 22);\n",
                        "      assertEquals(0, intBuffer0.position());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ]
                    ]
                },
                "344-349:test22": {
                    "start": 344,
                    "end": 349,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 23);\n",
                        "      assertEquals(0, intBuffer0.arrayOffset());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "arrayOffset"
                        ]
                    ]
                },
                "336-341:test21": {
                    "start": 336,
                    "end": 341,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 24);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "328-333:test20": {
                    "start": 328,
                    "end": 333,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[38];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 25);\n",
                        "      assertTrue(intBuffer0.hasRemaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "hasRemaining"
                        ]
                    ]
                },
                "320-325:test19": {
                    "start": 320,
                    "end": 325,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 26);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=0 lim=10 cap=10]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "312-317:test18": {
                    "start": 312,
                    "end": 317,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[129];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 27);\n",
                        "      assertEquals(129, intBuffer0.capacity());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "capacity"
                        ]
                    ]
                },
                "303-309:test17": {
                    "start": 303,
                    "end": 309,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[157];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 28);\n",
                        "      assertEquals(45, intBuffer0.remaining());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=112 lim=157 cap=157]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "295-300:test16": {
                    "start": 295,
                    "end": 300,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[128];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 63550);\n",
                        "      assertEquals(128, intBuffer0.limit());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "limit"
                        ]
                    ]
                },
                "279-292:test15": {
                    "start": 279,
                    "end": 292,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      IntBuffer intBuffer0 = IntBuffer.allocate(2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack((int[]) null, intBuffer0, 2);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "allocate"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "261-276:test14": {
                    "start": 261,
                    "end": 276,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[20];\n",
                        "      intArray0[0] = (-307);\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 20 out of bounds for length 20\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "243-258:test13": {
                    "start": 243,
                    "end": 258,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[0] = (-3848);\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 2);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "224-240:test12": {
                    "start": 224,
                    "end": 240,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[131];\n",
                        "      int[] intArray1 = new int[5];\n",
                        "      intArray1[0] = (-21);\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 3);\n",
                        "        fail(\"Expecting exception: BufferUnderflowException\");\n",
                        "      \n",
                        "      } catch(BufferUnderflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "206-221:test11": {
                    "start": 206,
                    "end": 221,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[0] = 28;\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 4);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "187-203:test10": {
                    "start": 187,
                    "end": 203,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      int[] intArray1 = new int[8];\n",
                        "      intArray1[0] = (-2143);\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 5);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 5 out of bounds for length 5\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "168-184:test09": {
                    "start": 168,
                    "end": 184,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[144];\n",
                        "      int[] intArray1 = new int[7];\n",
                        "      intArray1[0] = 2645;\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 7);\n",
                        "        fail(\"Expecting exception: BufferUnderflowException\");\n",
                        "      \n",
                        "      } catch(BufferUnderflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "149-165:test08": {
                    "start": 149,
                    "end": 165,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[144];\n",
                        "      int[] intArray1 = new int[7];\n",
                        "      intArray1[1] = (-4477);\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 7);\n",
                        "        fail(\"Expecting exception: BufferUnderflowException\");\n",
                        "      \n",
                        "      } catch(BufferUnderflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "135-146:test07": {
                    "start": 135,
                    "end": 146,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[136];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      int[] intArray1 = new int[8];\n",
                        "      intArray1[0] = (-4500);\n",
                        "      intBuffer0.mark();\n",
                        "      intBuffer0.put(intArray1);\n",
                        "      intBuffer0.reset();\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 8);\n",
                        "      assertEquals(32, intBuffer0.position());\n",
                        "      assertEquals(104, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "mark"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "put"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "reset"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                },
                "117-132:test06": {
                    "start": 117,
                    "end": 132,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[1] = 127;\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 9);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 9 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "99-114:test05": {
                    "start": 99,
                    "end": 114,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      intArray0[0] = 1649;\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 10);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 10 out of bounds for length 10\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "81-96:test04": {
                    "start": 81,
                    "end": 96,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[10];\n",
                        "      intArray0[1] = 1923;\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 10);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 10 out of bounds for length 10\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "70-78:test03": {
                    "start": 70,
                    "end": 78,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[157];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      intBuffer0.put(7, 7);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 12);\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 12);\n",
                        "      assertEquals(96, intBuffer0.position());\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=96 lim=157 cap=157]\", intBuffer0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "put"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "position"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ]
                    ]
                },
                "52-67:test02": {
                    "start": 52,
                    "end": 67,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[96];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      intBuffer0.put(1, 1002);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 12);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 96 out of bounds for length 96\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "put"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "34-49:test01": {
                    "start": 34,
                    "end": 49,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[38];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.allocate(1806);\n",
                        "      intBuffer0.put(1, 2491);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, 13);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 38 out of bounds for length 38\n",
                        "         //\n",
                        "         verifyException(\"com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "allocate"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "put"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "22-31:test00": {
                    "start": 22,
                    "end": 31,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      int[] intArray0 = new int[128];\n",
                        "      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);\n",
                        "      int int0 = 16;\n",
                        "      intBuffer0.put((-1986));\n",
                        "      intBuffer0.clear();\n",
                        "      PForDeltaUnpack128WIthIntBuffer.unpack(intArray0, intBuffer0, int0);\n",
                        "      assertEquals(\"java.nio.HeapIntBuffer[pos=64 lim=128 cap=128]\", intBuffer0.toString());\n",
                        "      assertEquals(64, intBuffer0.remaining());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "wrap"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "put"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "clear"
                        ],
                        [
                            "JavaFastPFOR.src.main.com.kamikaze.pfordelta.PForDeltaUnpack128WIthIntBuffer",
                            "PForDeltaUnpack128WIthIntBuffer",
                            "17-73:unpack"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/IntBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "remaining"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}