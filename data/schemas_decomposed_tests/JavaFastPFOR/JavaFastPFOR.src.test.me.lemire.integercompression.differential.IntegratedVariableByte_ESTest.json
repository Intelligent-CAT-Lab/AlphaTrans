{
    "path": "java_projects/cleaned_final_projects_evosuite/JavaFastPFOR/src/test/java/me/lemire/integercompression/differential/IntegratedVariableByte_ESTest.java",
    "imports": {
        "16-16:import EvoRunnerParameters": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "17-17:import RunWith": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "15-15:import EvoRunner": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "12-12:import ByteBuffer": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.nio.ByteBuffer;\n"
            ]
        },
        "11-11:import BufferOverflowException": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.nio.BufferOverflowException;\n"
            ]
        },
        "13-13:import IntWrapper": {
            "start": 13,
            "end": 13,
            "body": [
                "import me.lemire.integercompression.IntWrapper;\n"
            ]
        },
        "14-14:import IntegratedVariableByte": {
            "start": 14,
            "end": 14,
            "body": [
                "import me.lemire.integercompression.differential.IntegratedVariableByte;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "IntegratedVariableByte_ESTest": {
            "start": 20,
            "end": 20,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "IntegratedVariableByte_ESTest_scaffolding"
            ],
            "methods": {
                "679-683:test41": {
                    "start": 679,
                    "end": 683,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      String string0 = integratedVariableByte0.toString();\n",
                        "      assertEquals(\"IntegratedVariableByte\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "179-181:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "669-676:test40": {
                    "start": 669,
                    "end": 676,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      integratedVariableByte0.compress0(intArray0, intWrapper0, 0, intArray0, intWrapper0);\n",
                        "      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);\n",
                        "      assertEquals(0, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "647-666:test39": {
                    "start": 647,
                    "end": 666,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      intArray0[1] = 3241;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper2 = new IntWrapper(24);\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 1, intArray0, intWrapper0, intWrapper2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper1, 39185, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "627-644:test38": {
                    "start": 627,
                    "end": 644,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[24];\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper1, 3, intArray0, intWrapper1, intWrapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper0, 4258, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 24 out of bounds for length 24\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "609-624:test37": {
                    "start": 609,
                    "end": 624,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress1(intArray0, intWrapper0, 3241, (byte[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "598-606:test36": {
                    "start": 598,
                    "end": 606,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[16];\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      integratedVariableByte0.compress1(intArray0, intWrapper0, (byte)0, byteArray0, intWrapper0);\n",
                        "      assertEquals(0.0, intWrapper0.doubleValue(), 0.01);\n",
                        "      assertEquals((byte)0, intWrapper0.byteValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ]
                    ]
                },
                "588-595:test35": {
                    "start": 588,
                    "end": 595,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      integratedVariableByte0.compress1((int[]) null, intWrapper0, (-510), byteArray0, intWrapper0);\n",
                        "      assertEquals((short) (-510), intWrapper0.shortValue());\n",
                        "      assertEquals(\"-510\", intWrapper0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ]
                    ]
                },
                "565-585:test34": {
                    "start": 565,
                    "end": 585,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[2];\n",
                        "      intArray0[1] = 3407;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper2 = new IntWrapper(22);\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper1, 1, intArray0, intWrapper1, intWrapper2);\n",
                        "      byte[] byteArray0 = new byte[5];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress1(intArray0, intWrapper0, 2785, byteArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 2 out of bounds for length 2\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "545-562:test33": {
                    "start": 545,
                    "end": 562,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[2] = 2964;\n",
                        "      byte[] byteArray0 = new byte[12];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress1(intArray0, intWrapper0, 2964, byteArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "535-542:test32": {
                    "start": 535,
                    "end": 542,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      integratedVariableByte0.uncompress0(intArray0, intWrapper0, 3, intArray0, intWrapper0);\n",
                        "      assertEquals(3.0, intWrapper0.doubleValue(), 0.01);\n",
                        "      assertEquals(3, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "115-141:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "515-532:test31": {
                    "start": 515,
                    "end": 532,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      integratedVariableByte0.uncompress1(byteArray0, intWrapper0, (-5025), intArray0, intWrapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessCompress(intArray0, intWrapper0, (-1), intArray0, intWrapper0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-8 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "503-512:test30": {
                    "start": 503,
                    "end": 512,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[20];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      byteArray0[0] = (byte) (-3);\n",
                        "      integratedVariableByte0.uncompress1(byteArray0, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "      assertEquals(2.0, intWrapper0.doubleValue(), 0.01);\n",
                        "      assertEquals(2, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "483-500:test29": {
                    "start": 483,
                    "end": 500,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      byteArray0[1] = (byte) (-1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, (byte)4, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 2 out of bounds for length 2\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "471-480:test28": {
                    "start": 471,
                    "end": 480,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[2] = (byte) (-45);\n",
                        "      integratedVariableByte0.uncompress1(byteArray0, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "      assertEquals((byte)4, intWrapper0.byteValue());\n",
                        "      assertEquals(4.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "byteValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ]
                    ]
                },
                "451-468:test27": {
                    "start": 451,
                    "end": 468,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[3] = (byte) (-87);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, (byte)19, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "441-448:test26": {
                    "start": 441,
                    "end": 448,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 0, intArray0, intWrapper0, intWrapper0);\n",
                        "      assertEquals((short)0, intWrapper0.shortValue());\n",
                        "      assertEquals(0, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "419-438:test25": {
                    "start": 419,
                    "end": 438,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      intArray0[1] = 3359;\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      IntWrapper intWrapper2 = new IntWrapper(83);\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper1, 1, intArray0, intWrapper1, intWrapper2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 1, intArray0, intWrapper2, intWrapper2);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "407-416:test24": {
                    "start": 407,
                    "end": 416,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[26];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(12);\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 12, intArray0, intWrapper0, intWrapper1);\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper1, 12, intArray0, intWrapper0, intWrapper0);\n",
                        "      assertEquals(7.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals(7, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "397-404:test23": {
                    "start": 397,
                    "end": 404,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      integratedVariableByte0.headlessUncompress(intArray0, intWrapper0, 1, intArray0, intWrapper0, 0, intWrapper0);\n",
                        "      assertEquals((short)1, intWrapper0.shortValue());\n",
                        "      assertEquals(1.0, intWrapper0.doubleValue(), 0.01);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "228-258:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "50-52:doubleValue"
                        ]
                    ]
                },
                "386-394:test22": {
                    "start": 386,
                    "end": 394,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      intArray0[3] = (-279);\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      integratedVariableByte0.headlessUncompress(intArray0, intWrapper0, (-279), intArray0, intWrapper0, 1, intWrapper0);\n",
                        "      assertEquals((short)4, intWrapper0.shortValue());\n",
                        "      assertEquals(4L, intWrapper0.longValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "228-258:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ]
                    ]
                },
                "368-383:test21": {
                    "start": 368,
                    "end": 383,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper0, (-721), intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-5768 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "349-365:test20": {
                    "start": 349,
                    "end": 365,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[5];\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1633);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper0, 1, intArray0, intWrapper1);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "332-346:test19": {
                    "start": 332,
                    "end": 346,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(984);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0((int[]) null, intWrapper0, 984, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "314-329:test18": {
                    "start": 314,
                    "end": 329,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[1];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper0, 1073741824, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "296-311:test17": {
                    "start": 296,
                    "end": 311,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(79);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 79, intArray0, intWrapper0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 157 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "279-293:test16": {
                    "start": 279,
                    "end": 293,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessCompress((int[]) null, intWrapper0, 14, (int[]) null, intWrapper0, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "262-276:test15": {
                    "start": 262,
                    "end": 276,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper((-1805));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessUncompress((int[]) null, intWrapper0, (-1805), (int[]) null, intWrapper0, (-1805), intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "228-258:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "246-259:test14": {
                    "start": 246,
                    "end": 259,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.makeBuffer((-1));\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // capacity < 0: (-1 < 0)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "267-269:makeBuffer"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "229-243:test13": {
                    "start": 229,
                    "end": 243,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress0(intArray0, (IntWrapper) null, 122, intArray0, (IntWrapper) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "115-141:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "211-226:test12": {
                    "start": 211,
                    "end": 226,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[10];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2);\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, 2, (int[]) null, intWrapper0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "204-208:test11": {
                    "start": 204,
                    "end": 208,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      ByteBuffer byteBuffer0 = integratedVariableByte0.makeBuffer(4025);\n",
                        "      assertEquals(4025, byteBuffer0.capacity());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "267-269:makeBuffer"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/nio/Buffer",
                            "capacity"
                        ]
                    ]
                },
                "194-201:test10": {
                    "start": 194,
                    "end": 201,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      integratedVariableByte0.compress0(intArray0, intWrapper0, (-2130836486), intArray0, intWrapper0);\n",
                        "      assertEquals((-2.13083648E9F), intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)1018, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "174-191:test09": {
                    "start": 174,
                    "end": 191,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[8];\n",
                        "      intArray0[3] = (-257);\n",
                        "      intArray0[4] = (-129);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.compress0(intArray0, intWrapper0, 31, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 8 out of bounds for length 8\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "36-76:compress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "163-171:test08": {
                    "start": 163,
                    "end": 171,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      integratedVariableByte0.compress1(intArray0, intWrapper0, 1, byteArray0, intWrapper0);\n",
                        "      assertEquals(3L, intWrapper0.longValue());\n",
                        "      assertEquals(3, intWrapper0.get());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "79-112:compress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "79-81:longValue"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "62-64:get"
                        ]
                    ]
                },
                "153-160:test07": {
                    "start": 153,
                    "end": 160,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(878);\n",
                        "      integratedVariableByte0.uncompress0(intArray0, intWrapper0, (-86), intArray0, intWrapper0);\n",
                        "      assertEquals(792.0F, intWrapper0.floatValue(), 0.01F);\n",
                        "      assertEquals((short)792, intWrapper0.shortValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "115-141:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "55-57:floatValue"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Number",
                            "shortValue"
                        ]
                    ]
                },
                "134-150:test06": {
                    "start": 134,
                    "end": 150,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[9];\n",
                        "      intArray0[7] = (-4555);\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress0(intArray0, intWrapper0, 1435, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 9 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "115-141:uncompress0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "114-131:test05": {
                    "start": 114,
                    "end": 131,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      int[] intArray0 = new int[4];\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      byteArray0[0] = (byte)4;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, (byte)4, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 2 out of bounds for length 2\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "94-111:test04": {
                    "start": 94,
                    "end": 111,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[1] = (byte)66;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, 1, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "74-91:test03": {
                    "start": 74,
                    "end": 91,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[44];\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[2] = (byte)116;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.uncompress1(byteArray0, intWrapper0, (byte)19, intArray0, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 4 out of bounds for length 4\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "144-176:uncompress1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "62-71:test02": {
                    "start": 62,
                    "end": 71,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      IntWrapper intWrapper0 = IntWrapper.IntWrapper1();\n",
                        "      int[] intArray0 = new int[16];\n",
                        "      intArray0[3] = (-257);\n",
                        "      intArray0[4] = (-129);\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      integratedVariableByte0.headlessCompress(intArray0, intWrapper0, 16, intArray0, intWrapper0, intWrapper0);\n",
                        "      assertEquals(\"22\", intWrapper0.toString());\n",
                        "      assertEquals(22, intWrapper0.intValue());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "24-26:IntWrapper1"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "184-225:headlessCompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "94-96:toString"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "74-76:intValue"
                        ]
                    ]
                },
                "43-59:test01": {
                    "start": 43,
                    "end": 59,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(0);\n",
                        "      int[] intArray0 = new int[6];\n",
                        "      intArray0[0] = 997;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessUncompress(intArray0, intWrapper0, 997, intArray0, intWrapper0, 997, intWrapper0);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 6 out of bounds for length 6\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "228-258:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "23-40:test00": {
                    "start": 23,
                    "end": 40,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      IntegratedVariableByte integratedVariableByte0 = new IntegratedVariableByte();\n",
                        "      IntWrapper intWrapper0 = new IntWrapper(2794);\n",
                        "      IntWrapper intWrapper1 = new IntWrapper(1);\n",
                        "      int[] intArray0 = new int[7];\n",
                        "      intArray0[2] = (-2525);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        integratedVariableByte0.headlessUncompress(intArray0, intWrapper1, 7, intArray0, intWrapper0, 5, intWrapper1);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 2794 out of bounds for length 7\n",
                        "         //\n",
                        "         verifyException(\"me.lemire.integercompression.differential.IntegratedVariableByte\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "IntegratedVariableByte"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.IntWrapper",
                            "IntWrapper",
                            "21-23:IntWrapper"
                        ],
                        [
                            "JavaFastPFOR.src.main.me.lemire.integercompression.differential.IntegratedVariableByte",
                            "IntegratedVariableByte",
                            "228-258:headlessUncompress"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}