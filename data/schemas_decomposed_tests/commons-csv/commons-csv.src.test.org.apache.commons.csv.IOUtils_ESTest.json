{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-csv/src/test/java/org/apache/commons/csv/IOUtils_ESTest.java",
    "imports": {
        "32-32:import IOException": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "33-33:import OutputStream": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "36-36:import Reader": {
            "start": 36,
            "end": 36,
            "body": [
                "import java.io.Reader;\n"
            ]
        },
        "39-39:import Writer": {
            "start": 39,
            "end": 39,
            "body": [
                "import java.io.Writer;\n"
            ]
        },
        "29-29:import ByteArrayOutputStream": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.ByteArrayOutputStream;\n"
            ]
        },
        "30-30:import DataOutputStream": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.DataOutputStream;\n"
            ]
        },
        "31-31:import File": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.io.File;\n"
            ]
        },
        "40-40:import CharBuffer": {
            "start": 40,
            "end": 40,
            "body": [
                "import java.nio.CharBuffer;\n"
            ]
        },
        "34-34:import PipedReader": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.io.PipedReader;\n"
            ]
        },
        "35-35:import PipedWriter": {
            "start": 35,
            "end": 35,
            "body": [
                "import java.io.PipedWriter;\n"
            ]
        },
        "37-37:import StringReader": {
            "start": 37,
            "end": 37,
            "body": [
                "import java.io.StringReader;\n"
            ]
        },
        "38-38:import StringWriter": {
            "start": 38,
            "end": 38,
            "body": [
                "import java.io.StringWriter;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "43-43:import EvoRunnerParameters": {
            "start": 43,
            "end": 43,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "49-49:import RunWith": {
            "start": 49,
            "end": 49,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "42-42:import EvoRunner": {
            "start": 42,
            "end": 42,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "41-41:import IOUtils": {
            "start": 41,
            "end": 41,
            "body": [
                "import org.apache.commons.csv.IOUtils;\n"
            ]
        },
        "44-44:import MockFile": {
            "start": 44,
            "end": 44,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFile;\n"
            ]
        },
        "45-45:import MockFileOutputStream": {
            "start": 45,
            "end": 45,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileOutputStream;\n"
            ]
        },
        "46-46:import MockPrintStream": {
            "start": 46,
            "end": 46,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintStream;\n"
            ]
        },
        "47-47:import MockPrintWriter": {
            "start": 47,
            "end": 47,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintWriter;\n"
            ]
        },
        "48-48:import MockThrowable": {
            "start": 48,
            "end": 48,
            "body": [
                "import org.evosuite.runtime.mock.java.lang.MockThrowable;\n"
            ]
        },
        "28-28:import static EvoAssertions.*": {
            "start": 28,
            "end": 28,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "27-27:import static Assert.*": {
            "start": 27,
            "end": 27,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "IOUtils_ESTest": {
            "start": 52,
            "end": 52,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "IOUtils_ESTest_scaffolding"
            ],
            "methods": {
                "282-290:test18": {
                    "start": 282,
                    "end": 290,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      MockThrowable mockThrowable0 = new MockThrowable();\n",
                        "      try { \n",
                        "        IOUtils.rethrow((Throwable) mockThrowable0);\n",
                        "        fail(\"Expecting exception: Throwable\");\n",
                        "      \n",
                        "      } catch(Throwable e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/lang/MockThrowable",
                            "MockThrowable"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "128-130:rethrow"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "273-279:test17": {
                    "start": 273,
                    "end": 279,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(writer0);\n",
                        "      long long0 = IOUtils.copyLarge0(reader0, mockPrintWriter0);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "91-93:copyLarge0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "264-270:test16": {
                    "start": 264,
                    "end": 270,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(writer0);\n",
                        "      long long0 = IOUtils.copy0(reader0, mockPrintWriter0);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "47-49:copy0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "255-261:test15": {
                    "start": 255,
                    "end": 261,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) \"\");\n",
                        "      // Undeclared exception!\n",
                        "      IOUtils.copy1(reader0, writer0, charBuffer0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "64-74:copy1"
                        ]
                    ]
                },
                "245-252:test14": {
                    "start": 245,
                    "end": 252,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);\n",
                        "      char[] charArray0 = new char[4];\n",
                        "      StringReader stringReader0 = new StringReader(\"D*<> ZJ`^fqfzve\");\n",
                        "      long long0 = IOUtils.copyLarge1(stringReader0, mockPrintWriter0, charArray0);\n",
                        "      assertEquals(15L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "230-242:test13": {
                    "start": 230,
                    "end": 242,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      try { \n",
                        "        IOUtils.copy0(pipedReader0, (Appendable) null);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "47-49:copy0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "215-227:test12": {
                    "start": 215,
                    "end": 227,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"EHX4ktF3!? o\\\"y<I36#\");\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        IOUtils.copy0(stringReader0, (Appendable) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "47-49:copy0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "197-212:test11": {
                    "start": 197,
                    "end": 212,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader(1);\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"org.apache.commons.csv.IOUtils\", true);\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);\n",
                        "      CharBuffer charBuffer0 = CharBuffer.allocate(1);\n",
                        "      try { \n",
                        "        IOUtils.copy1(pipedReader0, mockPrintStream0, charBuffer0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "allocate"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "64-74:copy1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "181-194:test10": {
                    "start": 181,
                    "end": 194,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        IOUtils.copy1(reader0, (Appendable) null, (CharBuffer) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "64-74:copy1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "165-178:test09": {
                    "start": 165,
                    "end": 178,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      StringWriter stringWriter0 = new StringWriter();\n",
                        "      try { \n",
                        "        IOUtils.copyLarge0(pipedReader0, stringWriter0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "91-93:copyLarge0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "149-162:test08": {
                    "start": 149,
                    "end": 162,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        IOUtils.copyLarge0((Reader) null, writer0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.IOUtils\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "91-93:copyLarge0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "132-146:test07": {
                    "start": 132,
                    "end": 146,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      PipedWriter pipedWriter0 = new PipedWriter();\n",
                        "      char[] charArray0 = new char[1];\n",
                        "      try { \n",
                        "        IOUtils.copyLarge1(pipedReader0, pipedWriter0, charArray0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedWriter",
                            "PipedWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "116-129:test06": {
                    "start": 116,
                    "end": 129,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        IOUtils.copyLarge1(reader0, writer0, (char[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "106-113:test05": {
                    "start": 106,
                    "end": 113,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);\n",
                        "      char[] charArray0 = new char[0];\n",
                        "      // Undeclared exception!\n",
                        "      IOUtils.copyLarge1(reader0, mockPrintWriter0, charArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ]
                    ]
                },
                "92-103:test04": {
                    "start": 92,
                    "end": 103,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      try { \n",
                        "        IOUtils.rethrow((Throwable) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.IOUtils\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "128-130:rethrow"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "82-89:test03": {
                    "start": 82,
                    "end": 89,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"EHX4ktF3!? o\\\"y<I36#\");\n",
                        "      File file0 = MockFile.createTempFile(\"EHX4ktF3!? o\\\"y<I36#\", \"EHX4ktF3!? o\\\"y<I36#\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);\n",
                        "      long long0 = IOUtils.copy0(stringReader0, mockPrintStream0);\n",
                        "      assertEquals(19L, file0.length());\n",
                        "      assertEquals(19L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "createTempFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "47-49:copy0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "length"
                        ]
                    ]
                },
                "73-79:test02": {
                    "start": 73,
                    "end": 79,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      char[] charArray0 = new char[3];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);\n",
                        "      long long0 = IOUtils.copy1(reader0, charBuffer0, charBuffer0);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "64-74:copy1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "64-70:test01": {
                    "start": 64,
                    "end": 70,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);\n",
                        "      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, true);\n",
                        "      StringReader stringReader0 = new StringReader(\"&s[(A7A\");\n",
                        "      long long0 = IOUtils.copyLarge0(stringReader0, mockPrintWriter0);\n",
                        "      assertEquals(7L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/DataOutputStream",
                            "DataOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintWriter",
                            "MockPrintWriter"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "91-93:copyLarge0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "55-61:test00": {
                    "start": 55,
                    "end": 61,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      Writer writer0 = Writer.nullWriter();\n",
                        "      char[] charArray0 = new char[9];\n",
                        "      long long0 = IOUtils.copyLarge1(reader0, writer0, charArray0);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "library",
                            "java.base/java/io/Writer",
                            "nullWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.IOUtils",
                            "IOUtils",
                            "108-117:copyLarge1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}