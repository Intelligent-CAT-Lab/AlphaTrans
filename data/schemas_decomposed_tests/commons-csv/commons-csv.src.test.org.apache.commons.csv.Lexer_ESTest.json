{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-csv/src/test/java/org/apache/commons/csv/Lexer_ESTest.java",
    "imports": {
        "29-29:import IOException": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "31-31:import Reader": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.io.Reader;\n"
            ]
        },
        "30-30:import PipedReader": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.PipedReader;\n"
            ]
        },
        "32-32:import StringReader": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.io.StringReader;\n"
            ]
        },
        "33-33:import CSVFormat": {
            "start": 33,
            "end": 33,
            "body": [
                "import org.apache.commons.csv.CSVFormat;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "38-38:import EvoRunnerParameters": {
            "start": 38,
            "end": 38,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "39-39:import RunWith": {
            "start": 39,
            "end": 39,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "37-37:import EvoRunner": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "34-34:import ExtendedBufferedReader": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.apache.commons.csv.ExtendedBufferedReader;\n"
            ]
        },
        "35-35:import Lexer": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.apache.commons.csv.Lexer;\n"
            ]
        },
        "36-36:import Token": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.apache.commons.csv.Token;\n"
            ]
        },
        "28-28:import static EvoAssertions.*": {
            "start": 28,
            "end": 28,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "27-27:import static Assert.*": {
            "start": 27,
            "end": 27,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Lexer_ESTest": {
            "start": 42,
            "end": 42,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Lexer_ESTest_scaffolding"
            ],
            "methods": {
                "577-584:test44": {
                    "start": 577,
                    "end": 584,
                    "body": [
                        "  public void test44()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      long long0 = lexer0.getCharacterPosition();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test44()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "94-96:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "567-574:test43": {
                    "start": 567,
                    "end": 574,
                    "body": [
                        "  public void test43()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      String string0 = lexer0.getFirstEol();\n",
                        "      assertNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test43()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "107-109:getFirstEol"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "557-564:test42": {
                    "start": 557,
                    "end": 564,
                    "body": [
                        "  public void test42()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      long long0 = lexer0.getCurrentLineNumber();\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test42()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "103-105:getCurrentLineNumber"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "547-554:test41": {
                    "start": 547,
                    "end": 554,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isClosed();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "111-113:isClosed"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "527-544:test40": {
                    "start": 527,
                    "end": 544,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      lexer0.nextToken(token0);\n",
                        "      try { \n",
                        "        lexer0.readEscape();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // EOF whilst processing escape sequence\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "517-524:test39": {
                    "start": 517,
                    "end": 524,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isCommentStart(65534);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "115-117:isCommentStart"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "507-514:test38": {
                    "start": 507,
                    "end": 514,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isDelimiter(9);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "127-145:isDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "497-504:test37": {
                    "start": 497,
                    "end": 504,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isEscapeDelimiter();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "175-188:isEscapeDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "485-494:test36": {
                    "start": 485,
                    "end": 494,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      lexer0.readEscape();\n",
                        "      Token token0 = new Token();\n",
                        "      Token token1 = lexer0.nextToken(token0);\n",
                        "      assertSame(token1, token0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "472-482:test35": {
                    "start": 472,
                    "end": 482,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      StringReader stringReader0 = new StringReader(\"2\\\"jd5*jbNaI)QKi\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      int int0 = lexer0.readEscape();\n",
                        "      assertEquals((-1), int0);\n",
                        "      \n",
                        "      int int1 = lexer0.readEscape();\n",
                        "      assertEquals(34, int1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "462-469:test34": {
                    "start": 462,
                    "end": 469,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isStartOfLine(10);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "205-207:isStartOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "449-459:test33": {
                    "start": 449,
                    "end": 459,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      lexer0.readEscape();\n",
                        "      lexer0.readEscape();\n",
                        "      Token token1 = lexer0.nextToken(token0);\n",
                        "      assertSame(token0, token1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "437-446:test32": {
                    "start": 437,
                    "end": 446,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"khe delimiter canno. be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      Token token1 = lexer0.nextToken(token0);\n",
                        "      Token token2 = lexer0.nextToken(token1);\n",
                        "      assertSame(token1, token2);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "425-434:test31": {
                    "start": 425,
                    "end": 434,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      Token token1 = lexer0.nextToken(token0);\n",
                        "      Token token2 = lexer0.nextToken(token1);\n",
                        "      assertSame(token2, token0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "414-422:test30": {
                    "start": 414,
                    "end": 422,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token1 = lexer0.nextToken(token0);\n",
                        "      assertSame(token1, token0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "404-411:test29": {
                    "start": 404,
                    "end": 411,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.readEndOfLine(13);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "431-447:readEndOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "390-401:test28": {
                    "start": 390,
                    "end": 401,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      int int0 = lexer0.readEscape();\n",
                        "      assertEquals((-1), int0);\n",
                        "      \n",
                        "      lexer0.readEscape();\n",
                        "      int int1 = lexer0.readEscape();\n",
                        "      assertEquals(10, int1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "380-387:test27": {
                    "start": 380,
                    "end": 387,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"bZFFw_G;\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      int int0 = lexer0.readEscape();\n",
                        "      assertEquals(8, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "367-377:test26": {
                    "start": 367,
                    "end": 377,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"org.apache.commons.csv.Lexer\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      int int0 = lexer0.readEscape();\n",
                        "      assertEquals((-1), int0);\n",
                        "      \n",
                        "      int int1 = lexer0.readEscape();\n",
                        "      assertEquals(13, int1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "354-364:test25": {
                    "start": 354,
                    "end": 364,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"t# EauyH9!1\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      int int0 = lexer0.readEscape();\n",
                        "      assertEquals(9, int0);\n",
                        "      \n",
                        "      int int1 = lexer0.readEscape();\n",
                        "      assertEquals((-1), int1);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "343-351:test24": {
                    "start": 343,
                    "end": 351,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      StringBuilder stringBuilder0 = new StringBuilder();\n",
                        "      lexer0.trimTrailingSpaces(stringBuilder0);\n",
                        "      assertEquals(\"\", stringBuilder0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "StringBuilder"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "488-496:trimTrailingSpaces"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuilder",
                            "toString"
                        ]
                    ]
                },
                "326-340:test23": {
                    "start": 326,
                    "end": 340,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = null;\n",
                        "      try {\n",
                        "        lexer0 = new Lexer((CSVFormat) null, extendedBufferedReader0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "308-323:test22": {
                    "start": 308,
                    "end": 323,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(pipedReader0);\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.ORACLE;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      try { \n",
                        "        lexer0.isEscapeDelimiter();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "175-188:isEscapeDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "291-305:test21": {
                    "start": 291,
                    "end": 305,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, (ExtendedBufferedReader) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        lexer0.isEscapeDelimiter();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "175-188:isEscapeDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "272-288:test20": {
                    "start": 272,
                    "end": 288,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_CSV;\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(pipedReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      try { \n",
                        "        lexer0.nextToken(token0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedReader\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "255-269:test19": {
                    "start": 255,
                    "end": 269,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, (ExtendedBufferedReader) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        lexer0.nextToken((Token) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "238-252:test18": {
                    "start": 238,
                    "end": 252,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, (ExtendedBufferedReader) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        lexer0.readEscape();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "219-235:test17": {
                    "start": 219,
                    "end": 235,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        lexer0.trimTrailingSpaces((StringBuilder) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.Lexer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "488-496:trimTrailingSpaces"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "208-216:test16": {
                    "start": 208,
                    "end": 216,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      lexer0.readEscape();\n",
                        "      long long0 = lexer0.getCharacterPosition();\n",
                        "      assertEquals(1L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "94-96:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "197-205:test15": {
                    "start": 197,
                    "end": 205,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"The delimiter cannot be a line break\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      lexer0.readEscape();\n",
                        "      long long0 = lexer0.getCurrentLineNumber();\n",
                        "      assertEquals(1L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "103-105:getCurrentLineNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "459-486:readEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "184-194:test14": {
                    "start": 184,
                    "end": 194,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      Token token0 = new Token();\n",
                        "      lexer0.nextToken(token0);\n",
                        "      String string0 = lexer0.getFirstEol();\n",
                        "      assertEquals(\"\\r\\n\", string0);\n",
                        "      assertNotNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Token",
                            "Token",
                            "Token"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "107-109:getFirstEol"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "223-285:nextToken"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "173-181:test13": {
                    "start": 173,
                    "end": 181,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      lexer0.close();\n",
                        "      boolean boolean0 = lexer0.isClosed();\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "111-113:isClosed"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "85-87:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "163-170:test12": {
                    "start": 163,
                    "end": 170,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isCommentStart(0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "115-117:isCommentStart"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "153-160:test11": {
                    "start": 153,
                    "end": 160,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.newFormat('y');\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isDelimiter((-992));\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1217-1239:newFormat"
                        ],
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "127-145:isDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "145-150:test10": {
                    "start": 145,
                    "end": 150,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, (ExtendedBufferedReader) null);\n",
                        "      boolean boolean0 = lexer0.isEndOfFile(0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "152-154:isEndOfFile"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "135-142:test09": {
                    "start": 135,
                    "end": 142,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\")\\r\\n\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isEndOfFile((-1));\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "152-154:isEndOfFile"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "125-132:test08": {
                    "start": 125,
                    "end": 132,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isEscape(0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "161-163:isEscape"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "117-122:test07": {
                    "start": 117,
                    "end": 122,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, (ExtendedBufferedReader) null);\n",
                        "      boolean boolean0 = lexer0.isQuoteChar((-3398));\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "194-196:isQuoteChar"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "107-114:test06": {
                    "start": 107,
                    "end": 114,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isStartOfLine(549);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "205-207:isStartOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "97-104:test05": {
                    "start": 97,
                    "end": 104,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      StringReader stringReader0 = new StringReader(\"\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.readEndOfLine(0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "431-447:readEndOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "87-94:test04": {
                    "start": 87,
                    "end": 94,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      cSVFormat_Builder0.setDelimiter1(\"?N0<'\");\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "347-356:setDelimiter1"
                        ]
                    ]
                },
                "75-84:test03": {
                    "start": 75,
                    "end": 84,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      cSVFormat_Builder0.setCommentMarker0('s');\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isCommentStart(65534);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "115-117:isCommentStart"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "308-311:setCommentMarker0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "65-72:test02": {
                    "start": 65,
                    "end": 72,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.newFormat('\\u008A');\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isEscapeDelimiter();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1217-1239:newFormat"
                        ],
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "175-188:isEscapeDelimiter"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "55-62:test01": {
                    "start": 55,
                    "end": 62,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"KQ$O+cyb{;\");\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(stringReader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.isStartOfLine((-2588));\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "205-207:isStartOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "45-52:test00": {
                    "start": 45,
                    "end": 52,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      Reader reader0 = Reader.nullReader();\n",
                        "      ExtendedBufferedReader extendedBufferedReader0 = new ExtendedBufferedReader(reader0);\n",
                        "      Lexer lexer0 = new Lexer(cSVFormat0, extendedBufferedReader0);\n",
                        "      boolean boolean0 = lexer0.readEndOfLine(13);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/Reader",
                            "nullReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.ExtendedBufferedReader",
                            "ExtendedBufferedReader",
                            "50-52:ExtendedBufferedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "67-77:Lexer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.Lexer",
                            "Lexer",
                            "431-447:readEndOfLine"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}