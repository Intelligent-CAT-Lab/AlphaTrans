{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-csv/src/test/java/org/apache/commons/csv/CSVPrinter_ESTest.java",
    "imports": {
        "31-31:import IOException": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "32-32:import InputStream": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "49-49:import Stream": {
            "start": 49,
            "end": 49,
            "body": [
                "import java.util.stream.Stream;\n"
            ]
        },
        "29-29:import ByteArrayInputStream": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.ByteArrayInputStream;\n"
            ]
        },
        "44-44:import Charset": {
            "start": 44,
            "end": 44,
            "body": [
                "import java.nio.charset.Charset;\n"
            ]
        },
        "30-30:import CharArrayWriter": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.CharArrayWriter;\n"
            ]
        },
        "33-33:import OutputStreamWriter": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.io.OutputStreamWriter;\n"
            ]
        },
        "42-42:import CharBuffer": {
            "start": 42,
            "end": 42,
            "body": [
                "import java.nio.CharBuffer;\n"
            ]
        },
        "34-34:import PipedInputStream": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.io.PipedInputStream;\n"
            ]
        },
        "35-35:import PipedOutputStream": {
            "start": 35,
            "end": 35,
            "body": [
                "import java.io.PipedOutputStream;\n"
            ]
        },
        "36-36:import PipedReader": {
            "start": 36,
            "end": 36,
            "body": [
                "import java.io.PipedReader;\n"
            ]
        },
        "37-37:import PipedWriter": {
            "start": 37,
            "end": 37,
            "body": [
                "import java.io.PipedWriter;\n"
            ]
        },
        "38-38:import SequenceInputStream": {
            "start": 38,
            "end": 38,
            "body": [
                "import java.io.SequenceInputStream;\n"
            ]
        },
        "39-39:import StringWriter": {
            "start": 39,
            "end": 39,
            "body": [
                "import java.io.StringWriter;\n"
            ]
        },
        "40-40:import UncheckedIOException": {
            "start": 40,
            "end": 40,
            "body": [
                "import java.io.UncheckedIOException;\n"
            ]
        },
        "46-46:import List": {
            "start": 46,
            "end": 46,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "41-41:import BufferOverflowException": {
            "start": 41,
            "end": 41,
            "body": [
                "import java.nio.BufferOverflowException;\n"
            ]
        },
        "43-43:import ReadOnlyBufferException": {
            "start": 43,
            "end": 43,
            "body": [
                "import java.nio.ReadOnlyBufferException;\n"
            ]
        },
        "45-45:import LinkOption": {
            "start": 45,
            "end": 45,
            "body": [
                "import java.nio.file.LinkOption;\n"
            ]
        },
        "48-48:import UnaryOperator": {
            "start": 48,
            "end": 48,
            "body": [
                "import java.util.function.UnaryOperator;\n"
            ]
        },
        "47-47:import PriorityQueue": {
            "start": 47,
            "end": 47,
            "body": [
                "import java.util.PriorityQueue;\n"
            ]
        },
        "50-50:import CSVFormat": {
            "start": 50,
            "end": 50,
            "body": [
                "import org.apache.commons.csv.CSVFormat;\n"
            ]
        },
        "52-52:import CSVPrinter": {
            "start": 52,
            "end": 52,
            "body": [
                "import org.apache.commons.csv.CSVPrinter;\n"
            ]
        },
        "51-51:import CSVParser": {
            "start": 51,
            "end": 51,
            "body": [
                "import org.apache.commons.csv.CSVParser;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "54-54:import EvoRunnerParameters": {
            "start": 54,
            "end": 54,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "58-58:import RunWith": {
            "start": 58,
            "end": 58,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "53-53:import EvoRunner": {
            "start": 53,
            "end": 53,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "55-55:import MockFile": {
            "start": 55,
            "end": 55,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFile;\n"
            ]
        },
        "56-56:import MockFileWriter": {
            "start": 56,
            "end": 56,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileWriter;\n"
            ]
        },
        "57-57:import MockPrintWriter": {
            "start": 57,
            "end": 57,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintWriter;\n"
            ]
        },
        "28-28:import static EvoAssertions.*": {
            "start": 28,
            "end": 28,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "27-27:import static Assert.*": {
            "start": 27,
            "end": 27,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "CSVPrinter_ESTest": {
            "start": 61,
            "end": 61,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "CSVPrinter_ESTest_scaffolding"
            ],
            "methods": {
                "647-653:test41": {
                    "start": 647,
                    "end": 653,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      Appendable appendable0 = cSVPrinter0.getOut();\n",
                        "      assertNotNull(appendable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "147-149:getOut"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "640-644:test40": {
                    "start": 640,
                    "end": 644,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.close();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "106-108:close"
                        ]
                    ]
                },
                "631-637:test39": {
                    "start": 631,
                    "end": 637,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringWriter stringWriter0 = new StringWriter(1820);\n",
                        "      StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(stringBuffer0);\n",
                        "      cSVPrinter0.close1(false);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "getBuffer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "121-128:close1"
                        ]
                    ]
                },
                "622-628:test38": {
                    "start": 622,
                    "end": 628,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      char[] charArray0 = new char[2];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat0);\n",
                        "      cSVPrinter0.flush();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "136-140:flush"
                        ]
                    ]
                },
                "609-619:test37": {
                    "start": 609,
                    "end": 619,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      Character character0 = Character.valueOf(')');\n",
                        "      cSVFormat_Builder0.setCommentMarker1(character0);\n",
                        "      Object[] objectArray0 = new Object[5];\n",
                        "      objectArray0[0] = (Object) cSVFormat_Builder0;\n",
                        "      CSVFormat.Builder cSVFormat_Builder1 = cSVFormat_Builder0.setHeaderComments0(objectArray0);\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder1.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      assertNotNull(cSVPrinter0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "valueOf"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "497-500:setHeaderComments0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "322-329:setCommentMarker1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "597-606:test36": {
                    "start": 597,
                    "end": 606,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      Character character0 = Character.valueOf('%');\n",
                        "      cSVFormat_Builder0.setCommentMarker1(character0);\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      Object object0 = new Object();\n",
                        "      cSVPrinter0.print(object0);\n",
                        "      cSVPrinter0.printComment(\"RFC4180\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "valueOf"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "322-329:setCommentMarker1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "158-161:print"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "588-594:test35": {
                    "start": 588,
                    "end": 594,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat.Builder cSVFormat_Builder1 = cSVFormat_Builder0.setCommentMarker0('a');\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder1.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.printComment(\"T\\n\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "308-311:setCommentMarker0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "579-585:test34": {
                    "start": 579,
                    "end": 585,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      cSVFormat_Builder0.setCommentMarker0('d');\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.printComment(\"\\r`\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "308-311:setCommentMarker0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "570-576:test33": {
                    "start": 570,
                    "end": 576,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      cSVFormat_Builder0.setCommentMarker0('Z');\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.printComment(\"\\r\\n\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "308-311:setCommentMarker0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "556-567:test32": {
                    "start": 556,
                    "end": 567,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      StringWriter stringWriter0 = new StringWriter(1820);\n",
                        "      StringBuffer stringBuffer0 = stringWriter0.getBuffer();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(stringBuffer0);\n",
                        "      PriorityQueue<InputStream> priorityQueue0 = new PriorityQueue<InputStream>();\n",
                        "      Object[] objectArray0 = new Object[8];\n",
                        "      objectArray0[4] = (Object) priorityQueue0;\n",
                        "      cSVPrinter0.printRecords1(objectArray0);\n",
                        "      assertEquals(\"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", stringBuffer0.toString());\n",
                        "      assertEquals(\"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", stringWriter0.toString());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "getBuffer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "library",
                            "java.base/java/util/PriorityQueue",
                            "PriorityQueue<InputStream>"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "365-367:printRecords1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/lang/StringBuffer",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "toString"
                        ]
                    ]
                },
                "547-553:test31": {
                    "start": 547,
                    "end": 553,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      cSVPrinter0.println();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "223-226:println"
                        ]
                    ]
                },
                "536-544:test30": {
                    "start": 536,
                    "end": 544,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      Object[] objectArray0 = new Object[7];\n",
                        "      cSVPrinter0.printRecord1(objectArray0);\n",
                        "      assertEquals(7, objectArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "527-533:test29": {
                    "start": 527,
                    "end": 533,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      cSVFormat_Builder0.setAutoFlush(true);\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.close1(false);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "294-297:setAutoFlush"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "121-128:close1"
                        ]
                    ]
                },
                "520-524:test28": {
                    "start": 520,
                    "end": 524,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.flush();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "136-140:flush"
                        ]
                    ]
                },
                "513-517:test27": {
                    "start": 513,
                    "end": 517,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.printComment(\"\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "506-510:test26": {
                    "start": 506,
                    "end": 510,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      cSVPrinter0.printComment((String) null);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ]
                    ]
                },
                "488-503:test25": {
                    "start": 488,
                    "end": 503,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      StringWriter stringWriter0 = new StringWriter();\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n",
                        "      CSVPrinter cSVPrinter0 = new CSVPrinter(stringWriter0, cSVFormat0);\n",
                        "      LinkOption[] linkOptionArray0 = new LinkOption[6];\n",
                        "      LinkOption linkOption0 = LinkOption.NOFOLLOW_LINKS;\n",
                        "      linkOptionArray0[0] = linkOption0;\n",
                        "      linkOptionArray0[1] = linkOptionArray0[0];\n",
                        "      linkOptionArray0[2] = linkOptionArray0[0];\n",
                        "      linkOptionArray0[3] = linkOptionArray0[0];\n",
                        "      linkOptionArray0[4] = linkOption0;\n",
                        "      linkOptionArray0[5] = linkOptionArray0[1];\n",
                        "      List<LinkOption> list0 = List.of(linkOptionArray0);\n",
                        "      cSVPrinter0.printRecord0(list0);\n",
                        "      assertEquals(6, list0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringWriter",
                            "StringWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "239-244:printRecord0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size"
                        ]
                    ]
                },
                "464-485:test23": {
                    "start": 464,
                    "end": 485,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      Character character0 = Character.valueOf('u');\n",
                        "      CSVFormat.Builder cSVFormat_Builder1 = cSVFormat_Builder0.setCommentMarker1(character0);\n",
                        "      Object[] objectArray0 = new Object[17];\n",
                        "      objectArray0[13] = (Object) cSVFormat0;\n",
                        "      cSVFormat_Builder0.setHeaderComments0(objectArray0);\n",
                        "      CSVFormat cSVFormat1 = cSVFormat_Builder1.build();\n",
                        "      PipedWriter pipedWriter0 = new PipedWriter();\n",
                        "      CSVPrinter cSVPrinter0 = null;\n",
                        "      try {\n",
                        "        cSVPrinter0 = new CSVPrinter(pipedWriter0, cSVFormat1);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(Throwable e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedWriter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "valueOf"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "322-329:setCommentMarker1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedWriter",
                            "PipedWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "497-500:setHeaderComments0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "448-461:test22": {
                    "start": 448,
                    "end": 461,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      CSVPrinter cSVPrinter0 = null;\n",
                        "      try {\n",
                        "        cSVPrinter0 = new CSVPrinter((Appendable) null, cSVFormat0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // appendable\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "423-445:test21": {
                    "start": 423,
                    "end": 445,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      Character character0 = Character.valueOf('a');\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat.Builder cSVFormat_Builder1 = cSVFormat_Builder0.setCommentMarker1(character0);\n",
                        "      Object[] objectArray0 = new Object[2];\n",
                        "      objectArray0[1] = (Object) cSVFormat0;\n",
                        "      CSVFormat.Builder cSVFormat_Builder2 = cSVFormat_Builder1.setHeaderComments0(objectArray0);\n",
                        "      CSVFormat cSVFormat1 = cSVFormat_Builder2.build();\n",
                        "      char[] charArray0 = new char[7];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      CSVPrinter cSVPrinter0 = null;\n",
                        "      try {\n",
                        "        cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat1);\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "valueOf"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "322-329:setCommentMarker1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "497-500:setHeaderComments0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "409-420:test20": {
                    "start": 409,
                    "end": 420,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      MockFileWriter mockFileWriter0 = new MockFileWriter(\"format\");\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(mockFileWriter0);\n",
                        "      cSVPrinter0.close1(true);\n",
                        "      try { \n",
                        "        cSVPrinter0.close();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileWriter",
                            "MockFileWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "121-128:close1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "106-108:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "390-406:test19": {
                    "start": 390,
                    "end": 406,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      outputStreamWriter0.write(1);\n",
                        "      try { \n",
                        "        cSVPrinter0.close0();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "write"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "110-112:close0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "375-387:test17": {
                    "start": 375,
                    "end": 387,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD_CSV;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      cSVPrinter0.close0();\n",
                        "      try { \n",
                        "        cSVPrinter0.flush();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "110-112:close0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "136-140:flush"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "359-372:test16": {
                    "start": 359,
                    "end": 372,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD_CSV;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      outputStreamWriter0.close();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(101);\n",
                        "      try { \n",
                        "        cSVPrinter0.print(pipedInputStream0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "close"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "158-161:print"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "339-356:test15": {
                    "start": 339,
                    "end": 356,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      Character character0 = Character.valueOf('b');\n",
                        "      cSVFormat_Builder0.setCommentMarker1(character0);\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      PipedWriter pipedWriter0 = new PipedWriter();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(pipedWriter0);\n",
                        "      try { \n",
                        "        cSVPrinter0.printComment(\",Zt[8] x5W'eE3}\");\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedWriter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Character",
                            "valueOf"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedWriter",
                            "PipedWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "322-329:setCommentMarker1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "318-336:test14": {
                    "start": 318,
                    "end": 336,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat.Builder cSVFormat_Builder1 = cSVFormat_Builder0.setCommentMarker0(']');\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder1.build();\n",
                        "      char[] charArray0 = new char[6];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(charBuffer0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printComment(\"format\");\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.Buffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "308-311:setCommentMarker0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "179-206:printComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "298-315:test13": {
                    "start": 298,
                    "end": 315,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      CSVParser cSVParser0 = cSVFormat0.parse(pipedReader0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord0(cSVParser0);\n",
                        "        fail(\"Expecting exception: UncheckedIOException\");\n",
                        "      \n",
                        "      } catch(UncheckedIOException e) {\n",
                        "         //\n",
                        "         // IOException reading next record: java.io.IOException: Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVParser$CSVRecordIterator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1798-1800:parse"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "239-244:printRecord0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "281-295:test12": {
                    "start": 281,
                    "end": 295,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord0((Iterable<?>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVPrinter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "239-244:printRecord0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "265-278:test11": {
                    "start": 265,
                    "end": 278,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(outputStreamWriter0);\n",
                        "      cSVPrinter0.close1(false);\n",
                        "      Object[] objectArray0 = new Object[7];\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord1(objectArray0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/OutputStreamWriter",
                            "OutputStreamWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "121-128:close1"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "248-262:test10": {
                    "start": 248,
                    "end": 262,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD_CSV;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord1((Object[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "229-245:test09": {
                    "start": 229,
                    "end": 245,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.ORACLE;\n",
                        "      Object[] objectArray0 = new Object[4];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.allocate(0);\n",
                        "      CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord1(objectArray0);\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.CharBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "allocate"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "257-259:printRecord1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "205-226:test08": {
                    "start": 205,
                    "end": 226,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.ORACLE;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      InputStream[] inputStreamArray0 = new InputStream[2];\n",
                        "      byte[] byteArray0 = new byte[5];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)44, 10);\n",
                        "      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);\n",
                        "      inputStreamArray0[0] = (InputStream) sequenceInputStream0;\n",
                        "      Stream<InputStream> stream0 = Stream.of(inputStreamArray0);\n",
                        "      Stream<InputStream> stream1 = stream0.sorted();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord2(stream1);\n",
                        "        fail(\"Expecting exception: ClassCastException\");\n",
                        "      \n",
                        "      } catch(ClassCastException e) {\n",
                        "         //\n",
                        "         // class java.io.SequenceInputStream cannot be cast to class java.lang.Comparable (java.io.SequenceInputStream and java.lang.Comparable are in module java.base of loader 'bootstrap')\n",
                        "         //\n",
                        "         verifyException(\"java.util.Comparators$NaturalOrderComparator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/SequenceInputStream",
                            "SequenceInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "of"
                        ],
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "sorted"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "273-283:printRecord2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "188-202:test07": {
                    "start": 188,
                    "end": 202,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecord2((Stream<?>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVPrinter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "273-283:printRecord2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "171-185:test06": {
                    "start": 171,
                    "end": 185,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecords0((Iterable<?>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVPrinter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "327-331:printRecords0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "152-168:test05": {
                    "start": 152,
                    "end": 168,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      PipedWriter pipedWriter0 = new PipedWriter();\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(pipedWriter0);\n",
                        "      Object[] objectArray0 = new Object[8];\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecords1(objectArray0);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedWriter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedWriter",
                            "PipedWriter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "365-367:printRecords1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "135-149:test04": {
                    "start": 135,
                    "end": 149,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecords1((Object[]) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "365-367:printRecords1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "115-132:test03": {
                    "start": 115,
                    "end": 132,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.EXCEL;\n",
                        "      Object[] objectArray0 = new Object[17];\n",
                        "      char[] charArray0 = new char[3];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.print0(charBuffer0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecords1(objectArray0);\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.CharBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1811-1813:print0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "365-367:printRecords1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "93-112:test02": {
                    "start": 93,
                    "end": 112,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      char[] charArray0 = new char[7];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, 0, 0);\n",
                        "      CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer1, cSVFormat0);\n",
                        "      Object[] objectArray0 = new Object[1];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.printRecords1(objectArray0);\n",
                        "        fail(\"Expecting exception: ReadOnlyBufferException\");\n",
                        "      \n",
                        "      } catch(ReadOnlyBufferException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.CharBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "365-367:printRecords1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "73-90:test01": {
                    "start": 73,
                    "end": 90,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      char[] charArray0 = new char[2];\n",
                        "      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n",
                        "      charBuffer0.put('N');\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.TDF;\n",
                        "      CSVPrinter cSVPrinter0 = new CSVPrinter(charBuffer0, cSVFormat0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVPrinter0.println();\n",
                        "        fail(\"Expecting exception: BufferOverflowException\");\n",
                        "      \n",
                        "      } catch(BufferOverflowException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.nio.CharBuffer\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "wrap"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "88-103:CSVPrinter"
                        ],
                        [
                            "library",
                            "java.base/java/nio/CharBuffer",
                            "put"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "223-226:println"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "64-70:test00": {
                    "start": 64,
                    "end": 70,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.ORACLE;\n",
                        "      CSVPrinter cSVPrinter0 = cSVFormat0.printer();\n",
                        "      InputStream[] inputStreamArray0 = new InputStream[2];\n",
                        "      Stream<InputStream> stream0 = Stream.of(inputStreamArray0);\n",
                        "      cSVPrinter0.printRecord2(stream0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1928-1930:printer"
                        ],
                        [
                            "library",
                            "java.base/java/util/stream/Stream",
                            "of"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVPrinter",
                            "CSVPrinter",
                            "273-283:printRecord2"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}