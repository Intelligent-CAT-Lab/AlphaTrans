{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-csv/src/test/java/org/apache/commons/csv/CSVRecord_ESTest.java",
    "imports": {
        "31-31:import Charset": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.nio.charset.Charset;\n"
            ]
        },
        "32-32:import Path": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.nio.file.Path;\n"
            ]
        },
        "29-29:import PipedReader": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.PipedReader;\n"
            ]
        },
        "30-30:import StringReader": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.StringReader;\n"
            ]
        },
        "34-34:import List": {
            "start": 34,
            "end": 34,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "33-33:import HashMap": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.util.HashMap;\n"
            ]
        },
        "35-35:import CSVFormat": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.apache.commons.csv.CSVFormat;\n"
            ]
        },
        "36-36:import CSVParser": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.apache.commons.csv.CSVParser;\n"
            ]
        },
        "26-26:import Test": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "37-37:import CSVRecord": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.apache.commons.csv.CSVRecord;\n"
            ]
        },
        "39-39:import EvoRunnerParameters": {
            "start": 39,
            "end": 39,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "40-40:import RunWith": {
            "start": 40,
            "end": 40,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "38-38:import EvoRunner": {
            "start": 38,
            "end": 38,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "28-28:import static EvoAssertions.*": {
            "start": 28,
            "end": 28,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "27-27:import static Assert.*": {
            "start": 27,
            "end": 27,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "CSVRecord_ESTest": {
            "start": 43,
            "end": 43,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "CSVRecord_ESTest_scaffolding"
            ],
            "methods": {
                "462-470:test37": {
                    "start": 462,
                    "end": 470,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"format\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      cSVRecord0.getComment();\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "149-151:getComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "451-459:test36": {
                    "start": 451,
                    "end": 459,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"format\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      long long0 = cSVRecord0.getCharacterPosition();\n",
                        "      assertEquals(0L, long0);\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "441-448:test35": {
                    "start": 441,
                    "end": 448,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[4];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \") invalid char between encapsulated token and delimiter\", 0L, 0L);\n",
                        "      cSVRecord0.toMap();\n",
                        "      assertEquals(4, cSVRecord0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "309-311:toMap"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ]
                    ]
                },
                "431-438:test34": {
                    "start": 431,
                    "end": 438,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      String string0 = cSVRecord0.toString();\n",
                        "      assertEquals(\"CSVRecord [comment='null', recordNumber=1, values=[) invalid char between encapsulated token and delimiter]]\", string0);\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "321-329:toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "413-428:test33": {
                    "start": 413,
                    "end": 428,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVRecord0.get1(102);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 102 out of bounds for length 1\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVRecord\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "86-88:get1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "403-410:test32": {
                    "start": 403,
                    "end": 410,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[5];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"W2T^[eSjIU8K@~kn\", (-2665L), (-2665L));\n",
                        "      String[] stringArray1 = cSVRecord0.values();\n",
                        "      assertEquals(5, stringArray1.length);\n",
                        "      assertEquals((-2665L), cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals((-2665L), cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "337-339:values"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "392-400:test31": {
                    "start": 392,
                    "end": 400,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      cSVRecord0.getParser();\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "166-168:getParser"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ]
                    ]
                },
                "382-389:test30": {
                    "start": 382,
                    "end": 389,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[4];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \") invalid char between encapsulated token and delimiter\", 0L, 0L);\n",
                        "      cSVRecord0.getRecordNumber();\n",
                        "      assertEquals(4, cSVRecord0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ]
                    ]
                },
                "371-379:test29": {
                    "start": 371,
                    "end": 379,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"The comment start marker character cannot be a line break\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      int int0 = cSVRecord0.size();\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(1, int0);\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "361-368:test28": {
                    "start": 361,
                    "end": 368,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"\\\"6^\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, (String[]) null, \"\", 1083L, 1083L);\n",
                        "      cSVRecord0.getComment();\n",
                        "      assertEquals(1083L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(1083L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "149-151:getComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "342-358:test27": {
                    "start": 342,
                    "end": 358,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[4];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \") invalid char between encapsulated token and delimiter\", 0L, 0L);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        cSVRecord0.get2(\")1&DZC?O)FpC\");\n",
                        "        fail(\"Expecting exception: IllegalStateException\");\n",
                        "      \n",
                        "      } catch(IllegalStateException e) {\n",
                        "         //\n",
                        "         // No header mapping was specified, the record values can't be accessed by name\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.csv.CSVRecord\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "109-130:get2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "333-339:test26": {
                    "start": 333,
                    "end": 339,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[9];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"$VALUES\", 0L, 0L);\n",
                        "      boolean boolean0 = cSVRecord0.isSet1(\"$VALUES\");\n",
                        "      assertEquals(9, cSVRecord0.size());\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "235-237:isSet1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "319-330:test25": {
                    "start": 319,
                    "end": 330,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"cs,t/kCu\");\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVParser cSVParser0 = new CSVParser(stringReader0, cSVFormat0, 1658L, 1658L);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.hasComment();\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(1658L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(1658L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(2, cSVRecord0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "360-375:CSVParser"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "191-193:hasComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ]
                    ]
                },
                "308-316:test24": {
                    "start": 308,
                    "end": 316,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[13];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"\", (-460L), (-460L));\n",
                        "      boolean boolean0 = cSVRecord0.hasComment();\n",
                        "      assertTrue(boolean0);\n",
                        "      assertEquals((-460L), cSVRecord0.getRecordNumber());\n",
                        "      assertEquals((-460L), cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(13, cSVRecord0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "191-193:hasComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ]
                    ]
                },
                "296-305:test23": {
                    "start": 296,
                    "end": 305,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"The comment start marker character cannot be a line break\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.isConsistent();\n",
                        "      assertTrue(boolean0);\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "203-206:isConsistent"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "284-293:test22": {
                    "start": 284,
                    "end": 293,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"f-\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.isSet0((-1265));\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "225-227:isSet0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "272-281:test21": {
                    "start": 272,
                    "end": 281,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"The comment start marker character cannot be a line break\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.isSet0(2);\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(1, cSVRecord0.size());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "225-227:isSet0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "261-269:test20": {
                    "start": 261,
                    "end": 269,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.isSet0(0);\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "225-227:isSet0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "254-258:test19": {
                    "start": 254,
                    "end": 258,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, (String[]) null, \"\", 0L, 0L);\n",
                        "      List<String> list0 = cSVRecord0.toList();\n",
                        "      assertEquals(0, list0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "298-300:toList"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "size"
                        ]
                    ]
                },
                "245-251:test18": {
                    "start": 245,
                    "end": 251,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[9];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"$VALUES\", (-448L), (-448L));\n",
                        "      cSVRecord0.stream();\n",
                        "      assertEquals((-448L), cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals((-448L), cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "286-288:stream"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "236-242:test17": {
                    "start": 236,
                    "end": 242,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.POSTGRESQL_TEXT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"\\\"6^\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, (String[]) null, \"\", 0L, 0L);\n",
                        "      boolean boolean0 = cSVRecord0.isMapped(\"\");\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "214-217:isMapped"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "224-233:test16": {
                    "start": 224,
                    "end": 233,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"cs,t/kCu\");\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVParser cSVParser0 = new CSVParser(stringReader0, cSVFormat0, 1658L, 1658L);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      cSVRecord0.putIn((HashMap<String, String>) null);\n",
                        "      assertEquals(1658L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(1658L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "360-375:CSVParser"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "257-269:putIn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "209-221:test15": {
                    "start": 209,
                    "end": 221,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[2];\n",
                        "      stringArray0[0] = \"\";\n",
                        "      stringArray0[1] = \"\";\n",
                        "      Path path0 = Path.of(\"\", stringArray0);\n",
                        "      Charset charset0 = Charset.defaultCharset();\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_TSV;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse2(path0, charset0, cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \"\", (-1L), (-1L));\n",
                        "      cSVRecord0.get1(0);\n",
                        "      assertEquals((-1L), cSVRecord0.getRecordNumber());\n",
                        "      assertEquals((-1L), cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/nio/file/Path",
                            "of"
                        ],
                        [
                            "library",
                            "java.base/java/nio/charset/Charset",
                            "defaultCharset"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "256-261:parse2"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "86-88:get1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "197-206:test14": {
                    "start": 197,
                    "end": 206,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_CSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"'(j,S=d65E5LngZpK\");\n",
                        "      CSVParser cSVParser0 = cSVFormat0.parse(stringReader0);\n",
                        "      String[] stringArray0 = new String[1];\n",
                        "      stringArray0[0] = \"'(j,S=d65E5LngZpK\";\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \"'(j,S=d65E5LngZpK\", 0L, 0L);\n",
                        "      String string0 = cSVRecord0.get1(0);\n",
                        "      assertEquals(\"'(j,S=d65E5LngZpK\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1798-1800:parse"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "86-88:get1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "188-194:test13": {
                    "start": 188,
                    "end": 194,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[5];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"W2T^[eSjIU8K@~kn\", (-2665L), (-2665L));\n",
                        "      long long0 = cSVRecord0.getCharacterPosition();\n",
                        "      assertEquals((-2665L), long0);\n",
                        "      assertEquals((-2665L), cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "177-185:test12": {
                    "start": 177,
                    "end": 185,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[2];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \"Index for header '%s' is %d but CSVRecord only has %d values!\", 2027L, 2027L);\n",
                        "      long long0 = cSVRecord0.getCharacterPosition();\n",
                        "      assertEquals(2027L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(2027L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "168-174:test11": {
                    "start": 168,
                    "end": 174,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[9];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"$VALUES\", (-448L), (-448L));\n",
                        "      cSVRecord0.getComment();\n",
                        "      assertEquals((-448L), cSVRecord0.getRecordNumber());\n",
                        "      assertEquals((-448L), cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "149-151:getComment"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "157-165:test10": {
                    "start": 157,
                    "end": 165,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[5];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, (String) null, (-822L), 0L);\n",
                        "      cSVRecord0.getParser();\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals((-822L), cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "166-168:getParser"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "148-154:test09": {
                    "start": 148,
                    "end": 154,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      String[] stringArray0 = new String[4];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, \"Index for header '%s' is %d but CSVRecord only has %d values!\", 2027L, 2027L);\n",
                        "      cSVRecord0.getParser();\n",
                        "      assertEquals(2027L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(2027L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "166-168:getParser"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "136-145:test08": {
                    "start": 136,
                    "end": 145,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      StringReader stringReader0 = new StringReader(\"cs,t/kCu\");\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVParser cSVParser0 = new CSVParser(stringReader0, cSVFormat0, 1L, (-2748L));\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      long long0 = cSVRecord0.getRecordNumber();\n",
                        "      assertEquals(1L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals((-2748L), long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "360-375:CSVParser"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "126-133:test07": {
                    "start": 126,
                    "end": 133,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\") invalid char between encapsulated token and delimiter\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      long long0 = cSVRecord0.getRecordNumber();\n",
                        "      assertEquals(1L, long0);\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "115-123:test06": {
                    "start": 115,
                    "end": 123,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MYSQL;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"\", cSVFormat0);\n",
                        "      String[] stringArray0 = new String[2];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \"Index for header '%s' is %d but CSVRecord only has %d values!\", 2027L, 2027L);\n",
                        "      cSVRecord0.iterator();\n",
                        "      assertEquals(2027L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(2027L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "245-247:iterator"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "102-112:test05": {
                    "start": 102,
                    "end": 112,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.MONGODB_CSV;\n",
                        "      StringReader stringReader0 = new StringReader(\"'(j,S=d65E5LngZpK\");\n",
                        "      CSVParser cSVParser0 = cSVFormat0.parse(stringReader0);\n",
                        "      String[] stringArray0 = new String[1];\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, stringArray0, \"'(j,S=d65E5LngZpK\", 0L, 0L);\n",
                        "      HashMap<String, String> hashMap0 = new HashMap<String, String>();\n",
                        "      hashMap0.put(\"dzxj9RRU33YH](zd8k\", \"'(j,S=d65E5LngZpK\");\n",
                        "      HashMap<String, String> hashMap1 = cSVRecord0.putIn(hashMap0);\n",
                        "      assertEquals(1, hashMap1.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/StringReader",
                            "StringReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "CSVFormat",
                            "1798-1800:parse"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,String>"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "257-269:putIn"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "put"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "size"
                        ]
                    ]
                },
                "91-99:test04": {
                    "start": 91,
                    "end": 99,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"The comment start marker character cannot be a line break\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      HashMap<String, String> hashMap0 = new HashMap<String, String>();\n",
                        "      cSVRecord0.putIn(hashMap0);\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashMap",
                            "HashMap<String,String>"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "257-269:putIn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "79-88:test03": {
                    "start": 79,
                    "end": 88,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVParser cSVParser0 = new CSVParser(pipedReader0, cSVFormat0, 2, (-2998L));\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, (String[]) null, \"\", (-2998L), 2);\n",
                        "      cSVRecord0.size();\n",
                        "      assertEquals((-2998L), cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(2L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "360-375:CSVParser"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "276-278:size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                },
                "69-76:test02": {
                    "start": 69,
                    "end": 76,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.RFC4180;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"Default\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      cSVRecord0.toList();\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "298-300:toList"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "57-66:test01": {
                    "start": 57,
                    "end": 66,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      PipedReader pipedReader0 = new PipedReader();\n",
                        "      CSVFormat.Builder cSVFormat_Builder0 = CSVFormat.Builder.create0();\n",
                        "      CSVFormat cSVFormat0 = cSVFormat_Builder0.build();\n",
                        "      CSVParser cSVParser0 = new CSVParser(pipedReader0, cSVFormat0, 2, (-2998L));\n",
                        "      CSVRecord cSVRecord0 = new CSVRecord(cSVParser0, (String[]) null, \"\", (-2998L), 2);\n",
                        "      cSVRecord0.values();\n",
                        "      assertEquals(2L, cSVRecord0.getCharacterPosition());\n",
                        "      assertEquals((-2998L), cSVRecord0.getRecordNumber());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedReader",
                            "PipedReader"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "171-173:create0"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVFormat",
                            "Builder",
                            "250-254:build"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "360-375:CSVParser"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "57-68:CSVRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "337-339:values"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ]
                    ]
                },
                "46-54:test00": {
                    "start": 46,
                    "end": 54,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      CSVFormat cSVFormat0 = CSVFormat.DEFAULT;\n",
                        "      CSVParser cSVParser0 = CSVParser.parse4(\"', recordNumber=\", cSVFormat0);\n",
                        "      CSVRecord cSVRecord0 = cSVParser0.nextRecord();\n",
                        "      boolean boolean0 = cSVRecord0.isSet0(2);\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(1L, cSVRecord0.getRecordNumber());\n",
                        "      assertEquals(0L, cSVRecord0.getCharacterPosition());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "291-296:parse4"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVParser",
                            "CSVParser",
                            "700-752:nextRecord"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "225-227:isSet0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "179-181:getRecordNumber"
                        ],
                        [
                            "commons-csv.src.main.org.apache.commons.csv.CSVRecord",
                            "CSVRecord",
                            "138-140:getCharacterPosition"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}