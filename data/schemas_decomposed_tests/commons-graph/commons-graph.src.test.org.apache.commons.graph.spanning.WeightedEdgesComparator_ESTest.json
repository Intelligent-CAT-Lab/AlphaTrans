{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/spanning/WeightedEdgesComparator_ESTest.java",
    "imports": {
        "13-13:import Function": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.util.function.Function;\n"
            ]
        },
        "12-12:import Comparator": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.util.Comparator;\n"
            ]
        },
        "14-14:import ToDoubleFunction": {
            "start": 14,
            "end": 14,
            "body": [
                "import java.util.function.ToDoubleFunction;\n"
            ]
        },
        "15-15:import ToIntFunction": {
            "start": 15,
            "end": 15,
            "body": [
                "import java.util.function.ToIntFunction;\n"
            ]
        },
        "19-19:import EvoRunnerParameters": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "21-21:import RunWith": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "18-18:import EvoRunner": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "16-16:import Mapper": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "17-17:import WeightedEdgesComparator": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.spanning.WeightedEdgesComparator;\n"
            ]
        },
        "20-20:import ViolatedAssumptionAnswer": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "WeightedEdgesComparator_ESTest": {
            "start": 24,
            "end": 24,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "WeightedEdgesComparator_ESTest_scaffolding"
            ],
            "methods": {
                "73-83:test3": {
                    "start": 73,
                    "end": 83,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      ToDoubleFunction<Integer> toDoubleFunction0 = (ToDoubleFunction<Integer>) mock(ToDoubleFunction.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((-555.198663509436), (-555.198663509436)).when(toDoubleFunction0).applyAsDouble(anyInt());\n",
                        "      Comparator<Integer> comparator0 = Comparator.comparingDouble((ToDoubleFunction<? super Integer>) toDoubleFunction0);\n",
                        "      Integer integer0 = new Integer(1);\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(integer0, (Integer) null).when(mapper0).map(anyInt());\n",
                        "      WeightedEdgesComparator<Integer, Integer> weightedEdgesComparator0 = new WeightedEdgesComparator<Integer, Integer>(comparator0, mapper0);\n",
                        "      int int0 = weightedEdgesComparator0.compare(integer0, (Integer) null);\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "comparingDouble"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "WeightedEdgesComparator<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "compare"
                        ],
                        [
                            "library",
                            "java.base/java/util/function/ToDoubleFunction",
                            "applyAsDouble"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "anyInt"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "53-70:test2": {
                    "start": 53,
                    "end": 70,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      Function<Integer, Integer> function0 = Function.identity();\n",
                        "      Comparator<Integer> comparator0 = Comparator.comparing((Function<? super Integer, ? extends Integer>) function0);\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null, (Object) null).when(mapper0).map(anyInt());\n",
                        "      WeightedEdgesComparator<Integer, Integer> weightedEdgesComparator0 = new WeightedEdgesComparator<Integer, Integer>(comparator0, mapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        weightedEdgesComparator0.compare((Integer) null, (Integer) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"java.util.Comparator\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/function/Function",
                            "identity"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "comparing"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "WeightedEdgesComparator<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "anyInt"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "compare"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "40-50:test1": {
                    "start": 40,
                    "end": 50,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      ToIntFunction<Integer> toIntFunction0 = (ToIntFunction<Integer>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());\n",
                        "      Comparator<Integer> comparator0 = Comparator.comparingInt((ToIntFunction<? super Integer>) toIntFunction0);\n",
                        "      Comparator<Integer> comparator1 = Comparator.nullsLast((Comparator<? super Integer>) comparator0);\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(integer0, integer0).when(mapper0).map(anyInt());\n",
                        "      WeightedEdgesComparator<Integer, Integer> weightedEdgesComparator0 = new WeightedEdgesComparator<Integer, Integer>(comparator1, mapper0);\n",
                        "      int int0 = weightedEdgesComparator0.compare((Integer) null, integer0);\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "comparingInt"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "nullsLast"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "WeightedEdgesComparator<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "compare"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "anyInt"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "27-37:test0": {
                    "start": 27,
                    "end": 37,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      ToDoubleFunction<Integer> toDoubleFunction0 = (ToDoubleFunction<Integer>) mock(ToDoubleFunction.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(0.0, 0.0).when(toDoubleFunction0).applyAsDouble(anyInt());\n",
                        "      Comparator<Integer> comparator0 = Comparator.comparingDouble((ToDoubleFunction<? super Integer>) toDoubleFunction0);\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null, (Object) null).when(mapper0).map(anyInt());\n",
                        "      WeightedEdgesComparator<Integer, Integer> weightedEdgesComparator0 = new WeightedEdgesComparator<Integer, Integer>(comparator0, mapper0);\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      int int0 = weightedEdgesComparator0.compare(integer0, integer0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "comparingDouble"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "WeightedEdgesComparator<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/WeightedEdgesComparator",
                            "compare"
                        ],
                        [
                            "library",
                            "java.base/java/util/function/ToDoubleFunction",
                            "applyAsDouble"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "anyInt"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}