{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector_ESTest.java",
    "imports": {
        "12-12:import BigInteger": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.math.BigInteger;\n"
            ]
        },
        "13-13:import Graph": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "19-19:import UndirectedMutableGraph": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "16-16:import DirectedMutableGraph": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "26-26:import EvoRunnerParameters": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "28-28:import RunWith": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "25-25:import EvoRunner": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "14-14:import Mapper": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "15-15:import SpanningTree": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.SpanningTree;\n"
            ]
        },
        "22-22:import OrderedMonoid": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.weight.OrderedMonoid;\n"
            ]
        },
        "17-17:import InMemoryPath": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.model.InMemoryPath;\n"
            ]
        },
        "18-18:import RevertedGraph": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.model.RevertedGraph;\n"
            ]
        },
        "21-21:import SpanningTreeAlgorithmSelector": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.graph.spanning.SpanningTreeAlgorithmSelector;\n"
            ]
        },
        "20-20:import DefaultSpanningTreeSourceSelector": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector;\n"
            ]
        },
        "23-23:import FloatWeightBaseOperations": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations;\n"
            ]
        },
        "24-24:import LongWeightBaseOperations": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.weight.primitive.LongWeightBaseOperations;\n"
            ]
        },
        "27-27:import ViolatedAssumptionAnswer": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultSpanningTreeSourceSelector_ESTest": {
            "start": 31,
            "end": 31,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultSpanningTreeSourceSelector_ESTest_scaffolding"
            ],
            "methods": {
                "225-241:test11": {
                    "start": 225,
                    "end": 241,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.fromSource(longWeightBaseOperations0);\n",
                        "        fail(\"Expecting exception: IllegalStateException\");\n",
                        "      \n",
                        "      } catch(IllegalStateException e) {\n",
                        "         //\n",
                        "         // Vertex org.apache.commons.graph.weight.primitive.LongWeightBaseOperations@1 does not exist in the Graph\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromSource"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "202-222:test10": {
                    "start": 202,
                    "end": 222,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations0, floatWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      OrderedMonoid<FloatWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<FloatWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(floatWeightBaseOperations0, (Object) null, (Object) null).when(orderedMonoid0).identity();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.applyingReverseDeleteAlgorithm(orderedMonoid0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "applyingReverseDeleteAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "187-199:test09": {
                    "start": 187,
                    "end": 199,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      LongWeightBaseOperations longWeightBaseOperations1 = new LongWeightBaseOperations();\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations1, floatWeightBaseOperations0, longWeightBaseOperations1);\n",
                        "      OrderedMonoid<FloatWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<FloatWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(floatWeightBaseOperations0, floatWeightBaseOperations0, floatWeightBaseOperations0).when(orderedMonoid0).identity();\n",
                        "      SpanningTree<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> spanningTree0 = defaultSpanningTreeSourceSelector0.applyingReverseDeleteAlgorithm(orderedMonoid0);\n",
                        "      assertNotNull(spanningTree0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "applyingReverseDeleteAlgorithm"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "170-184:test08": {
                    "start": 170,
                    "end": 184,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      LongWeightBaseOperations longWeightBaseOperations1 = new LongWeightBaseOperations();\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations1, floatWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(mapper0).map(any(org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations.class));\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      OrderedMonoid<FloatWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<FloatWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(orderedMonoid0).append(any(org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations.class) , any(org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations.class));\n",
                        "      doReturn((Object) null, (Object) null).when(orderedMonoid0).identity();\n",
                        "      SpanningTree<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> spanningTree0 = defaultSpanningTreeSourceSelector0.applyingReverseDeleteAlgorithm(orderedMonoid0);\n",
                        "      assertNotNull(spanningTree0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "applyingReverseDeleteAlgorithm"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "any"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "append"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "151-167:test07": {
                    "start": 151,
                    "end": 167,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>> directedMutableGraph0 = new DirectedMutableGraph<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>>();\n",
                        "      RevertedGraph<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>> revertedGraph0 = new RevertedGraph<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>>(directedMutableGraph0);\n",
                        "      Mapper<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>> mapper0 = (Mapper<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultSpanningTreeSourceSelector<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>, Comparable<LongWeightBaseOperations>>(revertedGraph0, mapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.fromArbitrarySource();\n",
                        "        fail(\"Expecting exception: IllegalStateException\");\n",
                        "      \n",
                        "      } catch(IllegalStateException e) {\n",
                        "         //\n",
                        "         // Spanning tree cannot be calculated on an empty graph\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Comparable<LongWeightBaseOperations>,Comparable<LongWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Comparable<LongWeightBaseOperations>,Comparable<LongWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<Comparable<LongWeightBaseOperations>,Comparable<LongWeightBaseOperations>,Comparable<LongWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromArbitrarySource"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "141-148:test06": {
                    "start": 141,
                    "end": 148,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<FloatWeightBaseOperations, FloatWeightBaseOperations> undirectedMutableGraph0 = new UndirectedMutableGraph<FloatWeightBaseOperations, FloatWeightBaseOperations>();\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      undirectedMutableGraph0.addVertex(floatWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(undirectedMutableGraph0, (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) null);\n",
                        "      SpanningTreeAlgorithmSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> spanningTreeAlgorithmSelector0 = defaultSpanningTreeSourceSelector0.fromArbitrarySource();\n",
                        "      assertNotNull(spanningTreeAlgorithmSelector0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<FloatWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromArbitrarySource"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "120-138:test05": {
                    "start": 120,
                    "end": 138,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations0, floatWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) null);\n",
                        "      OrderedMonoid<FloatWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<FloatWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.applyingReverseDeleteAlgorithm(orderedMonoid0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Function to calculate edges weight can not be null.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "applyingReverseDeleteAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "96-117:test04": {
                    "start": 96,
                    "end": 117,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      LongWeightBaseOperations longWeightBaseOperations1 = new LongWeightBaseOperations();\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations0, floatWeightBaseOperations0, longWeightBaseOperations1);\n",
                        "      OrderedMonoid<FloatWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<FloatWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(floatWeightBaseOperations0).when(orderedMonoid0).identity();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.applyingReverseDeleteAlgorithm(orderedMonoid0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.spanning.ReverseDeleteGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "applyingReverseDeleteAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "80-93:test03": {
                    "start": 80,
                    "end": 93,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      DefaultSpanningTreeSourceSelector<Long, Long, Long> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<Long, Long, Long>((Graph<Long, Long>) null, (Mapper<Long, Long>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.fromArbitrarySource();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<Long,Long,Long>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromArbitrarySource"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "63-77:test02": {
                    "start": 63,
                    "end": 77,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      DirectedMutableGraph<BigInteger, OrderedMonoid<BigInteger>> directedMutableGraph0 = new DirectedMutableGraph<BigInteger, OrderedMonoid<BigInteger>>();\n",
                        "      DefaultSpanningTreeSourceSelector<BigInteger, RevertedGraph<BigInteger, BigInteger>, OrderedMonoid<BigInteger>> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<BigInteger, RevertedGraph<BigInteger, BigInteger>, OrderedMonoid<BigInteger>>(directedMutableGraph0, (Mapper<OrderedMonoid<BigInteger>, RevertedGraph<BigInteger, BigInteger>>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.fromSource((BigInteger) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Spanning tree cannot be calculated without expressing the source vertex\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<BigInteger,OrderedMonoid<BigInteger>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<BigInteger,RevertedGraph<BigInteger,BigInteger>,OrderedMonoid<BigInteger>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromSource"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "46-60:test01": {
                    "start": 46,
                    "end": 60,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      DefaultSpanningTreeSourceSelector<Long, Long, Long> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<Long, Long, Long>((Graph<Long, Long>) null, (Mapper<Long, Long>) null);\n",
                        "      Long long0 = new Long(1140L);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultSpanningTreeSourceSelector0.fromSource(long0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.spanning.DefaultSpanningTreeSourceSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<Long,Long,Long>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Long",
                            "Long"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromSource"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "34-43:test00": {
                    "start": 34,
                    "end": 43,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<LongWeightBaseOperations, FloatWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultSpanningTreeSourceSelector0 = new DefaultSpanningTreeSourceSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      inMemoryPath0.addConnectionInHead(longWeightBaseOperations0, floatWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      SpanningTreeAlgorithmSelector<LongWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> spanningTreeAlgorithmSelector0 = defaultSpanningTreeSourceSelector0.fromSource(longWeightBaseOperations0);\n",
                        "      assertNotNull(spanningTreeAlgorithmSelector0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<LongWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "DefaultSpanningTreeSourceSelector<LongWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/spanning/DefaultSpanningTreeSourceSelector",
                            "fromSource"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInHead"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}