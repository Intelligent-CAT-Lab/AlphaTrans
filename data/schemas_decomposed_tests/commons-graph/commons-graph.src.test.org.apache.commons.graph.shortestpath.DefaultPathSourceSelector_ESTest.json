{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/shortestpath/DefaultPathSourceSelector_ESTest.java",
    "imports": {
        "12-12:import Graph": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "18-18:import UndirectedMutableGraph": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "15-15:import DirectedMutableGraph": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "28-28:import EvoRunnerParameters": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "30-30:import RunWith": {
            "start": 30,
            "end": 30,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "27-27:import EvoRunner": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "14-14:import VertexPair": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        },
        "13-13:import Mapper": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "23-23:import OrderedMonoid": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.graph.weight.OrderedMonoid;\n"
            ]
        },
        "22-22:import Monoid": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.weight.Monoid;\n"
            ]
        },
        "16-16:import InMemoryPath": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.model.InMemoryPath;\n"
            ]
        },
        "17-17:import MutableSpanningTree": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "19-19:import AllVertexPairsShortestPath": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.shortestpath.AllVertexPairsShortestPath;\n"
            ]
        },
        "20-20:import DefaultPathSourceSelector": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.graph.shortestpath.DefaultPathSourceSelector;\n"
            ]
        },
        "21-21:import TargetSourceSelector": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.graph.shortestpath.TargetSourceSelector;\n"
            ]
        },
        "24-24:import FloatWeightBaseOperations": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations;\n"
            ]
        },
        "25-25:import IntegerWeightBaseOperations": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations;\n"
            ]
        },
        "26-26:import LongWeightBaseOperations": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.graph.weight.primitive.LongWeightBaseOperations;\n"
            ]
        },
        "29-29:import ViolatedAssumptionAnswer": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultPathSourceSelector_ESTest": {
            "start": 33,
            "end": 33,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultPathSourceSelector_ESTest_scaffolding"
            ],
            "methods": {
                "137-144:test5": {
                    "start": 137,
                    "end": 144,
                    "body": [
                        "  public void test5()  throws Throwable  {\n",
                        "      FloatWeightBaseOperations floatWeightBaseOperations0 = new FloatWeightBaseOperations();\n",
                        "      InMemoryPath<FloatWeightBaseOperations, FloatWeightBaseOperations> inMemoryPath0 = new InMemoryPath<FloatWeightBaseOperations, FloatWeightBaseOperations>(floatWeightBaseOperations0, floatWeightBaseOperations0);\n",
                        "      Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations> mapper0 = (Mapper<FloatWeightBaseOperations, FloatWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultPathSourceSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> defaultPathSourceSelector0 = new DefaultPathSourceSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations>(inMemoryPath0, mapper0);\n",
                        "      TargetSourceSelector<FloatWeightBaseOperations, FloatWeightBaseOperations, FloatWeightBaseOperations> targetSourceSelector0 = defaultPathSourceSelector0.from(floatWeightBaseOperations0);\n",
                        "      assertNotNull(targetSourceSelector0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test5()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.FloatWeightBaseOperations",
                            "FloatWeightBaseOperations",
                            "FloatWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<FloatWeightBaseOperations,FloatWeightBaseOperations,FloatWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "from"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "110-134:test4": {
                    "start": 110,
                    "end": 134,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      OrderedMonoid<LongWeightBaseOperations> orderedMonoid0 = (OrderedMonoid<LongWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      InMemoryPath<OrderedMonoid<LongWeightBaseOperations>, LongWeightBaseOperations> inMemoryPath0 = new InMemoryPath<OrderedMonoid<LongWeightBaseOperations>, LongWeightBaseOperations>(orderedMonoid0, orderedMonoid0);\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      OrderedMonoid<LongWeightBaseOperations> orderedMonoid1 = (OrderedMonoid<LongWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      inMemoryPath0.addConnectionInTail(orderedMonoid1, longWeightBaseOperations0, orderedMonoid1);\n",
                        "      OrderedMonoid<LongWeightBaseOperations> orderedMonoid2 = (OrderedMonoid<LongWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      Mapper<LongWeightBaseOperations, OrderedMonoid<LongWeightBaseOperations>> mapper0 = (Mapper<LongWeightBaseOperations, OrderedMonoid<LongWeightBaseOperations>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(mapper0).map(any(org.apache.commons.graph.weight.primitive.LongWeightBaseOperations.class));\n",
                        "      DefaultPathSourceSelector<OrderedMonoid<LongWeightBaseOperations>, LongWeightBaseOperations, OrderedMonoid<LongWeightBaseOperations>> defaultPathSourceSelector0 = new DefaultPathSourceSelector<OrderedMonoid<LongWeightBaseOperations>, LongWeightBaseOperations, OrderedMonoid<LongWeightBaseOperations>>(inMemoryPath0, mapper0);\n",
                        "      OrderedMonoid<LongWeightBaseOperations> orderedMonoid3 = (OrderedMonoid<LongWeightBaseOperations>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      inMemoryPath0.addConnectionInTail(orderedMonoid3, longWeightBaseOperations0, orderedMonoid3);\n",
                        "      OrderedMonoid<OrderedMonoid<LongWeightBaseOperations>> orderedMonoid4 = (OrderedMonoid<OrderedMonoid<LongWeightBaseOperations>>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultPathSourceSelector0.applyingFloydWarshall(orderedMonoid4);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Impossible to add a shortest distance with a null distance\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<OrderedMonoid<LongWeightBaseOperations>,LongWeightBaseOperations>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<OrderedMonoid<LongWeightBaseOperations>,LongWeightBaseOperations,OrderedMonoid<LongWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "addConnectionInTail"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/Mapper",
                            "map"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "any"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "applyingFloydWarshall"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "95-107:test3": {
                    "start": 95,
                    "end": 107,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      DirectedMutableGraph<DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>> directedMutableGraph0 = new DirectedMutableGraph<DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>>();\n",
                        "      UndirectedMutableGraph<IntegerWeightBaseOperations, IntegerWeightBaseOperations> undirectedMutableGraph0 = new UndirectedMutableGraph<IntegerWeightBaseOperations, IntegerWeightBaseOperations>();\n",
                        "      Mapper<IntegerWeightBaseOperations, IntegerWeightBaseOperations> mapper0 = (Mapper<IntegerWeightBaseOperations, IntegerWeightBaseOperations>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations> defaultPathSourceSelector0 = new DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations>(undirectedMutableGraph0, mapper0);\n",
                        "      directedMutableGraph0.addVertex(defaultPathSourceSelector0);\n",
                        "      DefaultPathSourceSelector<DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>> defaultPathSourceSelector1 = new DefaultPathSourceSelector<DefaultPathSourceSelector<IntegerWeightBaseOperations, IntegerWeightBaseOperations, IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>>(directedMutableGraph0, (Mapper<OrderedMonoid<IntegerWeightBaseOperations>, OrderedMonoid<IntegerWeightBaseOperations>>) null);\n",
                        "      OrderedMonoid<OrderedMonoid<IntegerWeightBaseOperations>> orderedMonoid0 = (OrderedMonoid<OrderedMonoid<IntegerWeightBaseOperations>>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(0).when(orderedMonoid0).compare(any(org.apache.commons.graph.weight.OrderedMonoid.class) , any(org.apache.commons.graph.weight.OrderedMonoid.class));\n",
                        "      doReturn((Object) null).when(orderedMonoid0).append(any(org.apache.commons.graph.weight.OrderedMonoid.class) , any(org.apache.commons.graph.weight.OrderedMonoid.class));\n",
                        "      doReturn((Object) null, (Object) null, (Object) null).when(orderedMonoid0).identity();\n",
                        "      defaultPathSourceSelector1.applyingFloydWarshall(orderedMonoid0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<DefaultPathSourceSelector<IntegerWeightBaseOperations,IntegerWeightBaseOperations,IntegerWeightBaseOperations>,OrderedMonoid<IntegerWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<IntegerWeightBaseOperations,IntegerWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<IntegerWeightBaseOperations,IntegerWeightBaseOperations,IntegerWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<DefaultPathSourceSelector<IntegerWeightBaseOperations,IntegerWeightBaseOperations,IntegerWeightBaseOperations>,OrderedMonoid<IntegerWeightBaseOperations>,OrderedMonoid<IntegerWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "compare"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "any"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "append"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "applyingFloydWarshall"
                        ]
                    ]
                },
                "77-92:test2": {
                    "start": 77,
                    "end": 92,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      Mapper<FloatWeightBaseOperations, VertexPair<FloatWeightBaseOperations>> mapper0 = (Mapper<FloatWeightBaseOperations, VertexPair<FloatWeightBaseOperations>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultPathSourceSelector<UndirectedMutableGraph<FloatWeightBaseOperations, FloatWeightBaseOperations>, FloatWeightBaseOperations, VertexPair<FloatWeightBaseOperations>> defaultPathSourceSelector0 = new DefaultPathSourceSelector<UndirectedMutableGraph<FloatWeightBaseOperations, FloatWeightBaseOperations>, FloatWeightBaseOperations, VertexPair<FloatWeightBaseOperations>>((Graph<UndirectedMutableGraph<FloatWeightBaseOperations, FloatWeightBaseOperations>, FloatWeightBaseOperations>) null, mapper0);\n",
                        "      OrderedMonoid<VertexPair<FloatWeightBaseOperations>> orderedMonoid0 = (OrderedMonoid<VertexPair<FloatWeightBaseOperations>>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultPathSourceSelector0.applyingFloydWarshall(orderedMonoid0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.shortestpath.DefaultPathSourceSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<UndirectedMutableGraph<FloatWeightBaseOperations,FloatWeightBaseOperations>,FloatWeightBaseOperations,VertexPair<FloatWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "applyingFloydWarshall"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "60-74:test1": {
                    "start": 60,
                    "end": 74,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      Mapper<UndirectedMutableGraph<Object, Object>, OrderedMonoid<Object>> mapper0 = (Mapper<UndirectedMutableGraph<Object, Object>, OrderedMonoid<Object>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultPathSourceSelector<Object, UndirectedMutableGraph<Object, Object>, OrderedMonoid<Object>> defaultPathSourceSelector0 = new DefaultPathSourceSelector<Object, UndirectedMutableGraph<Object, Object>, OrderedMonoid<Object>>((Graph<Object, UndirectedMutableGraph<Object, Object>>) null, mapper0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultPathSourceSelector0.from((Object) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Shortest path can not be calculated from a null source\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<Object,UndirectedMutableGraph<Object,Object>,OrderedMonoid<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "from"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "36-57:test0": {
                    "start": 36,
                    "end": 57,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations> undirectedMutableGraph0 = new UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>();\n",
                        "      DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations> defaultPathSourceSelector0 = new DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>(undirectedMutableGraph0, (Mapper<LongWeightBaseOperations, LongWeightBaseOperations>) null);\n",
                        "      Monoid<DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>> monoid0 = (Monoid<DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>>) mock(Monoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(defaultPathSourceSelector0).when(monoid0).identity();\n",
                        "      MutableSpanningTree<VertexPair<LongWeightBaseOperations>, LongWeightBaseOperations, DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>> mutableSpanningTree0 = new MutableSpanningTree<VertexPair<LongWeightBaseOperations>, LongWeightBaseOperations, DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>>(monoid0, (Mapper<LongWeightBaseOperations, DefaultPathSourceSelector<LongWeightBaseOperations, LongWeightBaseOperations, LongWeightBaseOperations>>) null);\n",
                        "      Mapper<LongWeightBaseOperations, UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>> mapper0 = (Mapper<LongWeightBaseOperations, UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      DefaultPathSourceSelector<VertexPair<LongWeightBaseOperations>, LongWeightBaseOperations, UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>> defaultPathSourceSelector1 = new DefaultPathSourceSelector<VertexPair<LongWeightBaseOperations>, LongWeightBaseOperations, UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>>(mutableSpanningTree0, mapper0);\n",
                        "      LongWeightBaseOperations longWeightBaseOperations0 = new LongWeightBaseOperations();\n",
                        "      VertexPair<LongWeightBaseOperations> vertexPair0 = new VertexPair<LongWeightBaseOperations>(longWeightBaseOperations0, longWeightBaseOperations0);\n",
                        "      mutableSpanningTree0.addVertex(vertexPair0);\n",
                        "      Monoid<Object> monoid1 = (Monoid<Object>) mock(Monoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(monoid1).identity();\n",
                        "      Mapper<LongWeightBaseOperations, Object> mapper1 = (Mapper<LongWeightBaseOperations, Object>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<LongWeightBaseOperations, LongWeightBaseOperations, Object> mutableSpanningTree1 = new MutableSpanningTree<LongWeightBaseOperations, LongWeightBaseOperations, Object>(monoid1, mapper1);\n",
                        "      OrderedMonoid<UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>> orderedMonoid0 = (OrderedMonoid<UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>>) mock(OrderedMonoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(0).when(orderedMonoid0).compare(any(org.apache.commons.graph.model.UndirectedMutableGraph.class) , any(org.apache.commons.graph.model.UndirectedMutableGraph.class));\n",
                        "      doReturn((Object) null).when(orderedMonoid0).append(any(org.apache.commons.graph.model.UndirectedMutableGraph.class) , any(org.apache.commons.graph.model.UndirectedMutableGraph.class));\n",
                        "      doReturn((Object) null, (Object) null, (Object) null).when(orderedMonoid0).identity();\n",
                        "      AllVertexPairsShortestPath<VertexPair<LongWeightBaseOperations>, LongWeightBaseOperations, UndirectedMutableGraph<LongWeightBaseOperations, LongWeightBaseOperations>> allVertexPairsShortestPath0 = defaultPathSourceSelector1.applyingFloydWarshall(orderedMonoid0);\n",
                        "      assertNotNull(allVertexPairsShortestPath0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<LongWeightBaseOperations,LongWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<LongWeightBaseOperations,LongWeightBaseOperations,LongWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<VertexPair<LongWeightBaseOperations>,LongWeightBaseOperations,DefaultPathSourceSelector<LongWeightBaseOperations,LongWeightBaseOperations,LongWeightBaseOperations>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "DefaultPathSourceSelector<VertexPair<LongWeightBaseOperations>,LongWeightBaseOperations,UndirectedMutableGraph<LongWeightBaseOperations,LongWeightBaseOperations>>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.LongWeightBaseOperations",
                            "LongWeightBaseOperations",
                            "LongWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<LongWeightBaseOperations>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<LongWeightBaseOperations,LongWeightBaseOperations,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/shortestpath/DefaultPathSourceSelector",
                            "applyingFloydWarshall"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "compare"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "any"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "append"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}