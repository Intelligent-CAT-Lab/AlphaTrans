{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/visit/DefaultVisitSourceSelector_ESTest.java",
    "imports": {
        "12-12:import DirectedMutableGraph": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "18-18:import EvoRunnerParameters": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "19-19:import RunWith": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "17-17:import EvoRunner": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "11-11:import Mapper": {
            "start": 11,
            "end": 11,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "13-13:import MutableSpanningTree": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "15-15:import VisitAlgorithmsSelector": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.visit.VisitAlgorithmsSelector;\n"
            ]
        },
        "14-14:import DefaultVisitSourceSelector": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.visit.DefaultVisitSourceSelector;\n"
            ]
        },
        "16-16:import IntegerWeightBaseOperations": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultVisitSourceSelector_ESTest": {
            "start": 22,
            "end": 22,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultVisitSourceSelector_ESTest_scaffolding"
            ],
            "methods": {
                "53-67:test2": {
                    "start": 53,
                    "end": 67,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Object>> directedMutableGraph0 = new DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Object>>();\n",
                        "      DefaultVisitSourceSelector<Object, DirectedMutableGraph<Integer, Object>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Object>>> defaultVisitSourceSelector0 = new DefaultVisitSourceSelector<Object, DirectedMutableGraph<Integer, Object>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Object>>>(directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitSourceSelector0.from((Object) directedMutableGraph0);\n",
                        "        fail(\"Expecting exception: IllegalStateException\");\n",
                        "      \n",
                        "      } catch(IllegalStateException e) {\n",
                        "         //\n",
                        "         // Vertex {} does not exist in the Graph\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "DefaultVisitSourceSelector<Object,DirectedMutableGraph<Integer,Object>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Object>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "from"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "36-50:test1": {
                    "start": 36,
                    "end": 50,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      DefaultVisitSourceSelector<Object, Object, DirectedMutableGraph<Object, Object>> defaultVisitSourceSelector0 = new DefaultVisitSourceSelector<Object, Object, DirectedMutableGraph<Object, Object>>((DirectedMutableGraph<Object, Object>) null);\n",
                        "      Object object0 = new Object();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitSourceSelector0.from(object0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.visit.DefaultVisitSourceSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "DefaultVisitSourceSelector<Object,Object,DirectedMutableGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "from"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "25-33:test0": {
                    "start": 25,
                    "end": 33,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      IntegerWeightBaseOperations integerWeightBaseOperations0 = new IntegerWeightBaseOperations();\n",
                        "      MutableSpanningTree<Integer, Object, Integer> mutableSpanningTree0 = new MutableSpanningTree<Integer, Object, Integer>(integerWeightBaseOperations0, (Mapper<Object, Integer>) null);\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      mutableSpanningTree0.addVertex(integer0);\n",
                        "      DefaultVisitSourceSelector<Integer, Object, MutableSpanningTree<Integer, Object, Integer>> defaultVisitSourceSelector0 = new DefaultVisitSourceSelector<Integer, Object, MutableSpanningTree<Integer, Object, Integer>>(mutableSpanningTree0);\n",
                        "      VisitAlgorithmsSelector<Integer, Object, MutableSpanningTree<Integer, Object, Integer>> visitAlgorithmsSelector0 = defaultVisitSourceSelector0.from(integer0);\n",
                        "      assertNotNull(visitAlgorithmsSelector0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Object,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "DefaultVisitSourceSelector<Integer,Object,MutableSpanningTree<Integer,Object,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitSourceSelector",
                            "from"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}