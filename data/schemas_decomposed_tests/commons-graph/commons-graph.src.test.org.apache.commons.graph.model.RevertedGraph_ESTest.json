{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/model/RevertedGraph_ESTest.java",
    "imports": {
        "11-11:import DirectedGraph": {
            "start": 11,
            "end": 11,
            "body": [
                "import org.apache.commons.graph.DirectedGraph;\n"
            ]
        },
        "12-12:import DirectedMutableGraph": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "15-15:import EvoRunnerParameters": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "16-16:import RunWith": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "14-14:import EvoRunner": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "13-13:import RevertedGraph": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.model.RevertedGraph;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "RevertedGraph_ESTest": {
            "start": 19,
            "end": 19,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "RevertedGraph_ESTest_scaffolding"
            ],
            "methods": {
                "305-321:test23": {
                    "start": 305,
                    "end": 321,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph1.getDegree(revertedGraph0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.DirectedMutableGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getDegree"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "297-302:test22": {
                    "start": 297,
                    "end": 302,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      boolean boolean0 = revertedGraph0.containsEdge((Integer) null);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "containsEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "278-294:test21": {
                    "start": 278,
                    "end": 294,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>(directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph1.getOutDegree(revertedGraph0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.DirectedMutableGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getOutDegree"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "268-275:test20": {
                    "start": 268,
                    "end": 275,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>(directedMutableGraph0);\n",
                        "      Iterable<RevertedGraph<Integer, Integer>> iterable0 = revertedGraph1.getInbound(revertedGraph0);\n",
                        "      assertNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getInbound"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "260-265:test19": {
                    "start": 260,
                    "end": 265,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph0.getSize();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "252-257:test18": {
                    "start": 252,
                    "end": 257,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      Iterable<Integer> iterable0 = revertedGraph0.getEdges();\n",
                        "      assertNotNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getEdges"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "233-249:test17": {
                    "start": 233,
                    "end": 249,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph0 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph1 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph0.getConnectedVertices(revertedGraph1);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getConnectedVertices"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "225-230:test16": {
                    "start": 225,
                    "end": 230,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph0 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      Iterable<RevertedGraph<Integer, Integer>> iterable0 = revertedGraph0.getVertices0();\n",
                        "      assertNotNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getVertices0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "207-222:test15": {
                    "start": 207,
                    "end": 222,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      Integer integer0 = new Integer(2);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph0.getVertices1(integer0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.RevertedGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getVertices1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "197-204:test14": {
                    "start": 197,
                    "end": 204,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      boolean boolean0 = revertedGraph1.containsVertex(revertedGraph0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "containsVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "178-194:test13": {
                    "start": 178,
                    "end": 194,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph1.getInDegree(revertedGraph0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.DirectedMutableGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getInDegree"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "169-175:test12": {
                    "start": 169,
                    "end": 175,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      Iterable<Integer> iterable0 = revertedGraph0.getOutbound(integer0);\n",
                        "      assertNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getOutbound"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "161-166:test11": {
                    "start": 161,
                    "end": 166,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>();\n",
                        "      RevertedGraph<Integer, RevertedGraph<Integer, Integer>> revertedGraph0 = new RevertedGraph<Integer, RevertedGraph<Integer, Integer>>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph0.getOrder();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getOrder"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "146-158:test10": {
                    "start": 146,
                    "end": 158,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph0 = null;\n",
                        "      try {\n",
                        "        revertedGraph0 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>((DirectedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Adapted DirectedGraph must be not null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "135-143:test09": {
                    "start": 135,
                    "end": 143,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      boolean boolean0 = revertedGraph1.containsVertex(revertedGraph0);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "containsVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "124-132:test08": {
                    "start": 124,
                    "end": 132,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph1.getDegree(revertedGraph0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getDegree"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "112-121:test07": {
                    "start": 112,
                    "end": 121,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> directedMutableGraph1 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>();\n",
                        "      directedMutableGraph1.addVertex(revertedGraph0);\n",
                        "      directedMutableGraph1.addEdge(revertedGraph0, revertedGraph0, revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>(directedMutableGraph1);\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph2 = revertedGraph1.getEdge(revertedGraph0, revertedGraph0);\n",
                        "      assertSame(revertedGraph0, revertedGraph2);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "101-109:test06": {
                    "start": 101,
                    "end": 109,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      Integer integer0 = revertedGraph1.getEdge(revertedGraph0, revertedGraph0);\n",
                        "      assertNull(integer0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "88-98:test05": {
                    "start": 88,
                    "end": 98,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      Integer integer0 = new Integer(1);\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addEdge(revertedGraph0, integer0, revertedGraph0);\n",
                        "      int int0 = revertedGraph1.getInDegree(revertedGraph0);\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getInDegree"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "77-85:test04": {
                    "start": 77,
                    "end": 85,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph1.getInDegree(revertedGraph0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getInDegree"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "66-74:test03": {
                    "start": 66,
                    "end": 74,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph1.getOrder();\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getOrder"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "55-63:test02": {
                    "start": 55,
                    "end": 63,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.decorateAddVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>(directedMutableGraph0);\n",
                        "      int int0 = revertedGraph1.getOutDegree(revertedGraph0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getOutDegree"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "decorateAddVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "42-52:test01": {
                    "start": 42,
                    "end": 52,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, Integer>();\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      Integer integer0 = new Integer(1);\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph1);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, Integer> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, Integer>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addEdge(revertedGraph0, integer0, revertedGraph0);\n",
                        "      int int0 = revertedGraph1.getSize();\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getSize"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "22-39:test00": {
                    "start": 22,
                    "end": 39,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> directedMutableGraph1 = new DirectedMutableGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>();\n",
                        "      RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>> revertedGraph1 = new RevertedGraph<RevertedGraph<Integer, Integer>, RevertedGraph<Integer, Integer>>(directedMutableGraph1);\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph2 = new RevertedGraph<Integer, Integer>(revertedGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        revertedGraph1.getEdge(revertedGraph0, revertedGraph2);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<RevertedGraph<Integer,Integer>,RevertedGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "getEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}