{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/collections/FibonacciHeap_ESTest.java",
    "imports": {
        "18-18:import Stream": {
            "start": 18,
            "end": 18,
            "body": [
                "import java.util.stream.Stream;\n"
            ]
        },
        "13-13:import Collection": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.util.Collection;\n"
            ]
        },
        "16-16:import List": {
            "start": 16,
            "end": 16,
            "body": [
                "import java.util.List;\n"
            ]
        },
        "14-14:import Comparator": {
            "start": 14,
            "end": 14,
            "body": [
                "import java.util.Comparator;\n"
            ]
        },
        "12-12:import Array": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.lang.reflect.Array;\n"
            ]
        },
        "15-15:import LinkedList": {
            "start": 15,
            "end": 15,
            "body": [
                "import java.util.LinkedList;\n"
            ]
        },
        "17-17:import NoSuchElementException": {
            "start": 17,
            "end": 17,
            "body": [
                "import java.util.NoSuchElementException;\n"
            ]
        },
        "22-22:import EvoRunnerParameters": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "24-24:import RunWith": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "21-21:import EvoRunner": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "19-19:import FibonacciHeap": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.collections.FibonacciHeap;\n"
            ]
        },
        "20-20:import FibonacciHeapNode": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.graph.collections.FibonacciHeapNode;\n"
            ]
        },
        "23-23:import ViolatedAssumptionAnswer": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "FibonacciHeap_ESTest": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "FibonacciHeap_ESTest_scaffolding"
            ],
            "methods": {
                "591-605:test45": {
                    "start": 591,
                    "end": 605,
                    "body": [
                        "  public void test45()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      List<String> list0 = List.of(\"\", \"\", \"org.apache.commons.graph.utils.Assertions\", \"\", \"\", \"\", \"\", \"\");\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.removeAll(list0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test45()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "removeAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "580-588:test44": {
                    "start": 580,
                    "end": 588,
                    "body": [
                        "  public void test44()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.offer(\"%^<[9\u007fa`RG/[|w!Vh1M\");\n",
                        "      List<String> list0 = List.of(\"]nm[.`\u007f[1I ` 2FB+\", \"%^<[9\u007fa`RG/[|w!Vh1M\", \"%^<[9\u007fa`RG/[|w!Vh1M\", \"org.apache.commons.graph.collections.FibonacciHeapNode\", \"%^<[9\u007fa`RG/[|w!Vh1M\", \"%^<[9\u007fa`RG/[|w!Vh1M\", \"%^<[9\u007fa`RG/[|w!Vh1M\", \"org.apache.commons.graph.collections.FibonacciHeapNode\");\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.poll();\n",
                        "      fibonacciHeap0.remove();\n",
                        "      assertFalse(fibonacciHeap0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test44()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "offer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ]
                    ]
                },
                "563-577:test43": {
                    "start": 563,
                    "end": 577,
                    "body": [
                        "  public void test43()  throws Throwable  {\n",
                        "      FibonacciHeap<FibonacciHeap<Object>> fibonacciHeap0 = new FibonacciHeap<FibonacciHeap<Object>>((Comparator<? super FibonacciHeap<Object>>) null);\n",
                        "      Object[] objectArray0 = new Object[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.toArray(objectArray0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test43()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<FibonacciHeap<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toArray"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "555-560:test42": {
                    "start": 555,
                    "end": 560,
                    "body": [
                        "  public void test42()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      int int0 = fibonacciHeap0.potential();\n",
                        "      assertEquals(0, int0);\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test42()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "539-552:test41": {
                    "start": 539,
                    "end": 552,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      FibonacciHeap<String> fibonacciHeap0 = new FibonacciHeap<String>((Comparator<? super String>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.remove((Object) null);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<String>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "523-536:test40": {
                    "start": 523,
                    "end": 536,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.addAll(fibonacciHeap0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "515-520:test39": {
                    "start": 515,
                    "end": 520,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      int int0 = fibonacciHeap0.size();\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "499-512:test38": {
                    "start": 499,
                    "end": 512,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      FibonacciHeap<String> fibonacciHeap0 = new FibonacciHeap<String>((Comparator<? super String>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.toArray();\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<String>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toArray"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "483-496:test37": {
                    "start": 483,
                    "end": 496,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.remove();\n",
                        "        fail(\"Expecting exception: NoSuchElementException\");\n",
                        "      \n",
                        "      } catch(NoSuchElementException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "471-480:test36": {
                    "start": 471,
                    "end": 480,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      FibonacciHeap fibonacciHeap0 = FibonacciHeap.FibonacciHeap1();\n",
                        "      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(0).when(comparator0).compare(any() , any());\n",
                        "      FibonacciHeap<Object> fibonacciHeap1 = new FibonacciHeap<Object>(comparator0);\n",
                        "      fibonacciHeap1.offer(fibonacciHeap0);\n",
                        "      boolean boolean0 = fibonacciHeap1.add(fibonacciHeap0);\n",
                        "      assertEquals(2, fibonacciHeap1.size());\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeap",
                            "FibonacciHeap",
                            "80-82:FibonacciHeap1"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "java.base/java/util/Comparator",
                            "compare"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "any"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "offer"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "463-468:test35": {
                    "start": 463,
                    "end": 468,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.clear();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "clear"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "446-460:test34": {
                    "start": 446,
                    "end": 460,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      FibonacciHeap<FibonacciHeapNode<String>> fibonacciHeap0 = new FibonacciHeap<FibonacciHeapNode<String>>((Comparator<? super FibonacciHeapNode<String>>) null);\n",
                        "      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.retainAll(linkedList0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<FibonacciHeapNode<String>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedList",
                            "LinkedList<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "retainAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "436-443:test33": {
                    "start": 436,
                    "end": 443,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      List<String> list0 = List.of(\"\", \"FibonacciHeap=[\", \"FibonacciHeap=[\", \"\", \"\", \"\", \"U`'?k+\", \"org.apache.commons.graph.utils.Assertions\");\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.poll();\n",
                        "      fibonacciHeap0.toString();\n",
                        "      assertTrue(fibonacciHeap0.contains(\"org.apache.commons.graph.utils.Assertions\"));\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "contains"
                        ]
                    ]
                },
                "426-433:test32": {
                    "start": 426,
                    "end": 433,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      List<String> list0 = List.of(\"\", \"FibonacciHeap=[\", \"FibonacciHeap=[\", \"\", \"\", \"\", \"U`'?k+\", \"org.apache.commons.graph.utils.Assertions\");\n",
                        "      FibonacciHeap<FibonacciHeapNode<String>> fibonacciHeap0 = new FibonacciHeap<FibonacciHeapNode<String>>((Comparator<? super FibonacciHeapNode<String>>) null);\n",
                        "      boolean boolean0 = fibonacciHeap0.containsAll(list0);\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<FibonacciHeapNode<String>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "containsAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "417-423:test31": {
                    "start": 417,
                    "end": 423,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      FibonacciHeap<String> fibonacciHeap0 = new FibonacciHeap<String>((Comparator<? super String>) null);\n",
                        "      boolean boolean0 = fibonacciHeap0.contains((Object) null);\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<String>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "contains"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "407-414:test30": {
                    "start": 407,
                    "end": 414,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      List<String> list0 = List.of(\"\", \"FibonacciHeap=[\", \"FibonacciHeap=[\", \"\", \"\", \"\", \"U`'?k+\", \"org.apache.commons.graph.utils.Assertions\");\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      boolean boolean0 = fibonacciHeap0.contains(\"U`'?k+\");\n",
                        "      assertFalse(fibonacciHeap0.isEmpty());\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "contains"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "398-404:test29": {
                    "start": 398,
                    "end": 404,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      boolean boolean0 = fibonacciHeap0.containsAll((Collection<?>) null);\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "containsAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "388-395:test28": {
                    "start": 388,
                    "end": 395,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      List<String> list0 = List.of(\"U`'?k+\", \"U`'?k+\", \"U`'?k+\", \"U`'?k+\", \"U`'?k+\", \"U`'?k+\", \"U`'?k+\", \"U`'?k+\");\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      boolean boolean0 = fibonacciHeap0.containsAll(list0);\n",
                        "      assertFalse(fibonacciHeap0.isEmpty());\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "containsAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "379-385:test27": {
                    "start": 379,
                    "end": 385,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      List<String> list0 = List.of(\"\", \"\", \", \", \"UX'V`.x|\", \"UX'V`.x|\", \"\", \"\", \"-?\");\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.element();\n",
                        "      assertEquals(8, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "element"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "363-376:test26": {
                    "start": 363,
                    "end": 376,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.element();\n",
                        "        fail(\"Expecting exception: NoSuchElementException\");\n",
                        "      \n",
                        "      } catch(NoSuchElementException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "element"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "355-360:test25": {
                    "start": 355,
                    "end": 360,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.peek();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "peek"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "347-352:test24": {
                    "start": 347,
                    "end": 352,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      FibonacciHeap<String> fibonacciHeap0 = new FibonacciHeap<String>((Comparator<? super String>) null);\n",
                        "      fibonacciHeap0.poll();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<String>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "339-344:test23": {
                    "start": 339,
                    "end": 344,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      fibonacciHeap0.remove0();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "330-336:test22": {
                    "start": 330,
                    "end": 336,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      List<String> list0 = List.of(\"\", \"FibonacciHeap=[\", \"FibonacciHeap=[\", \"\", \"\", \"\", \"U`'?k+\", \"org.apache.commons.graph.utils.Assertions\");\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.toString();\n",
                        "      assertEquals(8, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "321-327:test21": {
                    "start": 321,
                    "end": 327,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      String string0 = fibonacciHeap0.toString();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertEquals(\"FibonacciHeap=[]\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "304-318:test20": {
                    "start": 304,
                    "end": 318,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      FibonacciHeapNode<Object>[] fibonacciHeapNodeArray0 = (FibonacciHeapNode<Object>[]) Array.newInstance(FibonacciHeapNode.class, 0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.toArray1(fibonacciHeapNodeArray0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/reflect/Array",
                            "newInstance"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toArray1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "288-301:test19": {
                    "start": 288,
                    "end": 301,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      FibonacciHeap<FibonacciHeap<String>> fibonacciHeap0 = new FibonacciHeap<FibonacciHeap<String>>((Comparator<? super FibonacciHeap<String>>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.iterator();\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<FibonacciHeap<String>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "iterator"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "272-285:test18": {
                    "start": 272,
                    "end": 285,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.toArray0();\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "toArray0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "256-269:test17": {
                    "start": 256,
                    "end": 269,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.remove1((Object) null);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "247-253:test16": {
                    "start": 247,
                    "end": 253,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      boolean boolean0 = fibonacciHeap0.contains(fibonacciHeap0);\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "      assertFalse(boolean0);\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "contains"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ]
                    ]
                },
                "238-244:test15": {
                    "start": 238,
                    "end": 244,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n",
                        "      FibonacciHeap<Integer> fibonacciHeap0 = new FibonacciHeap<Integer>(comparator0);\n",
                        "      fibonacciHeap0.isEmpty();\n",
                        "      assertEquals(0, fibonacciHeap0.potential());\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "227-235:test14": {
                    "start": 227,
                    "end": 235,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      FibonacciHeap<Integer> fibonacciHeap0 = new FibonacciHeap<Integer>((Comparator<? super Integer>) null);\n",
                        "      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      linkedList0.add(integer0);\n",
                        "      fibonacciHeap0.addAll(linkedList0);\n",
                        "      fibonacciHeap0.isEmpty();\n",
                        "      assertEquals(1, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedList",
                            "LinkedList<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedList",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "219-224:test13": {
                    "start": 219,
                    "end": 224,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      fibonacciHeap0.peek();\n",
                        "      assertEquals(1, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "peek"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "209-216:test12": {
                    "start": 209,
                    "end": 216,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      List<String> list0 = List.of(\", \", \"\", \"\", \"V<^gw/;,dyMJyC\", \"\", \"\", \"`1u/\", \"V<^gw/;,dyMJyC\");\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.remove();\n",
                        "      fibonacciHeap0.poll();\n",
                        "      assertFalse(fibonacciHeap0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "isEmpty"
                        ]
                    ]
                },
                "201-206:test11": {
                    "start": 201,
                    "end": 206,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      fibonacciHeap0.poll();\n",
                        "      assertEquals(0, fibonacciHeap0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "185-198:test10": {
                    "start": 185,
                    "end": 198,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      FibonacciHeap<String> fibonacciHeap0 = new FibonacciHeap<String>((Comparator<? super String>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.remove0();\n",
                        "        fail(\"Expecting exception: NoSuchElementException\");\n",
                        "      \n",
                        "      } catch(NoSuchElementException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<String>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "remove0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "167-182:test09": {
                    "start": 167,
                    "end": 182,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      Stream<Object> stream0 = fibonacciHeap0.parallelStream();\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.add(stream0);\n",
                        "        fail(\"Expecting exception: ClassCastException\");\n",
                        "      \n",
                        "      } catch(ClassCastException e) {\n",
                        "         //\n",
                        "         // class java.util.stream.ReferencePipeline$Head cannot be cast to class java.lang.Comparable (java.util.stream.ReferencePipeline$Head and java.lang.Comparable are in module java.base of loader 'bootstrap')\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/Collection",
                            "parallelStream"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "151-164:test08": {
                    "start": 151,
                    "end": 164,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.add((Object) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Null elements not allowed in this FibonacciHeap implementation.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "134-148:test07": {
                    "start": 134,
                    "end": 148,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      List<String> list0 = List.of(\"{H#U6C}>dyurkgZEL&\\\"\");\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.addAll(list0);\n",
                        "        fail(\"Expecting exception: ClassCastException\");\n",
                        "      \n",
                        "      } catch(ClassCastException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "116-131:test06": {
                    "start": 116,
                    "end": 131,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      LinkedList<Object> linkedList0 = new LinkedList<Object>();\n",
                        "      linkedList0.add((Object) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.addAll(linkedList0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Null elements not allowed in this FibonacciHeap implementation.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedList",
                            "LinkedList<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedList",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "100-113:test05": {
                    "start": 100,
                    "end": 113,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.addAll((Collection<?>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "83-97:test04": {
                    "start": 83,
                    "end": 97,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      FibonacciHeap<Integer> fibonacciHeap1 = new FibonacciHeap<Integer>((Comparator<? super Integer>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap1.containsAll(fibonacciHeap0);\n",
                        "        fail(\"Expecting exception: UnsupportedOperationException\");\n",
                        "      \n",
                        "      } catch(UnsupportedOperationException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.collections.FibonacciHeap\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "containsAll"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "67-80:test03": {
                    "start": 67,
                    "end": 80,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      fibonacciHeap0.add(fibonacciHeap0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.offer(\"FibonacciHeap=[org.apache.commons.graph.collections.FibonacciHeap@0000000001, ]\");\n",
                        "        fail(\"Expecting exception: ClassCastException\");\n",
                        "      \n",
                        "      } catch(ClassCastException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "offer"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "51-64:test02": {
                    "start": 51,
                    "end": 64,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        fibonacciHeap0.offer((Object) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Null elements not allowed in this FibonacciHeap implementation.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "offer"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "40-48:test01": {
                    "start": 40,
                    "end": 48,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      FibonacciHeap<Object> fibonacciHeap0 = new FibonacciHeap<Object>((Comparator<? super Object>) null);\n",
                        "      List<String> list0 = List.of(\"\", \"\", \"org.apache.commons.graph.utils.Assertions\", \"\", \"\", \"\", \"\", \"\");\n",
                        "      fibonacciHeap0.addAll(list0);\n",
                        "      fibonacciHeap0.poll();\n",
                        "      int int0 = fibonacciHeap0.potential();\n",
                        "      assertEquals(7, fibonacciHeap0.size());\n",
                        "      assertEquals(8, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/List",
                            "of"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "potential"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "addAll"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "poll"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ]
                    ]
                },
                "30-37:test00": {
                    "start": 30,
                    "end": 37,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      FibonacciHeap fibonacciHeap0 = FibonacciHeap.FibonacciHeap1();\n",
                        "      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());\n",
                        "      FibonacciHeap<Object> fibonacciHeap1 = new FibonacciHeap<Object>(comparator0);\n",
                        "      fibonacciHeap1.offer(fibonacciHeap0);\n",
                        "      int int0 = fibonacciHeap1.size();\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.collections.FibonacciHeap",
                            "FibonacciHeap",
                            "80-82:FibonacciHeap1"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "FibonacciHeap<Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "size"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/collections/FibonacciHeap",
                            "offer"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}