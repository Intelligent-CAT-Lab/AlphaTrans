{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/SynchronizedMutableGraph_ESTest.java",
    "imports": {
        "12-12:import MutableGraph": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.MutableGraph;\n"
            ]
        },
        "15-15:import EvoRunnerParameters": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "17-17:import RunWith": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "14-14:import EvoRunner": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "13-13:import SynchronizedMutableGraph": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.SynchronizedMutableGraph;\n"
            ]
        },
        "16-16:import ViolatedAssumptionAnswer": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "SynchronizedMutableGraph_ESTest": {
            "start": 20,
            "end": 20,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "SynchronizedMutableGraph_ESTest_scaffolding"
            ],
            "methods": {
                "67-73:test4": {
                    "start": 67,
                    "end": 73,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      MutableGraph<Integer, Integer> mutableGraph0 = (MutableGraph<Integer, Integer>) mock(MutableGraph.class, new ViolatedAssumptionAnswer());\n",
                        "      SynchronizedMutableGraph<Integer, Integer> synchronizedMutableGraph0 = new SynchronizedMutableGraph<Integer, Integer>(mutableGraph0);\n",
                        "      Integer integer0 = new Integer((-1));\n",
                        "      synchronizedMutableGraph0.removeVertex(integer0);\n",
                        "      assertEquals(0, synchronizedMutableGraph0.getOrder());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "removeVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedGraph",
                            "getOrder"
                        ]
                    ]
                },
                "59-64:test3": {
                    "start": 59,
                    "end": 64,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      MutableGraph<Integer, Integer> mutableGraph0 = (MutableGraph<Integer, Integer>) mock(MutableGraph.class, new ViolatedAssumptionAnswer());\n",
                        "      SynchronizedMutableGraph<Integer, Integer> synchronizedMutableGraph0 = new SynchronizedMutableGraph<Integer, Integer>(mutableGraph0);\n",
                        "      synchronizedMutableGraph0.removeEdge((Integer) null);\n",
                        "      assertEquals(0, synchronizedMutableGraph0.getSize());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "removeEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedGraph",
                            "getSize"
                        ]
                    ]
                },
                "50-56:test2": {
                    "start": 50,
                    "end": 56,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      MutableGraph<Integer, Integer> mutableGraph0 = (MutableGraph<Integer, Integer>) mock(MutableGraph.class, new ViolatedAssumptionAnswer());\n",
                        "      SynchronizedMutableGraph<Integer, Integer> synchronizedMutableGraph0 = new SynchronizedMutableGraph<Integer, Integer>(mutableGraph0);\n",
                        "      Integer integer0 = new Integer((-1));\n",
                        "      synchronizedMutableGraph0.addVertex(integer0);\n",
                        "      assertEquals(0, synchronizedMutableGraph0.getSize());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedGraph",
                            "getSize"
                        ]
                    ]
                },
                "33-47:test1": {
                    "start": 33,
                    "end": 47,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      SynchronizedMutableGraph<Integer, Integer> synchronizedMutableGraph0 = new SynchronizedMutableGraph<Integer, Integer>((MutableGraph<Integer, Integer>) null);\n",
                        "      Integer integer0 = new Integer(3805);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        synchronizedMutableGraph0.removeEdge(integer0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.SynchronizedMutableGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "removeEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "23-30:test0": {
                    "start": 23,
                    "end": 30,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      MutableGraph<Integer, Integer> mutableGraph0 = (MutableGraph<Integer, Integer>) mock(MutableGraph.class, new ViolatedAssumptionAnswer());\n",
                        "      SynchronizedMutableGraph<Integer, Integer> synchronizedMutableGraph0 = new SynchronizedMutableGraph<Integer, Integer>(mutableGraph0);\n",
                        "      Integer integer0 = new Integer((-1));\n",
                        "      Integer integer1 = new Integer(0);\n",
                        "      synchronizedMutableGraph0.addEdge((Integer) null, integer1, integer0);\n",
                        "      assertFalse(integer1.equals((Object)integer0));\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "SynchronizedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/SynchronizedMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "equals"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}