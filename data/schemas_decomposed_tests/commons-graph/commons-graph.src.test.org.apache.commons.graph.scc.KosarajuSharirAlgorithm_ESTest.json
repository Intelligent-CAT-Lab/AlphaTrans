{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/scc/KosarajuSharirAlgorithm_ESTest.java",
    "imports": {
        "12-12:import Set": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.util.Set;\n"
            ]
        },
        "11-11:import LinkedHashSet": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.util.LinkedHashSet;\n"
            ]
        },
        "13-13:import DirectedGraph": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.DirectedGraph;\n"
            ]
        },
        "14-14:import DirectedMutableGraph": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "18-18:import EvoRunnerParameters": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "19-19:import RunWith": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "17-17:import EvoRunner": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "15-15:import RevertedGraph": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.model.RevertedGraph;\n"
            ]
        },
        "16-16:import KosarajuSharirAlgorithm": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.scc.KosarajuSharirAlgorithm;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "KosarajuSharirAlgorithm_ESTest": {
            "start": 22,
            "end": 22,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "KosarajuSharirAlgorithm_ESTest_scaffolding"
            ],
            "methods": {
                "156-161:test9": {
                    "start": 156,
                    "end": 161,
                    "body": [
                        "  public void test9()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, LinkedHashSet<Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, LinkedHashSet<Integer>>();\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>(directedMutableGraph0);\n",
                        "      Set<Set<Integer>> set0 = kosarajuSharirAlgorithm0.perform();\n",
                        "      assertTrue(set0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test9()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "isEmpty"
                        ]
                    ]
                },
                "138-153:test8": {
                    "start": 138,
                    "end": 153,
                    "body": [
                        "  public void test8()  throws Throwable  {\n",
                        "      Integer integer0 = new Integer((-99));\n",
                        "      DirectedMutableGraph<Integer, LinkedHashSet<Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, LinkedHashSet<Integer>>();\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>(directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kosarajuSharirAlgorithm0.perform1(integer0);\n",
                        "        fail(\"Expecting exception: IllegalStateException\");\n",
                        "      \n",
                        "      } catch(IllegalStateException e) {\n",
                        "         //\n",
                        "         // Vertex -99 does not exist in the Graph\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test8()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "124-135:test7": {
                    "start": 124,
                    "end": 135,
                    "body": [
                        "  public void test7()  throws Throwable  {\n",
                        "      Integer integer0 = new Integer((-99));\n",
                        "      DirectedMutableGraph<Integer, LinkedHashSet<Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, LinkedHashSet<Integer>>();\n",
                        "      directedMutableGraph0.addVertex(integer0);\n",
                        "      Integer integer1 = new Integer((-1428));\n",
                        "      directedMutableGraph0.addVertex(integer1);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      directedMutableGraph0.addEdge(integer0, linkedHashSet0, integer1);\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>(directedMutableGraph0);\n",
                        "      Set<Set<Integer>> set0 = kosarajuSharirAlgorithm0.perform0();\n",
                        "      assertEquals(2, set0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test7()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform0"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "size"
                        ]
                    ]
                },
                "108-121:test6": {
                    "start": 108,
                    "end": 121,
                    "body": [
                        "  public void test6()  throws Throwable  {\n",
                        "      KosarajuSharirAlgorithm<LinkedHashSet<Integer>, Integer> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<LinkedHashSet<Integer>, Integer>((DirectedGraph<LinkedHashSet<Integer>, Integer>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kosarajuSharirAlgorithm0.perform();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.scc.KosarajuSharirAlgorithm\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test6()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<LinkedHashSet<Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "92-105:test5": {
                    "start": 92,
                    "end": 105,
                    "body": [
                        "  public void test5()  throws Throwable  {\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>((DirectedGraph<Integer, LinkedHashSet<Integer>>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kosarajuSharirAlgorithm0.perform0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.scc.KosarajuSharirAlgorithm\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test5()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "76-89:test4": {
                    "start": 76,
                    "end": 89,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      KosarajuSharirAlgorithm<Integer, Integer> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, Integer>((DirectedGraph<Integer, Integer>) null);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kosarajuSharirAlgorithm0.perform1((Integer) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Kosaraju Sharir algorithm cannot be calculated without expressing the source vertex\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "59-73:test3": {
                    "start": 59,
                    "end": 73,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      KosarajuSharirAlgorithm<LinkedHashSet<Integer>, Integer> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<LinkedHashSet<Integer>, Integer>((DirectedGraph<LinkedHashSet<Integer>, Integer>) null);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        kosarajuSharirAlgorithm0.perform1(linkedHashSet0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.scc.KosarajuSharirAlgorithm\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<LinkedHashSet<Integer>,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "49-56:test2": {
                    "start": 49,
                    "end": 56,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      Integer integer0 = new Integer((-1));\n",
                        "      DirectedMutableGraph<Integer, LinkedHashSet<Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, LinkedHashSet<Integer>>();\n",
                        "      directedMutableGraph0.addVertex(integer0);\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>(directedMutableGraph0);\n",
                        "      Set<Set<Integer>> set0 = kosarajuSharirAlgorithm0.perform();\n",
                        "      assertFalse(set0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "isEmpty"
                        ]
                    ]
                },
                "40-46:test1": {
                    "start": 40,
                    "end": 46,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      RevertedGraph<Integer, Integer> revertedGraph0 = new RevertedGraph<Integer, Integer>(directedMutableGraph0);\n",
                        "      KosarajuSharirAlgorithm<Integer, Integer> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, Integer>(revertedGraph0);\n",
                        "      Set<Set<Integer>> set0 = kosarajuSharirAlgorithm0.perform0();\n",
                        "      assertEquals(0, set0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "size"
                        ]
                    ]
                },
                "25-37:test0": {
                    "start": 25,
                    "end": 37,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      Integer integer0 = new Integer((-99));\n",
                        "      DirectedMutableGraph<Integer, LinkedHashSet<Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, LinkedHashSet<Integer>>();\n",
                        "      directedMutableGraph0.addVertex(integer0);\n",
                        "      Integer integer1 = new Integer((-1428));\n",
                        "      directedMutableGraph0.addVertex(integer1);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      directedMutableGraph0.addEdge(integer0, linkedHashSet0, integer1);\n",
                        "      KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>> kosarajuSharirAlgorithm0 = new KosarajuSharirAlgorithm<Integer, LinkedHashSet<Integer>>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addEdge(integer1, linkedHashSet0, integer0);\n",
                        "      Set<Integer> set0 = kosarajuSharirAlgorithm0.perform1(integer0);\n",
                        "      assertTrue(set0.contains((-1428)));\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "KosarajuSharirAlgorithm<Integer,LinkedHashSet<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/scc/KosarajuSharirAlgorithm",
                            "perform1"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "contains"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}