{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector_ESTest.java",
    "imports": {
        "12-12:import LinkedHashSet": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.util.LinkedHashSet;\n"
            ]
        },
        "14-14:import UndirectedGraph": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.UndirectedGraph;\n"
            ]
        },
        "18-18:import UndirectedMutableGraph": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "21-21:import EvoRunnerParameters": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "23-23:import RunWith": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "20-20:import EvoRunner": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "13-13:import Mapper": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "15-15:import ColoredVertices": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.coloring.ColoredVertices;\n"
            ]
        },
        "16-16:import DefaultColoringAlgorithmsSelector": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector;\n"
            ]
        },
        "19-19:import Monoid": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.weight.Monoid;\n"
            ]
        },
        "17-17:import MutableSpanningTree": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "22-22:import ViolatedAssumptionAnswer": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultColoringAlgorithmsSelector_ESTest": {
            "start": 26,
            "end": 26,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultColoringAlgorithmsSelector_ESTest_scaffolding"
            ],
            "methods": {
                "276-282:test14": {
                    "start": 276,
                    "end": 282,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "      assertEquals(0, coloredVertices0.getRequiredColors());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "getRequiredColors"
                        ]
                    ]
                },
                "263-273:test13": {
                    "start": 263,
                    "end": 273,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer0 = new Integer((-1862));\n",
                        "      linkedHashSet0.add(integer0);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices1 = defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm1(coloredVertices0);\n",
                        "      assertEquals(1, coloredVertices1.getRequiredColors());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm1"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "getRequiredColors"
                        ]
                    ]
                },
                "254-260:test12": {
                    "start": 254,
                    "end": 260,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = defaultColoringAlgorithmsSelector0.applyingGreedyAlgorithm();\n",
                        "      assertEquals(0, coloredVertices0.getRequiredColors());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingGreedyAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "getRequiredColors"
                        ]
                    ]
                },
                "234-251:test11": {
                    "start": 234,
                    "end": 251,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer0 = new Integer((-1862));\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingGreedyAlgorithm();\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingGreedyAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "222-231:test10": {
                    "start": 222,
                    "end": 231,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer0 = new Integer((-1862));\n",
                        "      linkedHashSet0.add((Integer) null);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "      assertEquals(1, coloredVertices0.getRequiredColors());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "getRequiredColors"
                        ]
                    ]
                },
                "197-219:test09": {
                    "start": 197,
                    "end": 219,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      Integer integer0 = new Integer(340);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer1 = new Integer(1);\n",
                        "      undirectedMutableGraph0.addVertex(integer1);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = new ColoredVertices<Integer, Integer>();\n",
                        "      undirectedMutableGraph0.addEdge(integer0, coloredVertices0, integer1);\n",
                        "      linkedHashSet0.add(integer1);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "ColoredVertices<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "176-194:test08": {
                    "start": 176,
                    "end": 194,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      Integer integer0 = new Integer((-212));\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = new ColoredVertices<Integer, Integer>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm1(coloredVertices0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "ColoredVertices<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "159-173:test07": {
                    "start": 159,
                    "end": 173,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, Integer, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, Integer, Integer>((UndirectedGraph<Integer, Integer>) null, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "134-156:test06": {
                    "start": 134,
                    "end": 156,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Monoid<Object> monoid0 = (Monoid<Object>) mock(Monoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(monoid0).identity();\n",
                        "      Mapper<Integer, Object> mapper0 = (Mapper<Integer, Object>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Object, Integer, Object> mutableSpanningTree0 = new MutableSpanningTree<Object, Integer, Object>(monoid0, mapper0);\n",
                        "      LinkedHashSet<Comparable<Object>> linkedHashSet0 = new LinkedHashSet<Comparable<Object>>();\n",
                        "      mutableSpanningTree0.addVertex(linkedHashSet0);\n",
                        "      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((String) null).when(comparable0).toString();\n",
                        "      linkedHashSet0.add(comparable0);\n",
                        "      DefaultColoringAlgorithmsSelector<Object, Integer, Comparable<Object>> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Object, Integer, Comparable<Object>>(mutableSpanningTree0, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Object,Integer,Object>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Comparable<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Object,Integer,Comparable<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "116-131:test05": {
                    "start": 116,
                    "end": 131,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm1((ColoredVertices<Integer, Integer>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // PartialColoredVertex must be not null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "98-113:test04": {
                    "start": 98,
                    "end": 113,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      LinkedHashSet<ColoredVertices<Integer, Integer>> linkedHashSet0 = new LinkedHashSet<ColoredVertices<Integer, Integer>>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, Integer, ColoredVertices<Integer, Integer>> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, Integer, ColoredVertices<Integer, Integer>>((UndirectedGraph<Integer, Integer>) null, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, ColoredVertices<Integer, Integer>> coloredVertices0 = new ColoredVertices<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm1(coloredVertices0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "ColoredVertices<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "81-95:test03": {
                    "start": 81,
                    "end": 95,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, Integer, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, Integer, Integer>((UndirectedGraph<Integer, Integer>) null, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingGreedyAlgorithm();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingGreedyAlgorithm"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "68-78:test02": {
                    "start": 68,
                    "end": 78,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Monoid<ColoredVertices<Integer, Integer>> monoid0 = (Monoid<ColoredVertices<Integer, Integer>>) mock(Monoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Object) null).when(monoid0).identity();\n",
                        "      Mapper<Integer, ColoredVertices<Integer, Integer>> mapper0 = (Mapper<Integer, ColoredVertices<Integer, Integer>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Integer, Integer, ColoredVertices<Integer, Integer>> mutableSpanningTree0 = new MutableSpanningTree<Integer, Integer, ColoredVertices<Integer, Integer>>(monoid0, mapper0);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, Integer, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, Integer, Integer>(mutableSpanningTree0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = new ColoredVertices<Integer, Integer>();\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices1 = defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm1(coloredVertices0);\n",
                        "      assertSame(coloredVertices1, coloredVertices0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "ColoredVertices<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm1"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertSame"
                        ]
                    ]
                },
                "53-65:test01": {
                    "start": 53,
                    "end": 65,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      Integer integer0 = new Integer((-212));\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer1 = new Integer((-1246));\n",
                        "      linkedHashSet0.add(integer1);\n",
                        "      Integer integer2 = new Integer((-3954));\n",
                        "      undirectedMutableGraph0.addVertex(integer2);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = defaultColoringAlgorithmsSelector0.applyingGreedyAlgorithm();\n",
                        "      assertEquals(1, coloredVertices0.getRequiredColors());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingGreedyAlgorithm"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "getRequiredColors"
                        ]
                    ]
                },
                "29-50:test00": {
                    "start": 29,
                    "end": 50,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, ColoredVertices<Integer, Integer>>();\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      Integer integer0 = new Integer(2238);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      ColoredVertices<Integer, Integer> coloredVertices0 = new ColoredVertices<Integer, Integer>();\n",
                        "      Integer integer1 = new Integer(2238);\n",
                        "      undirectedMutableGraph0.addEdge(integer0, coloredVertices0, integer1);\n",
                        "      linkedHashSet0.add(integer0);\n",
                        "      DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer> defaultColoringAlgorithmsSelector0 = new DefaultColoringAlgorithmsSelector<Integer, ColoredVertices<Integer, Integer>, Integer>(undirectedMutableGraph0, linkedHashSet0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultColoringAlgorithmsSelector0.applyingBackTrackingAlgorithm0();\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.coloring.DefaultColoringAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,ColoredVertices<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/ColoredVertices",
                            "ColoredVertices<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "DefaultColoringAlgorithmsSelector<Integer,ColoredVertices<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "java.base/java/util/HashSet",
                            "add"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/coloring/DefaultColoringAlgorithmsSelector",
                            "applyingBackTrackingAlgorithm0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}