{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector_ESTest.java",
    "imports": {
        "12-12:import Graph": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.Graph;\n"
            ]
        },
        "18-18:import UndirectedMutableGraph": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "14-14:import DirectedMutableGraph": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "23-23:import EvoRunnerParameters": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "25-25:import RunWith": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "22-22:import EvoRunner": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "13-13:import VertexPair": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        },
        "19-19:import BaseGraphVisitHandler": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.visit.BaseGraphVisitHandler;\n"
            ]
        },
        "21-21:import GraphVisitHandler": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.graph.visit.GraphVisitHandler;\n"
            ]
        },
        "15-15:import InMemoryPath": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.model.InMemoryPath;\n"
            ]
        },
        "16-16:import MutableSpanningTree": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "17-17:import RevertedGraph": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.model.RevertedGraph;\n"
            ]
        },
        "20-20:import DefaultVisitAlgorithmsSelector": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector;\n"
            ]
        },
        "24-24:import ViolatedAssumptionAnswer": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultVisitAlgorithmsSelector_ESTest": {
            "start": 28,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultVisitAlgorithmsSelector_ESTest_scaffolding"
            ],
            "methods": {
                "217-232:test11": {
                    "start": 217,
                    "end": 232,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, Object> directedMutableGraph0 = new DirectedMutableGraph<Object, Object>();\n",
                        "      RevertedGraph<Object, Object> revertedGraph0 = new RevertedGraph<Object, Object>(directedMutableGraph0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>>(revertedGraph0, revertedGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingDepthFirstSearch0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Object,RevertedGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "199-214:test10": {
                    "start": 199,
                    "end": 214,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, Object> directedMutableGraph0 = new DirectedMutableGraph<Object, Object>();\n",
                        "      RevertedGraph<Object, Object> revertedGraph0 = new RevertedGraph<Object, Object>(directedMutableGraph0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>>(revertedGraph0, revertedGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Object,RevertedGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "189-196:test09": {
                    "start": 189,
                    "end": 196,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, Object> directedMutableGraph0 = new DirectedMutableGraph<Object, Object>();\n",
                        "      RevertedGraph<Object, Object> revertedGraph0 = new RevertedGraph<Object, Object>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>>(revertedGraph0, revertedGraph0);\n",
                        "      Graph<Object, Object> graph0 = defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch0();\n",
                        "      assertNotNull(graph0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Object,RevertedGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch0"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "168-186:test08": {
                    "start": 168,
                    "end": 186,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      Comparable<Object> comparable0 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n",
                        "      InMemoryPath<Comparable<Object>, Comparable<Integer>> inMemoryPath0 = new InMemoryPath<Comparable<Object>, Comparable<Integer>>(comparable0, comparable0);\n",
                        "      Comparable<Object> comparable1 = (Comparable<Object>) mock(Comparable.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((String) null).when(comparable1).toString();\n",
                        "      DefaultVisitAlgorithmsSelector<Comparable<Object>, Comparable<Integer>, InMemoryPath<Comparable<Object>, Comparable<Integer>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Comparable<Object>, Comparable<Integer>, InMemoryPath<Comparable<Object>, Comparable<Integer>>>(inMemoryPath0, comparable1);\n",
                        "      BaseGraphVisitHandler<Comparable<Object>, Comparable<Integer>, InMemoryPath<Comparable<Object>, Comparable<Integer>>, Object> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Comparable<Object>, Comparable<Integer>, InMemoryPath<Comparable<Object>, Comparable<Integer>>, Object>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch1((GraphVisitHandler<Comparable<Object>, Comparable<Integer>, InMemoryPath<Comparable<Object>, Comparable<Integer>>, Object>) baseGraphVisitHandler0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Impossible to get the degree of input vertex; null not contained in this path\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<Comparable<Object>,Comparable<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Comparable<Object>,Comparable<Integer>,InMemoryPath<Comparable<Object>,Comparable<Integer>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Comparable<Object>,Comparable<Integer>,InMemoryPath<Comparable<Object>,Comparable<Integer>>,Object>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "toString"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "150-165:test07": {
                    "start": 150,
                    "end": 165,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      BaseGraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object>();\n",
                        "      DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>();\n",
                        "      DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>>(directedMutableGraph0, directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch1((GraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object>) baseGraphVisitHandler0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Object,DirectedMutableGraph<Integer,Integer>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,DirectedMutableGraph<Integer,Integer>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "131-147:test06": {
                    "start": 131,
                    "end": 147,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Object, Comparable<Object>> undirectedMutableGraph0 = new UndirectedMutableGraph<Object, Comparable<Object>>();\n",
                        "      Object object0 = new Object();\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Comparable<Object>, UndirectedMutableGraph<Object, Comparable<Object>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Comparable<Object>, UndirectedMutableGraph<Object, Comparable<Object>>>(undirectedMutableGraph0, object0);\n",
                        "      BaseGraphVisitHandler<Object, Comparable<Object>, UndirectedMutableGraph<Object, Comparable<Object>>, Object> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Object, Comparable<Object>, UndirectedMutableGraph<Object, Comparable<Object>>, Object>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch1((GraphVisitHandler<Object, Comparable<Object>, UndirectedMutableGraph<Object, Comparable<Object>>, Object>) baseGraphVisitHandler0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Object,Comparable<Object>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Comparable<Object>,UndirectedMutableGraph<Object,Comparable<Object>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Object,Comparable<Object>,UndirectedMutableGraph<Object,Comparable<Object>>,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "112-128:test05": {
                    "start": 112,
                    "end": 128,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      Object object0 = new Object();\n",
                        "      InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>> inMemoryPath0 = new InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>(object0, object0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, MutableSpanningTree<Object, Integer, Object>, InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, MutableSpanningTree<Object, Integer, Object>, InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>>(inMemoryPath0, inMemoryPath0);\n",
                        "      BaseGraphVisitHandler<Object, MutableSpanningTree<Object, Integer, Object>, InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>, Integer> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Object, MutableSpanningTree<Object, Integer, Object>, InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>, Integer>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingDepthFirstSearch1((GraphVisitHandler<Object, MutableSpanningTree<Object, Integer, Object>, InMemoryPath<Object, MutableSpanningTree<Object, Integer, Object>>, Integer>) baseGraphVisitHandler0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Impossible to get the degree of input vertex; InMemoryPath [vertices=[], edges=[]] not contained in this path\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/InMemoryPath",
                            "InMemoryPath<Object,MutableSpanningTree<Object,Integer,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,MutableSpanningTree<Object,Integer,Object>,InMemoryPath<Object,MutableSpanningTree<Object,Integer,Object>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Object,MutableSpanningTree<Object,Integer,Object>,InMemoryPath<Object,MutableSpanningTree<Object,Integer,Object>>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "95-109:test04": {
                    "start": 95,
                    "end": 109,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>();\n",
                        "      DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>>(directedMutableGraph0, directedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingDepthFirstSearch1((GraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object>) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Graph visitor handler can not be null.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,DirectedMutableGraph<Integer,Integer>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "76-92:test03": {
                    "start": 76,
                    "end": 92,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Comparable<Integer>, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<Comparable<Integer>, Integer>();\n",
                        "      Integer integer0 = Integer.getInteger((String) null, 0);\n",
                        "      DefaultVisitAlgorithmsSelector<Comparable<Integer>, Integer, UndirectedMutableGraph<Comparable<Integer>, Integer>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Comparable<Integer>, Integer, UndirectedMutableGraph<Comparable<Integer>, Integer>>(undirectedMutableGraph0, integer0);\n",
                        "      BaseGraphVisitHandler<Comparable<Integer>, Integer, UndirectedMutableGraph<Comparable<Integer>, Integer>, Integer> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Comparable<Integer>, Integer, UndirectedMutableGraph<Comparable<Integer>, Integer>, Integer>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector0.applyingDepthFirstSearch1((GraphVisitHandler<Comparable<Integer>, Integer, UndirectedMutableGraph<Comparable<Integer>, Integer>, Integer>) baseGraphVisitHandler0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Comparable<Integer>,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "getInteger"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Comparable<Integer>,Integer,UndirectedMutableGraph<Comparable<Integer>,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Comparable<Integer>,Integer,UndirectedMutableGraph<Comparable<Integer>,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "65-73:test02": {
                    "start": 65,
                    "end": 73,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, Object> directedMutableGraph0 = new DirectedMutableGraph<Object, Object>();\n",
                        "      RevertedGraph<Object, Object> revertedGraph0 = new RevertedGraph<Object, Object>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>>(revertedGraph0, revertedGraph0);\n",
                        "      BaseGraphVisitHandler<Object, Object, RevertedGraph<Object, Object>, VertexPair<Integer>> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Object, Object, RevertedGraph<Object, Object>, VertexPair<Integer>>();\n",
                        "      VertexPair<Integer> vertexPair0 = defaultVisitAlgorithmsSelector0.applyingBreadthFirstSearch1((GraphVisitHandler<Object, Object, RevertedGraph<Object, Object>, VertexPair<Integer>>) baseGraphVisitHandler0);\n",
                        "      assertNull(vertexPair0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Object,RevertedGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Object,Object,RevertedGraph<Object,Object>,VertexPair<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingBreadthFirstSearch1"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "55-62:test01": {
                    "start": 55,
                    "end": 62,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, Object> directedMutableGraph0 = new DirectedMutableGraph<Object, Object>();\n",
                        "      RevertedGraph<Object, Object> revertedGraph0 = new RevertedGraph<Object, Object>(directedMutableGraph0);\n",
                        "      directedMutableGraph0.addVertex(revertedGraph0);\n",
                        "      DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, Object, RevertedGraph<Object, Object>>(revertedGraph0, revertedGraph0);\n",
                        "      Graph<Object, Object> graph0 = defaultVisitAlgorithmsSelector0.applyingDepthFirstSearch0();\n",
                        "      assertNotNull(graph0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/RevertedGraph",
                            "RevertedGraph<Object,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,Object,RevertedGraph<Object,Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch0"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "31-52:test00": {
                    "start": 31,
                    "end": 52,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>();\n",
                        "      DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>> defaultVisitAlgorithmsSelector0 = new DefaultVisitAlgorithmsSelector<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>>(directedMutableGraph0, directedMutableGraph0);\n",
                        "      BaseGraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object> baseGraphVisitHandler0 = new BaseGraphVisitHandler<Object, DirectedMutableGraph<Integer, Integer>, DirectedMutableGraph<Object, DirectedMutableGraph<Integer, Integer>>, Object>();\n",
                        "      Integer integer0 = new Integer((-1809));\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph1 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>> directedMutableGraph2 = (DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>) mock(DirectedMutableGraph.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Iterable) null).when(directedMutableGraph2).getOutbound(anyInt());\n",
                        "      DefaultVisitAlgorithmsSelector<Integer, RevertedGraph<Integer, Integer>, DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>> defaultVisitAlgorithmsSelector1 = new DefaultVisitAlgorithmsSelector<Integer, RevertedGraph<Integer, Integer>, DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>>(directedMutableGraph2, integer0);\n",
                        "      BaseGraphVisitHandler<Integer, RevertedGraph<Integer, Integer>, DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>, Comparable<Object>> baseGraphVisitHandler1 = new BaseGraphVisitHandler<Integer, RevertedGraph<Integer, Integer>, DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>, Comparable<Object>>();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultVisitAlgorithmsSelector1.applyingDepthFirstSearch1((GraphVisitHandler<Integer, RevertedGraph<Integer, Integer>, DirectedMutableGraph<Integer, RevertedGraph<Integer, Integer>>, Comparable<Object>>) baseGraphVisitHandler1);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.visit.DefaultVisitAlgorithmsSelector\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Object,DirectedMutableGraph<Integer,Integer>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Object,DirectedMutableGraph<Integer,Integer>,DirectedMutableGraph<Object,DirectedMutableGraph<Integer,Integer>>,Object>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "DefaultVisitAlgorithmsSelector<Integer,RevertedGraph<Integer,Integer>,DirectedMutableGraph<Integer,RevertedGraph<Integer,Integer>>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/BaseGraphVisitHandler",
                            "BaseGraphVisitHandler<Integer,RevertedGraph<Integer,Integer>,DirectedMutableGraph<Integer,RevertedGraph<Integer,Integer>>,Comparable<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "getOutbound"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/ArgumentMatchers",
                            "anyInt"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/visit/DefaultVisitAlgorithmsSelector",
                            "applyingDepthFirstSearch1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}