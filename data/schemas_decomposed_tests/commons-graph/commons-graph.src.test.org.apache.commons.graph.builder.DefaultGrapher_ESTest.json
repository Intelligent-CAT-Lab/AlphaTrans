{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/builder/DefaultGrapher_ESTest.java",
    "imports": {
        "13-13:import MutableGraph": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.graph.MutableGraph;\n"
            ]
        },
        "17-17:import UndirectedMutableGraph": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "20-20:import EvoRunnerParameters": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "22-22:import RunWith": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "19-19:import EvoRunner": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "12-12:import Mapper": {
            "start": 12,
            "end": 12,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "15-15:import HeadVertexConnector": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.graph.builder.HeadVertexConnector;\n"
            ]
        },
        "14-14:import DefaultGrapher": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.graph.builder.DefaultGrapher;\n"
            ]
        },
        "16-16:import MutableSpanningTree": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "18-18:import IntegerWeightBaseOperations": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations;\n"
            ]
        },
        "21-21:import ViolatedAssumptionAnswer": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "DefaultGrapher_ESTest": {
            "start": 25,
            "end": 25,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "DefaultGrapher_ESTest_scaffolding"
            ],
            "methods": {
                "94-108:test4": {
                    "start": 94,
                    "end": 108,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Integer>();\n",
                        "      DefaultGrapher<Integer, Integer> defaultGrapher0 = new DefaultGrapher<Integer, Integer>(undirectedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultGrapher0.addEdge((Integer) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Null edge not admitted\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "DefaultGrapher<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "73-91:test3": {
                    "start": 73,
                    "end": 91,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      IntegerWeightBaseOperations integerWeightBaseOperations0 = new IntegerWeightBaseOperations();\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Integer, Integer, Integer> mutableSpanningTree0 = new MutableSpanningTree<Integer, Integer, Integer>(integerWeightBaseOperations0, mapper0);\n",
                        "      DefaultGrapher<Integer, Integer> defaultGrapher0 = new DefaultGrapher<Integer, Integer>(mutableSpanningTree0);\n",
                        "      Integer integer0 = new Integer(2512);\n",
                        "      Integer integer1 = defaultGrapher0.addVertex(integer0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultGrapher0.addVertex(integer1);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "DefaultGrapher<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "56-70:test2": {
                    "start": 56,
                    "end": 70,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Integer>();\n",
                        "      DefaultGrapher<Integer, Integer> defaultGrapher0 = new DefaultGrapher<Integer, Integer>(undirectedMutableGraph0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultGrapher0.addVertex((Integer) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // Null vertex not admitted\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.utils.Assertions\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "DefaultGrapher<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "39-53:test1": {
                    "start": 39,
                    "end": 53,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      DefaultGrapher<Integer, Integer> defaultGrapher0 = new DefaultGrapher<Integer, Integer>((MutableGraph<Integer, Integer>) null);\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        defaultGrapher0.addVertex(integer0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.builder.DefaultGrapher\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "DefaultGrapher<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "28-36:test0": {
                    "start": 28,
                    "end": 36,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      IntegerWeightBaseOperations integerWeightBaseOperations0 = new IntegerWeightBaseOperations();\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Integer, Integer, Integer> mutableSpanningTree0 = new MutableSpanningTree<Integer, Integer, Integer>(integerWeightBaseOperations0, mapper0);\n",
                        "      DefaultGrapher<Integer, Integer> defaultGrapher0 = new DefaultGrapher<Integer, Integer>(mutableSpanningTree0);\n",
                        "      Integer integer0 = new Integer(2512);\n",
                        "      HeadVertexConnector<Integer, Integer> headVertexConnector0 = defaultGrapher0.addEdge(integer0);\n",
                        "      assertNotNull(headVertexConnector0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "DefaultGrapher<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/builder/DefaultGrapher",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}