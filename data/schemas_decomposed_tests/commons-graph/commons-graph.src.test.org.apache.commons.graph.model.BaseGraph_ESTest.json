{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-graph/src/test/java/org/apache/commons/graph/model/BaseGraph_ESTest.java",
    "imports": {
        "16-16:import Set": {
            "start": 16,
            "end": 16,
            "body": [
                "import java.util.Set;\n"
            ]
        },
        "14-14:import Map": {
            "start": 14,
            "end": 14,
            "body": [
                "import java.util.Map;\n"
            ]
        },
        "12-12:import FormatFlagsConversionMismatchException": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.util.FormatFlagsConversionMismatchException;\n"
            ]
        },
        "13-13:import LinkedHashSet": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.util.LinkedHashSet;\n"
            ]
        },
        "15-15:import MissingFormatArgumentException": {
            "start": 15,
            "end": 15,
            "body": [
                "import java.util.MissingFormatArgumentException;\n"
            ]
        },
        "17-17:import UnknownFormatConversionException": {
            "start": 17,
            "end": 17,
            "body": [
                "import java.util.UnknownFormatConversionException;\n"
            ]
        },
        "23-23:import UndirectedMutableGraph": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.apache.commons.graph.model.UndirectedMutableGraph;\n"
            ]
        },
        "20-20:import BaseGraph": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.graph.model.BaseGraph;\n"
            ]
        },
        "21-21:import DirectedMutableGraph": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.apache.commons.graph.model.DirectedMutableGraph;\n"
            ]
        },
        "27-27:import EvoRunnerParameters": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "29-29:import RunWith": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "26-26:import EvoRunner": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "19-19:import VertexPair": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.graph.VertexPair;\n"
            ]
        },
        "18-18:import Mapper": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.graph.Mapper;\n"
            ]
        },
        "24-24:import Monoid": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.apache.commons.graph.weight.Monoid;\n"
            ]
        },
        "22-22:import MutableSpanningTree": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.apache.commons.graph.model.MutableSpanningTree;\n"
            ]
        },
        "25-25:import IntegerWeightBaseOperations": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations;\n"
            ]
        },
        "28-28:import ViolatedAssumptionAnswer": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "11-11:import static EvoAssertions.*": {
            "start": 11,
            "end": 11,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "BaseGraph_ESTest": {
            "start": 32,
            "end": 32,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "BaseGraph_ESTest_scaffolding"
            ],
            "methods": {
                "314-328:test29": {
                    "start": 314,
                    "end": 328,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, UndirectedMutableGraph<Object, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, UndirectedMutableGraph<Object, Integer>>();\n",
                        "      Integer integer0 = new Integer(0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        directedMutableGraph0.getConnectedVertices(integer0);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,UndirectedMutableGraph<Object,Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getConnectedVertices"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "307-311:test28": {
                    "start": 307,
                    "end": 311,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Integer>();\n",
                        "      int int0 = undirectedMutableGraph0.getOrder();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getOrder"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "298-304:test27": {
                    "start": 298,
                    "end": 304,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      Integer integer0 = new Integer((-2145857996));\n",
                        "      directedMutableGraph0.addVertex(integer0);\n",
                        "      Map<Integer, Set<Integer>> map0 = directedMutableGraph0.getAdjacencyList();\n",
                        "      assertFalse(map0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "isEmpty"
                        ]
                    ]
                },
                "291-295:test26": {
                    "start": 291,
                    "end": 295,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      DirectedMutableGraph<MutableSpanningTree<Object, Object, Integer>, VertexPair<Object>> directedMutableGraph0 = new DirectedMutableGraph<MutableSpanningTree<Object, Object, Integer>, VertexPair<Object>>();\n",
                        "      Iterable<MutableSpanningTree<Object, Object, Integer>> iterable0 = directedMutableGraph0.getVertices0();\n",
                        "      assertNotNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<MutableSpanningTree<Object,Object,Integer>,VertexPair<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getVertices0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "284-288:test25": {
                    "start": 284,
                    "end": 288,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      Iterable<Integer> iterable0 = directedMutableGraph0.getEdges();\n",
                        "      assertNotNull(iterable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getEdges"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNotNull"
                        ]
                    ]
                },
                "277-281:test24": {
                    "start": 277,
                    "end": 281,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<VertexPair<Integer>, VertexPair<Object>> undirectedMutableGraph0 = new UndirectedMutableGraph<VertexPair<Integer>, VertexPair<Object>>();\n",
                        "      int int0 = undirectedMutableGraph0.getSize();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<VertexPair<Integer>,VertexPair<Object>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getSize"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "267-274:test23": {
                    "start": 267,
                    "end": 274,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      Monoid<Comparable<Integer>> monoid0 = (Monoid<Comparable<Integer>>) mock(Monoid.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn((Comparable<Integer>) null).when(monoid0).identity();\n",
                        "      Mapper<Comparable<Integer>, Comparable<Integer>> mapper0 = (Mapper<Comparable<Integer>, Comparable<Integer>>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Integer, Comparable<Integer>, Comparable<Integer>> mutableSpanningTree0 = new MutableSpanningTree<Integer, Comparable<Integer>, Comparable<Integer>>(monoid0, mapper0);\n",
                        "      boolean boolean0 = mutableSpanningTree0.containsEdge((Comparable<Integer>) null);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Comparable<Integer>,Comparable<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/weight/Monoid",
                            "identity"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "259-264:test22": {
                    "start": 259,
                    "end": 264,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      Object object0 = new Object();\n",
                        "      DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>>();\n",
                        "      boolean boolean0 = directedMutableGraph0.equals(object0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Object",
                            "Object"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,UndirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "252-256:test21": {
                    "start": 252,
                    "end": 256,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>>();\n",
                        "      boolean boolean0 = directedMutableGraph0.equals(directedMutableGraph0);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,UndirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "245-249:test20": {
                    "start": 245,
                    "end": 249,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>>();\n",
                        "      boolean boolean0 = directedMutableGraph0.equals((Object) null);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,UndirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "237-242:test19": {
                    "start": 237,
                    "end": 242,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Integer> directedMutableGraph0 = new DirectedMutableGraph<Integer, Integer>();\n",
                        "      DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>> directedMutableGraph1 = new DirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>>();\n",
                        "      boolean boolean0 = directedMutableGraph1.equals(directedMutableGraph0);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,UndirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "equals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "230-234:test18": {
                    "start": 230,
                    "end": 234,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      DirectedMutableGraph<Integer, Object> directedMutableGraph0 = new DirectedMutableGraph<Integer, Object>();\n",
                        "      String string0 = directedMutableGraph0.toString();\n",
                        "      assertEquals(\"{}\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<Integer,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "toString"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "224-227:test17": {
                    "start": 224,
                    "end": 227,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, Integer>();\n",
                        "      undirectedMutableGraph0.hashCode();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<UndirectedMutableGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "hashCode"
                        ]
                    ]
                },
                "209-221:test16": {
                    "start": 209,
                    "end": 221,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      Object[] objectArray0 = new Object[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BaseGraph.checkGraphCondition(false, (String) null, objectArray0);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "193-206:test15": {
                    "start": 193,
                    "end": 206,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      Object[] objectArray0 = new Object[5];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BaseGraph.checkGraphCondition(false, \"Wt!vQ>x%04BJ+\", objectArray0);\n",
                        "        fail(\"Expecting exception: FormatFlagsConversionMismatchException\");\n",
                        "      \n",
                        "      } catch(FormatFlagsConversionMismatchException e) {\n",
                        "         //\n",
                        "         // Conversion = b, Flags = 0\n",
                        "         //\n",
                        "         verifyException(\"java.util.Formatter$FormatSpecifier\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "177-190:test14": {
                    "start": 177,
                    "end": 190,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      Object[] objectArray0 = new Object[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BaseGraph.checkGraphCondition(false, \"Head Vertex '%s' not present in the Graph\", objectArray0);\n",
                        "        fail(\"Expecting exception: MissingFormatArgumentException\");\n",
                        "      \n",
                        "      } catch(MissingFormatArgumentException e) {\n",
                        "         //\n",
                        "         // Format specifier '%s'\n",
                        "         //\n",
                        "         verifyException(\"java.util.Formatter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "161-174:test13": {
                    "start": 161,
                    "end": 174,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      Object[] objectArray0 = new Object[9];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BaseGraph.checkGraphCondition(false, \"HE%}R~;8I|2}vD\", objectArray0);\n",
                        "        fail(\"Expecting exception: UnknownFormatConversionException\");\n",
                        "      \n",
                        "      } catch(UnknownFormatConversionException e) {\n",
                        "         //\n",
                        "         // Conversion = '}'\n",
                        "         //\n",
                        "         verifyException(\"java.util.Formatter\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "146-158:test12": {
                    "start": 146,
                    "end": 158,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        BaseGraph.checkGraphCondition(false, \"org.apache.commons.graph.model.MutableSpanningTree\", (Object[]) null);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "137-143:test11": {
                    "start": 137,
                    "end": 143,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      Integer integer0 = new Integer((-2862));\n",
                        "      VertexPair<Integer> vertexPair0 = new VertexPair<Integer>(integer0, integer0);\n",
                        "      UndirectedMutableGraph<VertexPair<Integer>, VertexPair<Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<VertexPair<Integer>, VertexPair<Integer>>();\n",
                        "      boolean boolean0 = undirectedMutableGraph0.containsVertex(vertexPair0);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<VertexPair<Integer>,VertexPair<Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "128-134:test10": {
                    "start": 128,
                    "end": 134,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\n",
                        "      DirectedMutableGraph<LinkedHashSet<Integer>, Object> directedMutableGraph0 = new DirectedMutableGraph<LinkedHashSet<Integer>, Object>();\n",
                        "      directedMutableGraph0.addVertex(linkedHashSet0);\n",
                        "      boolean boolean0 = directedMutableGraph0.containsVertex(linkedHashSet0);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/util/LinkedHashSet",
                            "LinkedHashSet<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<LinkedHashSet<Integer>,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "containsVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "121-125:test09": {
                    "start": 121,
                    "end": 125,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      DirectedMutableGraph<MutableSpanningTree<Integer, Integer, Integer>, Integer> directedMutableGraph0 = new DirectedMutableGraph<MutableSpanningTree<Integer, Integer, Integer>, Integer>();\n",
                        "      Map<MutableSpanningTree<Integer, Integer, Integer>, Set<MutableSpanningTree<Integer, Integer, Integer>>> map0 = directedMutableGraph0.getAdjacencyList();\n",
                        "      assertEquals(0, map0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<MutableSpanningTree<Integer,Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAdjacencyList"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "size"
                        ]
                    ]
                },
                "114-118:test08": {
                    "start": 114,
                    "end": 118,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<VertexPair<Integer>, Object> undirectedMutableGraph0 = new UndirectedMutableGraph<VertexPair<Integer>, Object>();\n",
                        "      Set<Object> set0 = undirectedMutableGraph0.getAllEdges();\n",
                        "      assertEquals(0, set0.size());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<VertexPair<Integer>,Object>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getAllEdges"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/util/Set",
                            "size"
                        ]
                    ]
                },
                "105-111:test07": {
                    "start": 105,
                    "end": 111,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Comparable<Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Comparable<Integer>>();\n",
                        "      Integer integer0 = new Integer(1);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      Comparable<Integer> comparable0 = undirectedMutableGraph0.getEdge(integer0, integer0);\n",
                        "      assertNull(comparable0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Comparable<Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getEdge"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "98-102:test06": {
                    "start": 98,
                    "end": 102,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, Integer>();\n",
                        "      Map<VertexPair<UndirectedMutableGraph<Integer, Integer>>, Integer> map0 = undirectedMutableGraph0.getIndexedEdges();\n",
                        "      assertTrue(map0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<UndirectedMutableGraph<Integer,Integer>,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedEdges"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "isEmpty"
                        ]
                    ]
                },
                "91-95:test05": {
                    "start": 91,
                    "end": 95,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, UndirectedMutableGraph<Integer, Integer>>();\n",
                        "      Map<UndirectedMutableGraph<Integer, Integer>, VertexPair<Integer>> map0 = undirectedMutableGraph0.getIndexedVertices();\n",
                        "      assertTrue(map0.isEmpty());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,UndirectedMutableGraph<Integer,Integer>>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getIndexedVertices"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "library",
                            "java.base/java/util/Map",
                            "isEmpty"
                        ]
                    ]
                },
                "82-88:test04": {
                    "start": 82,
                    "end": 88,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Integer> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Integer>();\n",
                        "      Integer integer0 = new Integer(1630);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      int int0 = undirectedMutableGraph0.getOrder();\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getOrder"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "72-79:test03": {
                    "start": 72,
                    "end": 79,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      DirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, MutableSpanningTree<Integer, Integer, Integer>> directedMutableGraph0 = new DirectedMutableGraph<UndirectedMutableGraph<Integer, Integer>, MutableSpanningTree<Integer, Integer, Integer>>();\n",
                        "      IntegerWeightBaseOperations integerWeightBaseOperations0 = new IntegerWeightBaseOperations();\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<Integer, Integer, Integer> mutableSpanningTree0 = new MutableSpanningTree<Integer, Integer, Integer>(integerWeightBaseOperations0, mapper0);\n",
                        "      VertexPair<UndirectedMutableGraph<Integer, Integer>> vertexPair0 = directedMutableGraph0.getVertices1(mutableSpanningTree0);\n",
                        "      assertNull(vertexPair0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/DirectedMutableGraph",
                            "DirectedMutableGraph<UndirectedMutableGraph<Integer,Integer>,MutableSpanningTree<Integer,Integer,Integer>>"
                        ],
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<Integer,Integer,Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getVertices1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "65-69:test02": {
                    "start": 65,
                    "end": 69,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      Object[] objectArray0 = new Object[5];\n",
                        "      BaseGraph.checkGraphCondition(true, \"\", objectArray0);\n",
                        "      assertEquals(5, objectArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.model.BaseGraph",
                            "BaseGraph",
                            "65-70:checkGraphCondition"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "45-62:test01": {
                    "start": 45,
                    "end": 62,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      IntegerWeightBaseOperations integerWeightBaseOperations0 = new IntegerWeightBaseOperations();\n",
                        "      Mapper<Integer, Integer> mapper0 = (Mapper<Integer, Integer>) mock(Mapper.class, new ViolatedAssumptionAnswer());\n",
                        "      MutableSpanningTree<VertexPair<Integer>, Integer, Integer> mutableSpanningTree0 = new MutableSpanningTree<VertexPair<Integer>, Integer, Integer>(integerWeightBaseOperations0, mapper0);\n",
                        "      Integer integer0 = new Integer((-2862));\n",
                        "      VertexPair<Integer> vertexPair0 = new VertexPair<Integer>(integer0, integer0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        mutableSpanningTree0.getEdge(vertexPair0, (VertexPair<Integer>) null);\n",
                        "        fail(\"Expecting exception: RuntimeException\");\n",
                        "      \n",
                        "      } catch(RuntimeException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.graph.model.BaseGraph\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-graph.src.main.org.apache.commons.graph.weight.primitive.IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations",
                            "IntegerWeightBaseOperations"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/MutableSpanningTree",
                            "MutableSpanningTree<VertexPair<Integer>,Integer,Integer>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/VertexPair",
                            "VertexPair<Integer>"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "35-42:test00": {
                    "start": 35,
                    "end": 42,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      UndirectedMutableGraph<Integer, Comparable<Integer>> undirectedMutableGraph0 = new UndirectedMutableGraph<Integer, Comparable<Integer>>();\n",
                        "      Integer integer0 = new Integer(1);\n",
                        "      undirectedMutableGraph0.addVertex(integer0);\n",
                        "      Integer integer1 = new Integer(1);\n",
                        "      undirectedMutableGraph0.addEdge(integer0, integer0, integer1);\n",
                        "      assertEquals(1, undirectedMutableGraph0.getOrder());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "org/apache/commons/graph/model/UndirectedMutableGraph",
                            "UndirectedMutableGraph<Integer,Comparable<Integer>>"
                        ],
                        [
                            "library",
                            "java.base/java/lang/Integer",
                            "Integer"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addVertex"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseMutableGraph",
                            "addEdge"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "org/apache/commons/graph/model/BaseGraph",
                            "getOrder"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}