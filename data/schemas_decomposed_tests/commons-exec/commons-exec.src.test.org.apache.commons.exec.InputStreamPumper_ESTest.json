{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-exec/src/test/java/org/apache/commons/exec/InputStreamPumper_ESTest.java",
    "imports": {
        "13-13:import OutputStream": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "11-11:import DataInputStream": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.DataInputStream;\n"
            ]
        },
        "12-12:import File": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.File;\n"
            ]
        },
        "14-14:import PipedInputStream": {
            "start": 14,
            "end": 14,
            "body": [
                "import java.io.PipedInputStream;\n"
            ]
        },
        "15-15:import SequenceInputStream": {
            "start": 15,
            "end": 15,
            "body": [
                "import java.io.SequenceInputStream;\n"
            ]
        },
        "16-16:import Enumeration": {
            "start": 16,
            "end": 16,
            "body": [
                "import java.util.Enumeration;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "19-19:import EvoRunnerParameters": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "24-24:import RunWith": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "18-18:import EvoRunner": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "17-17:import InputStreamPumper": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.exec.InputStreamPumper;\n"
            ]
        },
        "20-20:import ViolatedAssumptionAnswer": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "21-21:import MockFile": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFile;\n"
            ]
        },
        "22-22:import MockFileInputStream": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileInputStream;\n"
            ]
        },
        "23-23:import MockFileOutputStream": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileOutputStream;\n"
            ]
        },
        "10-10:import static Mockito.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "InputStreamPumper_ESTest": {
            "start": 27,
            "end": 27,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "InputStreamPumper_ESTest_scaffolding"
            ],
            "methods": {
                "49-57:test2": {
                    "start": 49,
                    "end": 57,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      Enumeration<DataInputStream> enumeration0 = (Enumeration<DataInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());\n",
                        "      doReturn(false).when(enumeration0).hasMoreElements();\n",
                        "      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);\n",
                        "      InputStreamPumper inputStreamPumper0 = new InputStreamPumper(sequenceInputStream0, (OutputStream) null);\n",
                        "      inputStreamPumper0.stopProcessing();\n",
                        "      inputStreamPumper0.run();\n",
                        "      assertEquals(100, InputStreamPumper.SLEEPING_TIME);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "library",
                            "java.base/java/io/SequenceInputStream",
                            "SequenceInputStream"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "50-54:InputStreamPumper"
                        ],
                        [
                            "library",
                            "java.base/java/util/Enumeration",
                            "hasMoreElements"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/stubbing/Stubber",
                            "when"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "doReturn"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "78-80:stopProcessing"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "60-73:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "41-46:test1": {
                    "start": 41,
                    "end": 46,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      InputStreamPumper inputStreamPumper0 = new InputStreamPumper(pipedInputStream0, (OutputStream) null);\n",
                        "      inputStreamPumper0.run();\n",
                        "      assertEquals(100, InputStreamPumper.SLEEPING_TIME);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "50-54:InputStreamPumper"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "60-73:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "30-38:test0": {
                    "start": 30,
                    "end": 38,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      File file0 = MockFile.createTempFile(\"Got exception while reading/writing the stream\", \":WB=UH_5qOzP_2i5\");\n",
                        "      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);\n",
                        "      mockFileOutputStream0.write(927);\n",
                        "      InputStreamPumper inputStreamPumper0 = new InputStreamPumper(mockFileInputStream0, mockFileOutputStream0);\n",
                        "      inputStreamPumper0.run();\n",
                        "      assertEquals(10000L, file0.length());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "createTempFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileInputStream",
                            "MockFileInputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "50-54:InputStreamPumper"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "write"
                        ],
                        [
                            "commons-exec.src.main.org.apache.commons.exec.InputStreamPumper",
                            "InputStreamPumper",
                            "60-73:run"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/File",
                            "length"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}