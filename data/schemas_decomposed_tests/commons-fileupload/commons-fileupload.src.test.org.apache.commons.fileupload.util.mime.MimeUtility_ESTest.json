{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-fileupload/src/test/java/org/apache/commons/fileupload/util/mime/MimeUtility_ESTest.java",
    "imports": {
        "25-25:import UnsupportedEncodingException": {
            "start": 25,
            "end": 25,
            "body": [
                "import java.io.UnsupportedEncodingException;\n"
            ]
        },
        "28-28:import EvoRunnerParameters": {
            "start": 28,
            "end": 28,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "29-29:import RunWith": {
            "start": 29,
            "end": 29,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "27-27:import EvoRunner": {
            "start": 27,
            "end": 27,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "22-22:import Test": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "26-26:import MimeUtility": {
            "start": 26,
            "end": 26,
            "body": [
                "import org.apache.commons.fileupload.util.mime.MimeUtility;\n"
            ]
        },
        "24-24:import static EvoAssertions.*": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "23-23:import static Assert.*": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "MimeUtility_ESTest": {
            "start": 32,
            "end": 32,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "MimeUtility_ESTest_scaffolding"
            ],
            "methods": {
                "114-117:test9": {
                    "start": 114,
                    "end": 117,
                    "body": [
                        "  public void test9()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\"=?=?=?'? \");\n",
                        "      assertEquals(\"=?=?=?'?\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test9()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "108-111:test8": {
                    "start": 108,
                    "end": 111,
                    "body": [
                        "  public void test8()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\"G~Kx\\\"K-1)dL\");\n",
                        "      assertEquals(\"G~Kx\\\"K-1)dL\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test8()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "102-105:test7": {
                    "start": 102,
                    "end": 105,
                    "body": [
                        "  public void test7()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\" =??=??=?\");\n",
                        "      assertEquals(\" \", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test7()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "96-99:test6": {
                    "start": 96,
                    "end": 99,
                    "body": [
                        "  public void test6()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\"f=?=?j?.?=?=?\");\n",
                        "      assertEquals(\"f=?=?j?.?=?=?\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test6()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "90-93:test5": {
                    "start": 90,
                    "end": 93,
                    "body": [
                        "  public void test5()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\"=?=?=??=?==\");\n",
                        "      assertEquals(\"\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test5()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "84-87:test4": {
                    "start": 84,
                    "end": 87,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\" =?\");\n",
                        "      assertEquals(\" =?\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "78-81:test3": {
                    "start": 78,
                    "end": 81,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      String string0 = MimeUtility.decodeText(\"=?=?\");\n",
                        "      assertEquals(\"=?=?\", string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "64-75:test2": {
                    "start": 64,
                    "end": 75,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      try { \n",
                        "        MimeUtility.decodeText(\"=?=?Q?6?=?=?=_?=?_=?\");\n",
                        "        fail(\"Expecting exception: UnsupportedEncodingException\");\n",
                        "      \n",
                        "      } catch(UnsupportedEncodingException e) {\n",
                        "         //\n",
                        "         // Invalid RFC 2047 encoding\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.util.mime.MimeUtility\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "50-61:test1": {
                    "start": 50,
                    "end": 61,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      try { \n",
                        "        MimeUtility.decodeText(\"=?=?=?=?=?\");\n",
                        "        fail(\"Expecting exception: UnsupportedEncodingException\");\n",
                        "      \n",
                        "      } catch(UnsupportedEncodingException e) {\n",
                        "         //\n",
                        "         // Invalid RFC 2047 encoding\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.util.mime.MimeUtility\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "35-47:test0": {
                    "start": 35,
                    "end": 47,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MimeUtility.decodeText((String) null);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.util.mime.MimeUtility\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.util.mime.MimeUtility",
                            "MimeUtility",
                            "79-145:decodeText"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}