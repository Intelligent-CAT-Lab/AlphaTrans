{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-fileupload/src/test/java/org/apache/commons/fileupload/MultipartStream_ESTest.java",
    "imports": {
        "26-26:import BufferedInputStream": {
            "start": 26,
            "end": 26,
            "body": [
                "import java.io.BufferedInputStream;\n"
            ]
        },
        "30-30:import IOException": {
            "start": 30,
            "end": 30,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "31-31:import InputStream": {
            "start": 31,
            "end": 31,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "27-27:import ByteArrayInputStream": {
            "start": 27,
            "end": 27,
            "body": [
                "import java.io.ByteArrayInputStream;\n"
            ]
        },
        "28-28:import DataInputStream": {
            "start": 28,
            "end": 28,
            "body": [
                "import java.io.DataInputStream;\n"
            ]
        },
        "29-29:import FileDescriptor": {
            "start": 29,
            "end": 29,
            "body": [
                "import java.io.FileDescriptor;\n"
            ]
        },
        "32-32:import PipedInputStream": {
            "start": 32,
            "end": 32,
            "body": [
                "import java.io.PipedInputStream;\n"
            ]
        },
        "33-33:import PipedOutputStream": {
            "start": 33,
            "end": 33,
            "body": [
                "import java.io.PipedOutputStream;\n"
            ]
        },
        "37-37:import EvoRunnerParameters": {
            "start": 37,
            "end": 37,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "40-40:import RunWith": {
            "start": 40,
            "end": 40,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "36-36:import EvoRunner": {
            "start": 36,
            "end": 36,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "22-22:import Test": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "35-35:import ProgressListener": {
            "start": 35,
            "end": 35,
            "body": [
                "import org.apache.commons.fileupload.ProgressListener;\n"
            ]
        },
        "34-34:import MultipartStream": {
            "start": 34,
            "end": 34,
            "body": [
                "import org.apache.commons.fileupload.MultipartStream;\n"
            ]
        },
        "38-38:import ViolatedAssumptionAnswer": {
            "start": 38,
            "end": 38,
            "body": [
                "import org.evosuite.runtime.ViolatedAssumptionAnswer;\n"
            ]
        },
        "39-39:import MockFileInputStream": {
            "start": 39,
            "end": 39,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileInputStream;\n"
            ]
        },
        "25-25:import static EvoAssertions.*": {
            "start": 25,
            "end": 25,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "24-24:import static Mockito.*": {
            "start": 24,
            "end": 24,
            "body": [
                "import static org.evosuite.shaded.org.mockito.Mockito.*;\n"
            ]
        },
        "23-23:import static Assert.*": {
            "start": 23,
            "end": 23,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "MultipartStream_ESTest": {
            "start": 43,
            "end": 43,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "MultipartStream_ESTest_scaffolding"
            ],
            "methods": {
                "858-862:test57": {
                    "start": 858,
                    "end": 862,
                    "body": [
                        "  public void test57()  throws Throwable  {\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte)9);\n",
                        "      multipartStream_ProgressNotifier0.noteItem();\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test57()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "119-122:noteItem"
                        ]
                    ]
                },
                "848-855:test56": {
                    "start": 848,
                    "end": 855,
                    "body": [
                        "  public void test56()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      multipartStream_ItemInputStream0.isClosed();\n",
                        "      assertEquals(0, multipartStream_ItemInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test56()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "841-843:isClosed"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "671-676:available"
                        ]
                    ]
                },
                "838-845:test55": {
                    "start": 838,
                    "end": 845,
                    "body": [
                        "  public void test55()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      byte[] byteArray0 = new byte[19];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(pipedInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      multipartStream_ItemInputStream0.getBytesRead();\n",
                        "      assertEquals(0, multipartStream_ItemInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test55()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "660-662:getBytesRead"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "671-676:available"
                        ]
                    ]
                },
                "823-835:test54": {
                    "start": 823,
                    "end": 835,
                    "body": [
                        "  public void test54()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.MultipartStream0();\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // boundary may not be null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test54()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "216-218:MultipartStream0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "812-820:test53": {
                    "start": 812,
                    "end": 820,
                    "body": [
                        "  public void test53()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n",
                        "      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(dataInputStream0, byteArray0);\n",
                        "      String string0 = multipartStream0.getHeaderEncoding();\n",
                        "      assertNull(string0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test53()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/DataInputStream",
                            "DataInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "312-314:getHeaderEncoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ]
                    ]
                },
                "803-809:test52": {
                    "start": 803,
                    "end": 809,
                    "body": [
                        "  public void test52()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      multipartStream0.setHeaderEncoding(\"\");\n",
                        "      assertEquals(10240, MultipartStream.HEADER_PART_SIZE_MAX);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test52()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "322-324:setHeaderEncoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "786-800:test51": {
                    "start": 786,
                    "end": 800,
                    "body": [
                        "  public void test51()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3((InputStream) null, byteArray0);\n",
                        "      byte[] byteArray1 = new byte[4];\n",
                        "      try { \n",
                        "        multipartStream0.setBoundary(byteArray1);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // The length of a boundary token cannot be changed\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test51()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "398-404:setBoundary"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "767-783:test50": {
                    "start": 767,
                    "end": 783,
                    "body": [
                        "  public void test50()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.MultipartStream1(multipartStream_ItemInputStream0, byteArray0, (-10));\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // The buffer size specified for the MultipartStream is too small\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test50()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "233-236:MultipartStream1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "750-764:test49": {
                    "start": 750,
                    "end": 764,
                    "body": [
                        "  public void test49()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      try { \n",
                        "        multipartStream0.readBoundary();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test49()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "356-381:readBoundary"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "741-747:test48": {
                    "start": 741,
                    "end": 747,
                    "body": [
                        "  public void test48()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      multipartStream0.setBoundary(byteArray0);\n",
                        "      assertNull(multipartStream0.getHeaderEncoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test48()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "398-404:setBoundary"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertNull"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "312-314:getHeaderEncoding"
                        ]
                    ]
                },
                "731-738:test47": {
                    "start": 731,
                    "end": 738,
                    "body": [
                        "  public void test47()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      byte[] byteArray1 = new byte[5];\n",
                        "      byteArray1[0] = (byte)13;\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray1);\n",
                        "      assertEquals((byte)13, MultipartStream.CR);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test47()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "712-728:test46": {
                    "start": 712,
                    "end": 728,
                    "body": [
                        "  public void test46()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      byteArray0[0] = (byte)13;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(bufferedInputStream0, byteArray0);\n",
                        "      try { \n",
                        "        multipartStream0.readHeaders();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test46()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "440-480:readHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "705-709:test45": {
                    "start": 705,
                    "end": 709,
                    "body": [
                        "  public void test45()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      boolean boolean0 = MultipartStream.arrayequals(byteArray0, byteArray0, (-2071));\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test45()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "532-539:arrayequals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "689-702:test44": {
                    "start": 689,
                    "end": 702,
                    "body": [
                        "  public void test44()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.arrayequals(byteArray0, byteArray0, 70);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index 9 out of bounds for length 9\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test44()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "532-539:arrayequals"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "670-686:test43": {
                    "start": 670,
                    "end": 686,
                    "body": [
                        "  public void test43()  throws Throwable  {\n",
                        "      FileDescriptor fileDescriptor0 = new FileDescriptor();\n",
                        "      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(mockFileInputStream0, byteArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream0.findByte((byte)36, (-2044));\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -2044 out of bounds for length 4096\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test43()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FileDescriptor",
                            "FileDescriptor"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileInputStream",
                            "MockFileInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "550-558:findByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "658-667:test42": {
                    "start": 658,
                    "end": 667,
                    "body": [
                        "  public void test42()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[23];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(bufferedInputStream0, byteArray0);\n",
                        "      multipartStream0.readByte();\n",
                        "      int int0 = multipartStream0.findByte((byte)36, 8);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test42()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "550-558:findByte"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "644-655:test41": {
                    "start": 644,
                    "end": 655,
                    "body": [
                        "  public void test41()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte) (-1));\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(byteArrayInputStream0, byteArray0, (byte)25, multipartStream_ProgressNotifier0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      int int0 = multipartStream_ItemInputStream0.read0();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test41()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "692-705:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "625-641:test40": {
                    "start": 625,
                    "end": 641,
                    "body": [
                        "  public void test40()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.close1(true);\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.read();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test40()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "752-772:close1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "688-690:read"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "606-622:test39": {
                    "start": 606,
                    "end": 622,
                    "body": [
                        "  public void test39()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.readAllBytes();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test39()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "readAllBytes"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "590-603:test38": {
                    "start": 590,
                    "end": 603,
                    "body": [
                        "  public void test38()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte) (-1));\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      byteArray1[2] = (byte) (-1);\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(byteArrayInputStream0, byteArray0, (byte)25, multipartStream_ProgressNotifier0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      byteArrayInputStream0.read(byteArray0);\n",
                        "      int int0 = multipartStream_ItemInputStream0.read();\n",
                        "      assertEquals(1L, multipartStream_ItemInputStream0.getBytesRead());\n",
                        "      assertEquals(255, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test38()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "688-690:read"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "read"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "660-662:getBytesRead"
                        ]
                    ]
                },
                "578-587:test37": {
                    "start": 578,
                    "end": 587,
                    "body": [
                        "  public void test37()  throws Throwable  {\n",
                        "      FileDescriptor fileDescriptor0 = new FileDescriptor();\n",
                        "      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier((ProgressListener) null, (byte)0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream2(mockFileInputStream0, byteArray0, multipartStream_ProgressNotifier0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.read1(byteArray0, (byte)13, (byte)0);\n",
                        "      assertEquals(0, multipartStream_ItemInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test37()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FileDescriptor",
                            "FileDescriptor"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileInputStream",
                            "MockFileInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "289-292:MultipartStream2"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "716-735:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "671-676:available"
                        ]
                    ]
                },
                "561-575:test36": {
                    "start": 561,
                    "end": 575,
                    "body": [
                        "  public void test36()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip((-1321L));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.read1(byteArray1, 10240, (-2532));\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test36()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "716-735:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "545-558:test35": {
                    "start": 545,
                    "end": 558,
                    "body": [
                        "  public void test35()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.read1(byteArray1, (byte)13, 1024);\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test35()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "716-735:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ]
                    ]
                },
                "534-542:test34": {
                    "start": 534,
                    "end": 542,
                    "body": [
                        "  public void test34()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.close1(true);\n",
                        "      multipartStream_ItemInputStream0.close0();\n",
                        "      assertTrue(multipartStream_ItemInputStream0.isClosed());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test34()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "752-772:close1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "742-744:close0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "841-843:isClosed"
                        ]
                    ]
                },
                "514-531:test33": {
                    "start": 514,
                    "end": 531,
                    "body": [
                        "  public void test33()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[23];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      byte[] byteArray1 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray1);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip(0L);\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.close0();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test33()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "742-744:close0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "493-511:test32": {
                    "start": 493,
                    "end": 511,
                    "body": [
                        "  public void test32()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte) (-1));\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(byteArrayInputStream0, byteArray0, (byte)25, multipartStream_ProgressNotifier0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.close1(true);\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.skip(0L);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test32()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "752-772:close1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "488-490:test31": {
                    "start": 488,
                    "end": 490,
                    "body": [
                        "  public void test31()  throws Throwable  {\n",
                        "      MultipartStream.IllegalBoundaryException multipartStream_IllegalBoundaryException0 = new MultipartStream.IllegalBoundaryException(\"]j`?$`2Z\u007f)\u007fi(q\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test31()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "IllegalBoundaryException",
                            "616-618:IllegalBoundaryException"
                        ]
                    ]
                },
                "483-485:test30": {
                    "start": 483,
                    "end": 485,
                    "body": [
                        "  public void test30()  throws Throwable  {\n",
                        "      MultipartStream.MalformedStreamException multipartStream_MalformedStreamException0 = new MultipartStream.MalformedStreamException(\"[pyuK61Ga;b5b)id+\");\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test30()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MalformedStreamException",
                            "598-600:MalformedStreamException"
                        ]
                    ]
                },
                "466-480:test29": {
                    "start": 466,
                    "end": 480,
                    "body": [
                        "  public void test29()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier((ProgressListener) null, 0);\n",
                        "      MultipartStream multipartStream0 = null;\n",
                        "      try {\n",
                        "        multipartStream0 = new MultipartStream(inputStream0, (byte[]) null, 1024, multipartStream_ProgressNotifier0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // boundary may not be null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test29()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "449-463:test28": {
                    "start": 449,
                    "end": 463,
                    "body": [
                        "  public void test28()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      MultipartStream multipartStream0 = null;\n",
                        "      try {\n",
                        "        multipartStream0 = new MultipartStream(pipedInputStream0, byteArray0, 5, (MultipartStream.ProgressNotifier) null);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // The buffer size specified for the MultipartStream is too small\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test28()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "438-446:test27": {
                    "start": 438,
                    "end": 446,
                    "body": [
                        "  public void test27()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      multipartStream0.readByte();\n",
                        "      byte byte0 = multipartStream0.readByte();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals((byte)0, byte0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test27()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "421-435:test26": {
                    "start": 421,
                    "end": 435,
                    "body": [
                        "  public void test26()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      try { \n",
                        "        multipartStream0.readByte();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // No more data is available\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test26()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "410-418:test25": {
                    "start": 410,
                    "end": 418,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte)9);\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(byteArrayInputStream0, byteArray0, 59, multipartStream_ProgressNotifier0);\n",
                        "      multipartStream0.readByte();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "401-407:test24": {
                    "start": 401,
                    "end": 407,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      byte[] byteArray1 = new byte[4];\n",
                        "      byteArray1[0] = (byte)45;\n",
                        "      boolean boolean0 = MultipartStream.arrayequals(byteArray1, byteArray0, (byte)13);\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "532-539:arrayequals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "383-398:test23": {
                    "start": 383,
                    "end": 398,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (-1815L));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.MultipartStream2(pipedInputStream0, (byte[]) null, multipartStream_ProgressNotifier0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // boundary may not be null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "289-292:MultipartStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "367-380:test22": {
                    "start": 367,
                    "end": 380,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.MultipartStream3(pipedInputStream0, (byte[]) null);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // boundary may not be null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "351-364:test21": {
                    "start": 351,
                    "end": 364,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[19];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        MultipartStream.arrayequals((byte[]) null, byteArray0, 1748);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "532-539:arrayequals"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "330-348:test20": {
                    "start": 330,
                    "end": 348,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[23];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      byte[] byteArray1 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray1);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip((-8L));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream0.newInputStream();\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -8 out of bounds for length 4096\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "309-327:test19": {
                    "start": 309,
                    "end": 327,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip((-284L));\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream0.readBoundary();\n",
                        "        fail(\"Expecting exception: ArrayIndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(ArrayIndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // Index -276 out of bounds for length 4096\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "356-381:readBoundary"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "292-306:test18": {
                    "start": 292,
                    "end": 306,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream1((InputStream) null, byteArray0, 468);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream0.readByte();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "233-236:MultipartStream1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "271-289:test17": {
                    "start": 271,
                    "end": 289,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, 0L);\n",
                        "      MultipartStream multipartStream1 = MultipartStream.MultipartStream2(multipartStream_ItemInputStream0, byteArray0, multipartStream_ProgressNotifier0);\n",
                        "      try { \n",
                        "        multipartStream1.readByte();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "289-292:MultipartStream2"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "254-268:test16": {
                    "start": 254,
                    "end": 268,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3((InputStream) null, byteArray0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        multipartStream0.readHeaders();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "440-480:readHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "246-251:test15": {
                    "start": 246,
                    "end": 251,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3((InputStream) null, byteArray0);\n",
                        "      int int0 = multipartStream0.findSeparator();\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "567-583:findSeparator"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "232-243:test14": {
                    "start": 232,
                    "end": 243,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[23];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      byte[] byteArray1 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray1);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip(0L);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      \n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream1 = multipartStream0.newInputStream();\n",
                        "      assertEquals(19, multipartStream_ItemInputStream1.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "671-676:available"
                        ]
                    ]
                },
                "220-229:test13": {
                    "start": 220,
                    "end": 229,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[23];\n",
                        "      byteArray0[0] = (byte)20;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(bufferedInputStream0, byteArray0);\n",
                        "      byte byte0 = multipartStream0.readByte();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals((byte)20, byte0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "210-217:test12": {
                    "start": 210,
                    "end": 217,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(inputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.newInputStream();\n",
                        "      int int0 = multipartStream_ItemInputStream0.available();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "671-676:available"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "204-207:test11": {
                    "start": 204,
                    "end": 207,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier((ProgressListener) null, 0);\n",
                        "      multipartStream_ProgressNotifier0.noteBytesRead(0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "110-116:noteBytesRead"
                        ]
                    ]
                },
                "193-201:test10": {
                    "start": 193,
                    "end": 201,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte) (-1));\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(bufferedInputStream0, byteArray0, (byte)9, multipartStream_ProgressNotifier0);\n",
                        "      assertEquals(10240, MultipartStream.HEADER_PART_SIZE_MAX);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "174-190:test09": {
                    "start": 174,
                    "end": 190,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream1(pipedInputStream0, byteArray0, 490);\n",
                        "      byte[] byteArray1 = new byte[6];\n",
                        "      try { \n",
                        "        multipartStream0.setBoundary(byteArray1);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // The length of a boundary token cannot be changed\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "233-236:MultipartStream1"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "398-404:setBoundary"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "153-171:test08": {
                    "start": 153,
                    "end": 171,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[0] = (byte)20;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte)20);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(bufferedInputStream0, byteArray0, (byte)20, multipartStream_ProgressNotifier0);\n",
                        "      try { \n",
                        "        multipartStream0.readHeaders();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "440-480:readHeaders"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "146-150:test07": {
                    "start": 146,
                    "end": 150,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[19];\n",
                        "      boolean boolean0 = MultipartStream.arrayequals(byteArray0, byteArray0, (byte)13);\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "532-539:arrayequals"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                },
                "136-143:test06": {
                    "start": 136,
                    "end": 143,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      FileDescriptor fileDescriptor0 = new FileDescriptor();\n",
                        "      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(mockFileInputStream0, byteArray0);\n",
                        "      int int0 = multipartStream0.findByte((byte)36, 8);\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FileDescriptor",
                            "FileDescriptor"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileInputStream",
                            "MockFileInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "550-558:findByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "123-133:test05": {
                    "start": 123,
                    "end": 133,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip((byte)13);\n",
                        "      int int0 = multipartStream0.findByte((byte) (-1), 0);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "550-558:findByte"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "103-120:test04": {
                    "start": 103,
                    "end": 120,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      byte[] byteArray1 = new byte[8];\n",
                        "      byteArray1[0] = (byte)13;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.close0();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "742-744:close0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "83-100:test03": {
                    "start": 83,
                    "end": 100,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      byteArray0[0] = (byte)20;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(bufferedInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      try { \n",
                        "        multipartStream_ItemInputStream0.read1(byteArray0, 1, 2006);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Stream ended unexpectedly\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.fileupload.MultipartStream$ItemInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "library",
                            "java.base/java/io/BufferedInputStream",
                            "BufferedInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "716-735:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "73-80:test02": {
                    "start": 73,
                    "end": 80,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      multipartStream0.readByte();\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "332-344:readByte"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "61-70:test01": {
                    "start": 61,
                    "end": 70,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = MultipartStream.MultipartStream3(byteArrayInputStream0, byteArray0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      multipartStream_ItemInputStream0.skip((byte)13);\n",
                        "      multipartStream0.newInputStream();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "302-304:MultipartStream3"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "782-796:skip"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "502-504:newInputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "46-58:test00": {
                    "start": 46,
                    "end": 58,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      ProgressListener progressListener0 = mock(ProgressListener.class, new ViolatedAssumptionAnswer());\n",
                        "      MultipartStream.ProgressNotifier multipartStream_ProgressNotifier0 = new MultipartStream.ProgressNotifier(progressListener0, (byte) (-1));\n",
                        "      byte[] byteArray1 = new byte[9];\n",
                        "      byteArray1[0] = (byte)9;\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);\n",
                        "      MultipartStream multipartStream0 = new MultipartStream(byteArrayInputStream0, byteArray0, (byte)9, multipartStream_ProgressNotifier0);\n",
                        "      MultipartStream.ItemInputStream multipartStream_ItemInputStream0 = multipartStream0.new ItemInputStream();\n",
                        "      int int0 = multipartStream_ItemInputStream0.read();\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals(9, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/shaded/org/mockito/Mockito",
                            "mock"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/ViolatedAssumptionAnswer",
                            "ViolatedAssumptionAnswer"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ProgressNotifier",
                            "100-103:ProgressNotifier"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "MultipartStream",
                            "252-279:MultipartStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "639-641:ItemInputStream"
                        ],
                        [
                            "commons-fileupload.src.main.org.apache.commons.fileupload.MultipartStream",
                            "ItemInputStream",
                            "688-690:read"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}