{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-codec/src/test/java/org/apache/commons/codec/binary/BaseNCodecOutputStream_ESTest.java",
    "imports": {
        "13-13:import PipedOutputStream": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.io.PipedOutputStream;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "21-21:import EvoRunnerParameters": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "11-11:import IOException": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "12-12:import OutputStream": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "25-25:import RunWith": {
            "start": 25,
            "end": 25,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "20-20:import EvoRunner": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "14-14:import CodecPolicy": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "15-15:import Base16": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.codec.binary.Base16;\n"
            ]
        },
        "18-18:import BaseNCodec": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodec;\n"
            ]
        },
        "19-19:import BaseNCodecOutputStream": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodecOutputStream;\n"
            ]
        },
        "16-16:import Base32": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.codec.binary.Base32;\n"
            ]
        },
        "17-17:import Base64": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.codec.binary.Base64;\n"
            ]
        },
        "22-22:import MockFile": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFile;\n"
            ]
        },
        "23-23:import MockFileOutputStream": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileOutputStream;\n"
            ]
        },
        "24-24:import MockPrintStream": {
            "start": 24,
            "end": 24,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintStream;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "BaseNCodecOutputStream_ESTest": {
            "start": 28,
            "end": 28,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "BaseNCodecOutputStream_ESTest_scaffolding"
            ],
            "methods": {
                "423-437:test25": {
                    "start": 423,
                    "end": 437,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base16_0, true);\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write(76);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "176-178:write"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "413-420:test24": {
                    "start": 413,
                    "end": 420,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"zpB<J*VSf#j>|7\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);\n",
                        "      Base16 base16_0 = Base16.Base161(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base16_0, true);\n",
                        "      boolean boolean0 = baseNCodecOutputStream0.isStrictDecoding();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "282-284:Base161"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "402-410:test23": {
                    "start": 402,
                    "end": 410,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base64 base64_0 = new Base64(76, byteArray0, false, codecPolicy0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base64_0, false);\n",
                        "      baseNCodecOutputStream0.close();\n",
                        "      assertTrue(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "427-458:Base64"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "74-78:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "384-399:test22": {
                    "start": 384,
                    "end": 399,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base321(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, true);\n",
                        "      baseNCodecOutputStream0.write(76);\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.close();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "176-178:write"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "74-78:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "365-381:test21": {
                    "start": 365,
                    "end": 381,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base64_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, (-124), 76);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "346-362:test20": {
                    "start": 346,
                    "end": 362,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base321(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, true);\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, 76, (-75));\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "326-343:test19": {
                    "start": 326,
                    "end": 343,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"I\", \"I\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n",
                        "      Base32 base32_0 = Base32.Base321(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base32_0, false);\n",
                        "      byte[] byteArray0 = new byte[5];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, 76, 866);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "307-323:test18": {
                    "start": 307,
                    "end": 323,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base322(true, (byte)0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, true);\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, (byte)0, 64);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "288-290:Base322"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "297-304:test17": {
                    "start": 297,
                    "end": 304,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base320();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, true);\n",
                        "      byte[] byteArray0 = new byte[2];\n",
                        "      baseNCodecOutputStream0.write0(byteArray0, (byte)0, (byte)0);\n",
                        "      assertEquals(2, byteArray0.length);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "265-267:Base320"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "276-294:test16": {
                    "start": 276,
                    "end": 294,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base64 base64_0 = new Base64(76, byteArray0, false, codecPolicy0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base64_0, false);\n",
                        "      baseNCodecOutputStream0.write(76);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.close();\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. Decoding requires at least two trailing 6-bit characters to create bytes.\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base64\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "427-458:Base64"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "176-178:write"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "74-78:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "266-273:test15": {
                    "start": 266,
                    "end": 273,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"I\", \"I\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n",
                        "      Base32 base32_0 = Base32.Base321(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base32_0, false);\n",
                        "      baseNCodecOutputStream0.flush0();\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "100-102:flush0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "256-263:test14": {
                    "start": 256,
                    "end": 263,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"I\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n",
                        "      Base32 base32_0 = Base32.Base322(true, (byte)0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base32_0, true);\n",
                        "      baseNCodecOutputStream0.write1((byte)0);\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "288-290:Base322"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "180-183:write1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "246-253:test13": {
                    "start": 246,
                    "end": 253,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"I\", \"I\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n",
                        "      Base32 base32_0 = Base32.Base321(true);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base32_0, false);\n",
                        "      baseNCodecOutputStream0.eof();\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "276-278:Base321"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "86-92:eof"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "235-243:test12": {
                    "start": 235,
                    "end": 243,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      MockFile mockFile0 = new MockFile(\"I\");\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);\n",
                        "      Base32 base32_0 = Base32.Base322(true, (byte)0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base32_0, true);\n",
                        "      byte[] byteArray0 = new byte[5];\n",
                        "      baseNCodecOutputStream0.write0(byteArray0, (byte)0, 1);\n",
                        "      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFile",
                            "MockFile"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "288-290:Base322"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertArrayEquals"
                        ]
                    ]
                },
                "216-232:test11": {
                    "start": 216,
                    "end": 232,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"org.apache.commons.codec.DecoderException\", true);\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockFileOutputStream0, base16_0, false);\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, (byte)1, 1);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Invalid octet in encoded value: 0\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "199-213:test10": {
                    "start": 199,
                    "end": 213,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, (BaseNCodec) null, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.close();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "74-78:close"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "182-196:test09": {
                    "start": 182,
                    "end": 196,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      OutputStream outputStream0 = OutputStream.nullOutputStream();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(outputStream0, (BaseNCodec) null, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.eof();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/OutputStream",
                            "nullOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "86-92:eof"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "165-179:test08": {
                    "start": 165,
                    "end": 179,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      Base32 base32_0 = Base32.Base322(true, (byte)62);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream((OutputStream) null, base32_0, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.flush0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "288-290:Base322"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "100-102:flush0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "147-162:test07": {
                    "start": 147,
                    "end": 162,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base16_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write(64);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Invalid octet in encoded value: 64\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "176-178:write"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "130-144:test06": {
                    "start": 130,
                    "end": 144,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, (BaseNCodec) null, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write((-1094));\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "176-178:write"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "112-127:test05": {
                    "start": 112,
                    "end": 127,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base322(true, (byte)0);\n",
                        "      byte[] byteArray0 = new byte[9];\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, true);\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0(byteArray0, (byte)0, (byte)9);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "288-290:Base322"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "94-109:test04": {
                    "start": 94,
                    "end": 109,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base32 base32_0 = Base32.Base320();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base32_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write0((byte[]) null, 76, 64);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // array\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "265-267:Base320"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "151-167:write0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "77-91:test03": {
                    "start": 77,
                    "end": 91,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(pipedOutputStream0, base16_0, true);\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write1(64);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "180-183:write1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "58-74:test02": {
                    "start": 58,
                    "end": 74,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockPrintStream0, base16_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write1(4455);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Invalid octet in encoded value: 103\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "180-183:write1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "42-55:test01": {
                    "start": 42,
                    "end": 55,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream((OutputStream) null, (BaseNCodec) null, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecOutputStream0.write1(73);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecOutputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "180-183:write1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "31-39:test00": {
                    "start": 31,
                    "end": 39,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"array\");\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base64 base64_0 = new Base64(51, byteArray0, false, codecPolicy0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = new BaseNCodecOutputStream(mockFileOutputStream0, base64_0, false);\n",
                        "      boolean boolean0 = baseNCodecOutputStream0.isStrictDecoding();\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "427-458:Base64"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "56-61:BaseNCodecOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}