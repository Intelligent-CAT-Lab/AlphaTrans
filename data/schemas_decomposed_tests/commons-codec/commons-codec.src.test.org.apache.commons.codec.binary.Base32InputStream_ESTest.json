{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-codec/src/test/java/org/apache/commons/codec/binary/Base32InputStream_ESTest.java",
    "imports": {
        "13-13:import PipedInputStream": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.io.PipedInputStream;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "18-18:import EvoRunnerParameters": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "12-12:import InputStream": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "11-11:import FileDescriptor": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.FileDescriptor;\n"
            ]
        },
        "20-20:import RunWith": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "17-17:import EvoRunner": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "14-14:import CodecPolicy": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "16-16:import BaseNCodecInputStream": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodecInputStream;\n"
            ]
        },
        "15-15:import Base32InputStream": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.codec.binary.Base32InputStream;\n"
            ]
        },
        "19-19:import MockFileInputStream": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileInputStream;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Base32InputStream_ESTest": {
            "start": 23,
            "end": 23,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Base32InputStream_ESTest_scaffolding"
            ],
            "methods": {
                "68-82:test4": {
                    "start": 68,
                    "end": 82,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = Base32InputStream.Base32InputStream0(pipedInputStream0);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Base32InputStream.Base32InputStream2(baseNCodecInputStream0, false, 23, (byte[]) null);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineLength 23 > 0, but lineSeparator is null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base32\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "64-66:Base32InputStream0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "93-100:Base32InputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "51-65:test3": {
                    "start": 51,
                    "end": 65,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base32InputStream base32InputStream0 = null;\n",
                        "      try {\n",
                        "        base32InputStream0 = new Base32InputStream(pipedInputStream0, true, 1703, (byte[]) null, codecPolicy0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineLength 1703 > 0, but lineSeparator is null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base32\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "117-128:Base32InputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "42-48:test2": {
                    "start": 42,
                    "end": 48,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base32InputStream base32InputStream0 = new Base32InputStream(pipedInputStream0, true, 2781, byteArray0, codecPolicy0);\n",
                        "      assertEquals(1, base32InputStream0.available());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "117-128:Base32InputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ]
                    ]
                },
                "34-39:test1": {
                    "start": 34,
                    "end": 39,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      FileDescriptor fileDescriptor0 = new FileDescriptor();\n",
                        "      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = Base32InputStream.Base32InputStream1(mockFileInputStream0, true);\n",
                        "      assertFalse(baseNCodecInputStream0.markSupported());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/FileDescriptor",
                            "FileDescriptor"
                        ],
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileInputStream",
                            "MockFileInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "75-78:Base32InputStream1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "99-101:markSupported"
                        ]
                    ]
                },
                "26-31:test0": {
                    "start": 26,
                    "end": 31,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = Base32InputStream.Base32InputStream2(inputStream0, true, 1327, byteArray0);\n",
                        "      assertFalse(baseNCodecInputStream0.markSupported());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32InputStream",
                            "Base32InputStream",
                            "93-100:Base32InputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "99-101:markSupported"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}