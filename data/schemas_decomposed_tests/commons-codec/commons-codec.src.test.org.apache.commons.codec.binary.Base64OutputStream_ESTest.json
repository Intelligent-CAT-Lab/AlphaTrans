{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-codec/src/test/java/org/apache/commons/codec/binary/Base64OutputStream_ESTest.java",
    "imports": {
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "17-17:import EvoRunnerParameters": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "12-12:import OutputStream": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "11-11:import ByteArrayOutputStream": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.ByteArrayOutputStream;\n"
            ]
        },
        "19-19:import RunWith": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "16-16:import EvoRunner": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "13-13:import CodecPolicy": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "15-15:import BaseNCodecOutputStream": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodecOutputStream;\n"
            ]
        },
        "14-14:import Base64OutputStream": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.codec.binary.Base64OutputStream;\n"
            ]
        },
        "18-18:import MockFileOutputStream": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockFileOutputStream;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Base64OutputStream_ESTest": {
            "start": 22,
            "end": 22,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Base64OutputStream_ESTest_scaffolding"
            ],
            "methods": {
                "75-80:test4": {
                    "start": 75,
                    "end": 80,
                    "body": [
                        "  public void test4()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base64OutputStream base64OutputStream0 = new Base64OutputStream((OutputStream) null, false, 0, byteArray0, codecPolicy0);\n",
                        "      assertFalse(base64OutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test4()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "124-131:Base64OutputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "69-72:test3": {
                    "start": 69,
                    "end": 72,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base64OutputStream.Base64OutputStream2((OutputStream) null, true, (-907), (byte[]) null);\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "101-107:Base64OutputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "50-66:test2": {
                    "start": 50,
                    "end": 66,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base64OutputStream.Base64OutputStream0((OutputStream) null);\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      byteArray0[0] = (byte)66;\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base64OutputStream base64OutputStream0 = null;\n",
                        "      try {\n",
                        "        base64OutputStream0 = new Base64OutputStream(baseNCodecOutputStream0, true, 1074, byteArray0, codecPolicy0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineSeparator must not contain base64 characters: [B]\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base64\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "72-74:Base64OutputStream0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "124-131:Base64OutputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "43-47:test1": {
                    "start": 43,
                    "end": 47,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base64OutputStream.Base64OutputStream1(mockFileOutputStream0, false);\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockFileOutputStream",
                            "MockFileOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "83-86:Base64OutputStream1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "25-40:test0": {
                    "start": 25,
                    "end": 40,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      byteArray0[0] = (byte)116;\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Base64OutputStream.Base64OutputStream2(byteArrayOutputStream0, false, 0, byteArray0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineSeparator must not contain base64 characters: [t]\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base64\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayOutputStream",
                            "ByteArrayOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64OutputStream",
                            "Base64OutputStream",
                            "101-107:Base64OutputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}