{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-codec/src/test/java/org/apache/commons/codec/binary/Base32OutputStream_ESTest.java",
    "imports": {
        "12-12:import PipedOutputStream": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.PipedOutputStream;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "17-17:import EvoRunnerParameters": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "11-11:import OutputStream": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.OutputStream;\n"
            ]
        },
        "19-19:import RunWith": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "16-16:import EvoRunner": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "13-13:import CodecPolicy": {
            "start": 13,
            "end": 13,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "15-15:import BaseNCodecOutputStream": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodecOutputStream;\n"
            ]
        },
        "14-14:import Base32OutputStream": {
            "start": 14,
            "end": 14,
            "body": [
                "import org.apache.commons.codec.binary.Base32OutputStream;\n"
            ]
        },
        "18-18:import MockPrintStream": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.evosuite.runtime.mock.java.io.MockPrintStream;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "Base32OutputStream_ESTest": {
            "start": 22,
            "end": 22,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "Base32OutputStream_ESTest_scaffolding"
            ],
            "methods": {
                "57-72:test3": {
                    "start": 57,
                    "end": 72,
                    "body": [
                        "  public void test3()  throws Throwable  {\n",
                        "      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base32OutputStream.Base32OutputStream0(pipedOutputStream0);\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base32OutputStream base32OutputStream0 = null;\n",
                        "      try {\n",
                        "        base32OutputStream0 = new Base32OutputStream(baseNCodecOutputStream0, true, 5618, (byte[]) null, codecPolicy0);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineLength 5618 > 0, but lineSeparator is null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base32\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test3()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedOutputStream",
                            "PipedOutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "68-70:Base32OutputStream0"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "121-132:Base32OutputStream"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "47-54:test2": {
                    "start": 47,
                    "end": 54,
                    "body": [
                        "  public void test2()  throws Throwable  {\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(\"RZ15\");\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base32OutputStream base32OutputStream0 = new Base32OutputStream(mockPrintStream0, false, 0, byteArray0, codecPolicy0);\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base32OutputStream.Base32OutputStream2(base32OutputStream0, false, (-4040), byteArray0);\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test2()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "121-132:Base32OutputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "97-104:Base32OutputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "40-44:test1": {
                    "start": 40,
                    "end": 44,
                    "body": [
                        "  public void test1()  throws Throwable  {\n",
                        "      MockPrintStream mockPrintStream0 = new MockPrintStream(\"RZ15\");\n",
                        "      BaseNCodecOutputStream baseNCodecOutputStream0 = Base32OutputStream.Base32OutputStream1(mockPrintStream0, false);\n",
                        "      assertFalse(baseNCodecOutputStream0.isStrictDecoding());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test1()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "/org/evosuite/runtime/mock/java/io/MockPrintStream",
                            "MockPrintStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "79-82:Base32OutputStream1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecOutputStream",
                            "BaseNCodecOutputStream",
                            "136-138:isStrictDecoding"
                        ]
                    ]
                },
                "25-37:test0": {
                    "start": 25,
                    "end": 37,
                    "body": [
                        "  public void test0()  throws Throwable  {\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        Base32OutputStream.Base32OutputStream2((OutputStream) null, true, 4, (byte[]) null);\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // lineLength 4 > 0, but lineSeparator is null\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base32\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test0()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32OutputStream",
                            "Base32OutputStream",
                            "97-104:Base32OutputStream2"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}