{
    "path": "java_projects/cleaned_final_projects_evosuite/commons-codec/src/test/java/org/apache/commons/codec/binary/BaseNCodecInputStream_ESTest.java",
    "imports": {
        "14-14:import PipedInputStream": {
            "start": 14,
            "end": 14,
            "body": [
                "import java.io.PipedInputStream;\n"
            ]
        },
        "8-8:import Test": {
            "start": 8,
            "end": 8,
            "body": [
                "import org.junit.Test;\n"
            ]
        },
        "22-22:import EvoRunnerParameters": {
            "start": 22,
            "end": 22,
            "body": [
                "import org.evosuite.runtime.EvoRunnerParameters;\n"
            ]
        },
        "12-12:import IOException": {
            "start": 12,
            "end": 12,
            "body": [
                "import java.io.IOException;\n"
            ]
        },
        "11-11:import ByteArrayInputStream": {
            "start": 11,
            "end": 11,
            "body": [
                "import java.io.ByteArrayInputStream;\n"
            ]
        },
        "13-13:import InputStream": {
            "start": 13,
            "end": 13,
            "body": [
                "import java.io.InputStream;\n"
            ]
        },
        "23-23:import RunWith": {
            "start": 23,
            "end": 23,
            "body": [
                "import org.junit.runner.RunWith;\n"
            ]
        },
        "21-21:import EvoRunner": {
            "start": 21,
            "end": 21,
            "body": [
                "import org.evosuite.runtime.EvoRunner;\n"
            ]
        },
        "15-15:import CodecPolicy": {
            "start": 15,
            "end": 15,
            "body": [
                "import org.apache.commons.codec.CodecPolicy;\n"
            ]
        },
        "16-16:import Base16": {
            "start": 16,
            "end": 16,
            "body": [
                "import org.apache.commons.codec.binary.Base16;\n"
            ]
        },
        "19-19:import BaseNCodec": {
            "start": 19,
            "end": 19,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodec;\n"
            ]
        },
        "20-20:import BaseNCodecInputStream": {
            "start": 20,
            "end": 20,
            "body": [
                "import org.apache.commons.codec.binary.BaseNCodecInputStream;\n"
            ]
        },
        "17-17:import Base32": {
            "start": 17,
            "end": 17,
            "body": [
                "import org.apache.commons.codec.binary.Base32;\n"
            ]
        },
        "18-18:import Base64": {
            "start": 18,
            "end": 18,
            "body": [
                "import org.apache.commons.codec.binary.Base64;\n"
            ]
        },
        "10-10:import static EvoAssertions.*": {
            "start": 10,
            "end": 10,
            "body": [
                "import static org.evosuite.runtime.EvoAssertions.*;\n"
            ]
        },
        "9-9:import static Assert.*": {
            "start": 9,
            "end": 9,
            "body": [
                "import static org.junit.Assert.*;\n"
            ]
        }
    },
    "classes": {
        "BaseNCodecInputStream_ESTest": {
            "start": 26,
            "end": 26,
            "is_abstract": false,
            "is_interface": false,
            "nested_inside": [],
            "nests": [],
            "implements": [],
            "extends": [
                "BaseNCodecInputStream_ESTest_scaffolding"
            ],
            "methods": {
                "388-396:test25": {
                    "start": 388,
                    "end": 396,
                    "body": [
                        "  public void test25()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[4];\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base64 base64_0 = new Base64(756, byteArray0, false, codecPolicy0);\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(1746);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base64_0, false);\n",
                        "      baseNCodecInputStream0.mark((byte)0);\n",
                        "      assertFalse(baseNCodecInputStream0.markSupported());\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test25()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "427-458:Base64"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "91-91:mark"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "99-101:markSupported"
                        ]
                    ]
                },
                "379-385:test24": {
                    "start": 379,
                    "end": 385,
                    "body": [
                        "  public void test24()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, false);\n",
                        "      boolean boolean0 = baseNCodecInputStream0.markSupported();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test24()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "99-101:markSupported"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "362-376:test23": {
                    "start": 362,
                    "end": 376,
                    "body": [
                        "  public void test23()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.reset();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // mark/reset not supported\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test23()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "191-193:reset"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "353-359:test22": {
                    "start": 353,
                    "end": 359,
                    "body": [
                        "  public void test22()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      boolean boolean0 = baseNCodecInputStream0.isStrictDecoding();\n",
                        "      assertFalse(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test22()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "76-78:isStrictDecoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertFalse"
                        ]
                    ]
                },
                "344-350:test21": {
                    "start": 344,
                    "end": 350,
                    "body": [
                        "  public void test21()  throws Throwable  {\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      Base32 base32_0 = Base32.Base323((byte)47);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base32_0, true);\n",
                        "      int int0 = baseNCodecInputStream0.available();\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test21()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "299-301:Base323"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "334-341:test20": {
                    "start": 334,
                    "end": 341,
                    "body": [
                        "  public void test20()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      baseNCodecInputStream0.skip(76);\n",
                        "      int int0 = baseNCodecInputStream0.available();\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test20()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "323-331:test19": {
                    "start": 323,
                    "end": 331,
                    "body": [
                        "  public void test19()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base32 base32_0 = Base32.Base324(4);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, false);\n",
                        "      int int0 = baseNCodecInputStream0.read0();\n",
                        "      assertEquals(0, baseNCodecInputStream0.available());\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test19()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "312-314:Base324"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ]
                    ]
                },
                "304-320:test18": {
                    "start": 304,
                    "end": 320,
                    "body": [
                        "  public void test18()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read1(byteArray0, (-1), (-1));\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test18()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "285-301:test17": {
                    "start": 285,
                    "end": 301,
                    "body": [
                        "  public void test17()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base32 base32_0 = Base32.Base320();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read1(byteArray0, 76, (-752));\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test17()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "265-267:Base320"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "266-282:test16": {
                    "start": 266,
                    "end": 282,
                    "body": [
                        "  public void test16()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      byte[] byteArray0 = new byte[0];\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read1(byteArray0, 64, 64);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test16()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "247-263:test15": {
                    "start": 247,
                    "end": 263,
                    "body": [
                        "  public void test15()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[1];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base64_0, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read1(byteArray0, 1, 1);\n",
                        "        fail(\"Expecting exception: IndexOutOfBoundsException\");\n",
                        "      \n",
                        "      } catch(IndexOutOfBoundsException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test15()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "236-244:test14": {
                    "start": 236,
                    "end": 244,
                    "body": [
                        "  public void test14()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base16 base16_0 = new Base16(true, codecPolicy0);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base16_0, true);\n",
                        "      int int0 = baseNCodecInputStream0.read1(byteArray0, 0, 0);\n",
                        "      assertEquals(0, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test14()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "265-280:Base16"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "225-233:test13": {
                    "start": 225,
                    "end": 233,
                    "body": [
                        "  public void test13()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base64_0, true);\n",
                        "      long long0 = baseNCodecInputStream0.skip(76);\n",
                        "      assertEquals(0, baseNCodecInputStream0.available());\n",
                        "      assertEquals(12L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test13()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "61-64:available"
                        ]
                    ]
                },
                "207-222:test12": {
                    "start": 207,
                    "end": 222,
                    "body": [
                        "  public void test12()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, true);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.skip((-1273L));\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Negative skip length: -1273\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test12()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "198-204:test11": {
                    "start": 198,
                    "end": 204,
                    "body": [
                        "  public void test11()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, base64_0, false);\n",
                        "      long long0 = baseNCodecInputStream0.skip(0L);\n",
                        "      assertEquals(0L, long0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test11()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ]
                    ]
                },
                "187-195:test10": {
                    "start": 187,
                    "end": 195,
                    "body": [
                        "  public void test10()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base32 base32_0 = Base32.Base324(4);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, false);\n",
                        "      int int0 = baseNCodecInputStream0.read1(byteArray0, 4, 1);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals((-1), int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test10()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "312-314:Base324"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "175-184:test09": {
                    "start": 175,
                    "end": 184,
                    "body": [
                        "  public void test09()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.LENIENT;\n",
                        "      Base16 base16_0 = new Base16(true, codecPolicy0);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base16_0, true);\n",
                        "      int int0 = baseNCodecInputStream0.read1(byteArray0, 0, 1);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test09()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "265-280:Base16"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "163-172:test08": {
                    "start": 163,
                    "end": 172,
                    "body": [
                        "  public void test08()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base32 base32_0 = Base32.Base323((byte)1);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base32_0, true);\n",
                        "      baseNCodecInputStream0.read0();\n",
                        "      int int0 = baseNCodecInputStream0.read1(byteArray0, 1, (byte)1);\n",
                        "      assertEquals(0, byteArrayInputStream0.available());\n",
                        "      assertEquals(1, int0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test08()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "299-301:Base323"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertEquals"
                        ],
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "available"
                        ]
                    ]
                },
                "145-160:test07": {
                    "start": 145,
                    "end": 160,
                    "body": [
                        "  public void test07()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[3];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, (BaseNCodec) null, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.isStrictDecoding();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test07()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "76-78:isStrictDecoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "128-142:test06": {
                    "start": 128,
                    "end": 142,
                    "body": [
                        "  public void test06()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base64_0, true);\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read0();\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test06()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "109-125:test05": {
                    "start": 109,
                    "end": 125,
                    "body": [
                        "  public void test05()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      Base16 base16_0 = Base16.Base162();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base16_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read0();\n",
                        "        fail(\"Expecting exception: IllegalArgumentException\");\n",
                        "      \n",
                        "      } catch(IllegalArgumentException e) {\n",
                        "         //\n",
                        "         // Invalid octet in encoded value: 0\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.Base16\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test05()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "286-288:Base162"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "92-106:test04": {
                    "start": 92,
                    "end": 106,
                    "body": [
                        "  public void test04()  throws Throwable  {\n",
                        "      InputStream inputStream0 = InputStream.nullInputStream();\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(inputStream0, (BaseNCodec) null, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read0();\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test04()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/InputStream",
                            "nullInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "109-119:read0"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "74-89:test03": {
                    "start": 74,
                    "end": 89,
                    "body": [
                        "  public void test03()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(76);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base64_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.read1((byte[]) null, 1416, 64);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // array\n",
                        "         //\n",
                        "         verifyException(\"java.util.Objects\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test03()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "133-178:read1"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "57-71:test02": {
                    "start": 57,
                    "end": 71,
                    "body": [
                        "  public void test02()  throws Throwable  {\n",
                        "      Base64 base64_0 = Base64.Base645();\n",
                        "      PipedInputStream pipedInputStream0 = new PipedInputStream(64);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(pipedInputStream0, base64_0, false);\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.skip(76);\n",
                        "        fail(\"Expecting exception: IOException\");\n",
                        "      \n",
                        "      } catch(IOException e) {\n",
                        "         //\n",
                        "         // Pipe not connected\n",
                        "         //\n",
                        "         verifyException(\"java.io.PipedInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test02()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base64",
                            "Base64",
                            "477-479:Base645"
                        ],
                        [
                            "library",
                            "java.base/java/io/PipedInputStream",
                            "PipedInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "40-54:test01": {
                    "start": 40,
                    "end": 54,
                    "body": [
                        "  public void test01()  throws Throwable  {\n",
                        "      Base32 base32_0 = Base32.Base324(201);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream((InputStream) null, base32_0, false);\n",
                        "      // Undeclared exception!\n",
                        "      try { \n",
                        "        baseNCodecInputStream0.skip(1893L);\n",
                        "        fail(\"Expecting exception: NullPointerException\");\n",
                        "      \n",
                        "      } catch(NullPointerException e) {\n",
                        "         //\n",
                        "         // no message in exception (getMessage() returned null)\n",
                        "         //\n",
                        "         verifyException(\"org.apache.commons.codec.binary.BaseNCodecInputStream\", e);\n",
                        "      }\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test01()",
                    "parameters": [],
                    "calls": [
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base32",
                            "Base32",
                            "312-314:Base324"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "202-220:skip"
                        ],
                        [
                            "library",
                            "Assert",
                            "fail"
                        ],
                        [
                            "library",
                            "EvoAssertions",
                            "verifyException"
                        ]
                    ]
                },
                "29-37:test00": {
                    "start": 29,
                    "end": 37,
                    "body": [
                        "  public void test00()  throws Throwable  {\n",
                        "      byte[] byteArray0 = new byte[8];\n",
                        "      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);\n",
                        "      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;\n",
                        "      Base16 base16_0 = new Base16(false, codecPolicy0);\n",
                        "      BaseNCodecInputStream baseNCodecInputStream0 = new BaseNCodecInputStream(byteArrayInputStream0, base16_0, true);\n",
                        "      boolean boolean0 = baseNCodecInputStream0.isStrictDecoding();\n",
                        "      assertTrue(boolean0);\n",
                        "  }\n"
                    ],
                    "is_constructor": false,
                    "annotations": [
                        "Test(timeout = 4000)"
                    ],
                    "modifiers": [
                        "public"
                    ],
                    "return_types": [
                        [
                            "void",
                            "void"
                        ]
                    ],
                    "signature": "test00()",
                    "parameters": [],
                    "calls": [
                        [
                            "library",
                            "java.base/java/io/ByteArrayInputStream",
                            "ByteArrayInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.Base16",
                            "Base16",
                            "265-280:Base16"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "46-52:BaseNCodecInputStream"
                        ],
                        [
                            "commons-codec.src.main.org.apache.commons.codec.binary.BaseNCodecInputStream",
                            "BaseNCodecInputStream",
                            "76-78:isStrictDecoding"
                        ],
                        [
                            "library",
                            "Assert",
                            "assertTrue"
                        ]
                    ]
                }
            },
            "fields": {}
        }
    }
}